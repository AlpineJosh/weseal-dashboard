import {
  doublePrecision,
  integer,
  pgSchema,
  smallint,
  text,
  timestamp,
  varchar,
} from "drizzle-orm/pg-core";
import { createInsertSchema } from "drizzle-zod";

export const sageSchema = pgSchema("SAGE");

export const AUDIT_HEADER = sageSchema.table("AUDIT_HEADER", {
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  ITEM_COUNT: integer("ITEM_COUNT"),
  TYPE: varchar("TYPE"),
  DATE: timestamp("DATE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  SALES_PURCHASE_REF: varchar("SALES_PURCHASE_REF"),
  BANK_CODE: varchar("BANK_CODE"),
  BANK_NAME: varchar("BANK_NAME"),
  INV_REF: varchar("INV_REF"),
  INV_REF_NUMERIC: integer("INV_REF_NUMERIC"),
  USER_NAME: varchar("USER_NAME"),
  DETAILS: varchar("DETAILS"),
  DUE_DATE: timestamp("DUE_DATE"),
  LAST_CHARGE_DATE: timestamp("LAST_CHARGE_DATE"),
  FINANCE_CHARGE: smallint("FINANCE_CHARGE"),
  INTEREST_RATE: doublePrecision("INTEREST_RATE"),
  ELECTRONIC_TRANS: smallint("ELECTRONIC_TRANS"),
  DISPUTED: smallint("DISPUTED"),
  PAID_FLAG: varchar("PAID_FLAG"),
  PAID_STATUS: varchar("PAID_STATUS"),
  DELETED_FLAG: smallint("DELETED_FLAG"),
  DATE_FLAG: smallint("DATE_FLAG"),
  DATE_BF: timestamp("DATE_BF"),
  DATE_FROM: timestamp("DATE_FROM"),
  DATE_TO: timestamp("DATE_TO"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  GROSS_AMOUNT: doublePrecision("GROSS_AMOUNT"),
  BANK_AMOUNT: doublePrecision("BANK_AMOUNT"),
  AMOUNT_PAID: doublePrecision("AMOUNT_PAID"),
  PAYMENT: doublePrecision("PAYMENT"),
  OUTSTANDING: doublePrecision("OUTSTANDING"),
  FOREIGN_OUTSTANDING: doublePrecision("FOREIGN_OUTSTANDING"),
  FOREIGN_NET_AMOUNT: doublePrecision("FOREIGN_NET_AMOUNT"),
  FOREIGN_TAX_AMOUNT: doublePrecision("FOREIGN_TAX_AMOUNT"),
  FOREIGN_GROSS_AMOUNT: doublePrecision("FOREIGN_GROSS_AMOUNT"),
  FOREIGN_AMOUNT_PAID: doublePrecision("FOREIGN_AMOUNT_PAID"),
  FOREIGN_BANK_AMOUNT: doublePrecision("FOREIGN_BANK_AMOUNT"),
  CURRENCY: smallint("CURRENCY"),
  CURRENCY_TYPE: smallint("CURRENCY_TYPE"),
  EURO_GROSS: doublePrecision("EURO_GROSS"),
  EURO_RATE: doublePrecision("EURO_RATE"),
  FOREIGN_RATE: doublePrecision("FOREIGN_RATE"),
  IS_DISCOUNT: smallint("IS_DISCOUNT"),
  AGED_BALANCE: doublePrecision("AGED_BALANCE"),
  AGED_FUTURE: doublePrecision("AGED_FUTURE"),
  AGED_CURRENT: doublePrecision("AGED_CURRENT"),
  AGED_30: doublePrecision("AGED_30"),
  AGED_60: doublePrecision("AGED_60"),
  AGED_90: doublePrecision("AGED_90"),
  AGED_OLDER: doublePrecision("AGED_OLDER"),
  AGED_CUM_CURRENT: doublePrecision("AGED_CUM_CURRENT"),
  AGED_CUM_30: doublePrecision("AGED_CUM_30"),
  AGED_CUM_60: doublePrecision("AGED_CUM_60"),
  AGED_CUM_90: doublePrecision("AGED_CUM_90"),
  FOREIGN_AGED_BALANCE: doublePrecision("FOREIGN_AGED_BALANCE"),
  FOREIGN_AGED_FUTURE: doublePrecision("FOREIGN_AGED_FUTURE"),
  FOREIGN_AGED_CURRENT: doublePrecision("FOREIGN_AGED_CURRENT"),
  FOREIGN_AGED_30: doublePrecision("FOREIGN_AGED_30"),
  FOREIGN_AGED_60: doublePrecision("FOREIGN_AGED_60"),
  FOREIGN_AGED_90: doublePrecision("FOREIGN_AGED_90"),
  FOREIGN_AGED_OLDER: doublePrecision("FOREIGN_AGED_OLDER"),
  FOREIGN_AGED_CUM_CURRENT: doublePrecision("FOREIGN_AGED_CUM_CURRENT"),
  FOREIGN_AGED_CUM_30: doublePrecision("FOREIGN_AGED_CUM_30"),
  FOREIGN_AGED_CUM_60: doublePrecision("FOREIGN_AGED_CUM_60"),
  FOREIGN_AGED_CUM_90: doublePrecision("FOREIGN_AGED_CUM_90"),
  BANK_FLAG: varchar("BANK_FLAG"),
  HEADER_NUMBER: integer("HEADER_NUMBER"),
  DATE_ENTERED: timestamp("DATE_ENTERED"),
  DATE_BANK_RECONCILED: timestamp("DATE_BANK_RECONCILED"),
  CIS_RECONCILED: smallint("CIS_RECONCILED"),
  SPS_REF: varchar("SPS_REF"),
  DEPOSIT_DATE: timestamp("DEPOSIT_DATE"),
  DEPOSIT_FLAG: varchar("DEPOSIT_FLAG"),
  RECURRING_ENTRY_ID: integer("RECURRING_ENTRY_ID"),
  ISP_REFERENCE: integer("ISP_REFERENCE"),
  OVERRIDDEN_CLOSED_LEDGER_DATE: timestamp("OVERRIDDEN_CLOSED_LEDGER_DATE"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  TAX_ID: varchar("TAX_ID"),
  REVAL_TRANSACTION_FLAG: smallint("REVAL_TRANSACTION_FLAG"),
  POSTED_BY_DIRECT_DEBIT_SETTLEMENT: smallint(
    "POSTED_BY_DIRECT_DEBIT_SETTLEMENT",
  ),
  DATE_AMENDED: timestamp("DATE_AMENDED"),
  USER_NAME_AMENDED: varchar("USER_NAME_AMENDED"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_AUDIT_HEADER_SCHEMA = createInsertSchema(AUDIT_HEADER);

export const AUDIT_JOURNAL = sageSchema.table("AUDIT_JOURNAL", {
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  TYPE: varchar("TYPE"),
  DATE: timestamp("DATE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  BANK_CODE: varchar("BANK_CODE"),
  INV_REF: varchar("INV_REF"),
  USER_NAME: varchar("USER_NAME"),
  DETAILS: varchar("DETAILS"),
  EXTRA_REF: varchar("EXTRA_REF"),
  DISPUTED: smallint("DISPUTED"),
  STMT_TEXT: varchar("STMT_TEXT"),
  BANK_FLAG: varchar("BANK_FLAG"),
  VAT_FLAG: varchar("VAT_FLAG"),
  PAID_FLAG: varchar("PAID_FLAG"),
  PAID_STATUS: varchar("PAID_STATUS"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  TAX_CODE: varchar("TAX_CODE"),
  DELETED_FLAG: smallint("DELETED_FLAG"),
  AMOUNT: doublePrecision("AMOUNT"),
  FOREIGN_AMOUNT: doublePrecision("FOREIGN_AMOUNT"),
  RTD_FLAG: varchar("RTD_FLAG"),
  SPLIT_NUMBER: integer("SPLIT_NUMBER"),
  HEADER_NUMBER: integer("HEADER_NUMBER"),
  VAT_FLAG_CODE: smallint("VAT_FLAG_CODE"),
  DATE_FLAG: smallint("DATE_FLAG"),
  DATE_ENTERED: timestamp("DATE_ENTERED"),
  VAT_RECONCILED_DATE: timestamp("VAT_RECONCILED_DATE"),
  DISPUTE_CODE: smallint("DISPUTE_CODE"),
  FUND_ID: integer("FUND_ID"),
  VAT_LEDGER_RETURN_ID: integer("VAT_LEDGER_RETURN_ID"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_AUDIT_JOURNAL_SCHEMA = createInsertSchema(AUDIT_JOURNAL);

export const AUDIT_SPLIT = sageSchema.table("AUDIT_SPLIT", {
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  TYPE: varchar("TYPE"),
  DATE: timestamp("DATE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  BANK_CODE: varchar("BANK_CODE"),
  INV_REF: varchar("INV_REF"),
  USER_NAME: varchar("USER_NAME"),
  DETAILS: varchar("DETAILS"),
  EXTRA_REF: varchar("EXTRA_REF"),
  DISPUTED: smallint("DISPUTED"),
  STMT_TEXT: varchar("STMT_TEXT"),
  BANK_FLAG: varchar("BANK_FLAG"),
  VAT_FLAG: varchar("VAT_FLAG"),
  PAID_FLAG: varchar("PAID_FLAG"),
  PAID_STATUS: varchar("PAID_STATUS"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  TAX_CODE: varchar("TAX_CODE"),
  DELETED_FLAG: smallint("DELETED_FLAG"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  GROSS_AMOUNT: doublePrecision("GROSS_AMOUNT"),
  AMOUNT_PAID: doublePrecision("AMOUNT_PAID"),
  PAYMENT: doublePrecision("PAYMENT"),
  OUTSTANDING: doublePrecision("OUTSTANDING"),
  FOREIGN_OUTSTANDING: doublePrecision("FOREIGN_OUTSTANDING"),
  RTD_FLAG: varchar("RTD_FLAG"),
  FOREIGN_NET_AMOUNT: doublePrecision("FOREIGN_NET_AMOUNT"),
  FOREIGN_TAX_AMOUNT: doublePrecision("FOREIGN_TAX_AMOUNT"),
  FOREIGN_GROSS_AMOUNT: doublePrecision("FOREIGN_GROSS_AMOUNT"),
  FOREIGN_AMOUNT_PAID: doublePrecision("FOREIGN_AMOUNT_PAID"),
  AGED_BALANCE: doublePrecision("AGED_BALANCE"),
  AGED_FUTURE: doublePrecision("AGED_FUTURE"),
  AGED_CURRENT: doublePrecision("AGED_CURRENT"),
  AGED_30: doublePrecision("AGED_30"),
  AGED_60: doublePrecision("AGED_60"),
  AGED_90: doublePrecision("AGED_90"),
  AGED_OLDER: doublePrecision("AGED_OLDER"),
  AGED_CUM_CURRENT: doublePrecision("AGED_CUM_CURRENT"),
  AGED_CUM_30: doublePrecision("AGED_CUM_30"),
  AGED_CUM_60: doublePrecision("AGED_CUM_60"),
  AGED_CUM_90: doublePrecision("AGED_CUM_90"),
  FOREIGN_AGED_BALANCE: doublePrecision("FOREIGN_AGED_BALANCE"),
  FOREIGN_AGED_FUTURE: doublePrecision("FOREIGN_AGED_FUTURE"),
  FOREIGN_AGED_CURRENT: doublePrecision("FOREIGN_AGED_CURRENT"),
  FOREIGN_AGED_30: doublePrecision("FOREIGN_AGED_30"),
  FOREIGN_AGED_60: doublePrecision("FOREIGN_AGED_60"),
  FOREIGN_AGED_90: doublePrecision("FOREIGN_AGED_90"),
  FOREIGN_AGED_OLDER: doublePrecision("FOREIGN_AGED_OLDER"),
  FOREIGN_AGED_CUM_CURRENT: doublePrecision("FOREIGN_AGED_CUM_CURRENT"),
  FOREIGN_AGED_CUM_30: doublePrecision("FOREIGN_AGED_CUM_30"),
  FOREIGN_AGED_CUM_60: doublePrecision("FOREIGN_AGED_CUM_60"),
  FOREIGN_AGED_CUM_90: doublePrecision("FOREIGN_AGED_CUM_90"),
  SPLIT_NUMBER: integer("SPLIT_NUMBER"),
  HEADER_NUMBER: integer("HEADER_NUMBER"),
  VAT_FLAG_CODE: smallint("VAT_FLAG_CODE"),
  DATE_FLAG: smallint("DATE_FLAG"),
  DATE_ENTERED: timestamp("DATE_ENTERED"),
  VAT_RECONCILED_DATE: timestamp("VAT_RECONCILED_DATE"),
  DISPUTE_CODE: smallint("DISPUTE_CODE"),
  FUND_ID: integer("FUND_ID"),
  VAT_LEDGER_RETURN_ID: integer("VAT_LEDGER_RETURN_ID"),
  GIFT_AID: smallint("GIFT_AID"),
  SMALL_DONATION: smallint("SMALL_DONATION"),
  GASDS_CLAIM_SUBMITTED: smallint("GASDS_CLAIM_SUBMITTED"),
  HAS_EXTERNAL_LINK: smallint("HAS_EXTERNAL_LINK"),
  PROJECT_ID: smallint("PROJECT_ID"),
  COST_CODE_ID: integer("COST_CODE_ID"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_AUDIT_SPLIT_SCHEMA = createInsertSchema(AUDIT_SPLIT);

export const AUDIT_USAGE = sageSchema.table("AUDIT_USAGE", {
  TYPE: varchar("TYPE"),
  USAGE_NUMBER: integer("USAGE_NUMBER"),
  SPLIT_NUMBER: integer("SPLIT_NUMBER"),
  SPLIT_CROSSREF: integer("SPLIT_CROSSREF"),
  REFERENCE: varchar("REFERENCE"),
  DETAILS: varchar("DETAILS"),
  USER_NAME: varchar("USER_NAME"),
  DATE: timestamp("DATE"),
  AMOUNT: doublePrecision("AMOUNT"),
  FOREIGN_AMOUNT: doublePrecision("FOREIGN_AMOUNT"),
  DELETED_FLAG: smallint("DELETED_FLAG"),
  CIS_VAT: doublePrecision("CIS_VAT"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_AUDIT_USAGE_SCHEMA = createInsertSchema(AUDIT_USAGE);

export const AUDIT_VAT = sageSchema.table("AUDIT_VAT", {
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  TYPE: varchar("TYPE"),
  DATE: timestamp("DATE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  BANK_CODE: varchar("BANK_CODE"),
  INV_REF: varchar("INV_REF"),
  USER_NAME: varchar("USER_NAME"),
  DETAILS: varchar("DETAILS"),
  EXTRA_REF: varchar("EXTRA_REF"),
  DISPUTED: smallint("DISPUTED"),
  STMT_TEXT: varchar("STMT_TEXT"),
  BANK_FLAG: varchar("BANK_FLAG"),
  VAT_FLAG: varchar("VAT_FLAG"),
  PAID_FLAG: varchar("PAID_FLAG"),
  PAID_STATUS: varchar("PAID_STATUS"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  TAX_CODE: varchar("TAX_CODE"),
  DELETED_FLAG: smallint("DELETED_FLAG"),
  RTD_FLAG: varchar("RTD_FLAG"),
  AMOUNT: doublePrecision("AMOUNT"),
  AMOUNT_INVOICE: doublePrecision("AMOUNT_INVOICE"),
  AMOUNT_CREDIT: doublePrecision("AMOUNT_CREDIT"),
  AMOUNT_BANK: doublePrecision("AMOUNT_BANK"),
  AMOUNT_JOURNAL: doublePrecision("AMOUNT_JOURNAL"),
  VAT_BOX: smallint("VAT_BOX"),
  VAT_TRAN: smallint("VAT_TRAN"),
  VAT_TRAN_NAME: varchar("VAT_TRAN_NAME"),
  VAT_INCLUDE: smallint("VAT_INCLUDE"),
  SPLIT_NUMBER: integer("SPLIT_NUMBER"),
  HEADER_NUMBER: integer("HEADER_NUMBER"),
  VAT_FLAG_CODE: smallint("VAT_FLAG_CODE"),
  DATE_FLAG: smallint("DATE_FLAG"),
  DATE_ENTERED: timestamp("DATE_ENTERED"),
  VAT_RECONCILED_DATE: timestamp("VAT_RECONCILED_DATE"),
  DISPUTE_CODE: smallint("DISPUTE_CODE"),
  FUND_ID: integer("FUND_ID"),
  VAT_LEDGER_RETURN_ID: integer("VAT_LEDGER_RETURN_ID"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_AUDIT_VAT_SCHEMA = createInsertSchema(AUDIT_VAT);

export const AUDIT_HISTORY_HEADER = sageSchema.table("AUDIT_HISTORY_HEADER", {
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  ITEM_COUNT: integer("ITEM_COUNT"),
  TYPE: varchar("TYPE"),
  DATE: timestamp("DATE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  SALES_PURCHASE_REF: varchar("SALES_PURCHASE_REF"),
  BANK_CODE: varchar("BANK_CODE"),
  INV_REF: varchar("INV_REF"),
  USER_NAME: varchar("USER_NAME"),
  DETAILS: varchar("DETAILS"),
  DUE_DATE: timestamp("DUE_DATE"),
  LAST_CHARGE_DATE: timestamp("LAST_CHARGE_DATE"),
  FINANCE_CHARGE: smallint("FINANCE_CHARGE"),
  INTEREST_RATE: doublePrecision("INTEREST_RATE"),
  ELECTRONIC_TRANS: smallint("ELECTRONIC_TRANS"),
  DISPUTED: smallint("DISPUTED"),
  PAID_FLAG: varchar("PAID_FLAG"),
  PAID_STATUS: varchar("PAID_STATUS"),
  DELETED_FLAG: smallint("DELETED_FLAG"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  GROSS_AMOUNT: doublePrecision("GROSS_AMOUNT"),
  BANK_AMOUNT: doublePrecision("BANK_AMOUNT"),
  AMOUNT_PAID: doublePrecision("AMOUNT_PAID"),
  FOREIGN_NET_AMOUNT: doublePrecision("FOREIGN_NET_AMOUNT"),
  FOREIGN_TAX_AMOUNT: doublePrecision("FOREIGN_TAX_AMOUNT"),
  FOREIGN_GROSS_AMOUNT: doublePrecision("FOREIGN_GROSS_AMOUNT"),
  FOREIGN_AMOUNT_PAID: doublePrecision("FOREIGN_AMOUNT_PAID"),
  FOREIGN_BANK_AMOUNT: doublePrecision("FOREIGN_BANK_AMOUNT"),
  CURRENCY: smallint("CURRENCY"),
  CURRENCY_TYPE: smallint("CURRENCY_TYPE"),
  EURO_GROSS: doublePrecision("EURO_GROSS"),
  EURO_RATE: doublePrecision("EURO_RATE"),
  FOREIGN_RATE: doublePrecision("FOREIGN_RATE"),
  BANK_FLAG: varchar("BANK_FLAG"),
  HEADER_NUMBER: integer("HEADER_NUMBER"),
  DATE_ENTERED: timestamp("DATE_ENTERED"),
  DATE_BANK_RECONCILED: timestamp("DATE_BANK_RECONCILED"),
  CATE_ID: integer("CATE_ID"),
  CIS_RECONCILED: smallint("CIS_RECONCILED"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_AUDIT_HISTORY_HEADER_SCHEMA =
  createInsertSchema(AUDIT_HISTORY_HEADER);

export const AUDIT_HISTORY_JOURNAL = sageSchema.table("AUDIT_HISTORY_JOURNAL", {
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  TYPE: varchar("TYPE"),
  DATE: timestamp("DATE"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  USER_NAME: varchar("USER_NAME"),
  DETAILS: varchar("DETAILS"),
  EXTRA_REF: varchar("EXTRA_REF"),
  DISPUTED: smallint("DISPUTED"),
  VAT_FLAG: varchar("VAT_FLAG"),
  PAID_FLAG: varchar("PAID_FLAG"),
  PAID_STATUS: varchar("PAID_STATUS"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  TAX_CODE: varchar("TAX_CODE"),
  DELETED_FLAG: smallint("DELETED_FLAG"),
  AMOUNT: doublePrecision("AMOUNT"),
  FOREIGN_AMOUNT: doublePrecision("FOREIGN_AMOUNT"),
  SPLIT_NUMBER: integer("SPLIT_NUMBER"),
  HEADER_NUMBER: integer("HEADER_NUMBER"),
  VAT_FLAG_CODE: smallint("VAT_FLAG_CODE"),
  DATE_ENTERED: timestamp("DATE_ENTERED"),
  VAT_RECONCILED_DATE: timestamp("VAT_RECONCILED_DATE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_AUDIT_HISTORY_JOURNAL_SCHEMA = createInsertSchema(
  AUDIT_HISTORY_JOURNAL,
);

export const AUDIT_HISTORY_SPLIT = sageSchema.table("AUDIT_HISTORY_SPLIT", {
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  TYPE: varchar("TYPE"),
  DATE: timestamp("DATE"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  USER_NAME: varchar("USER_NAME"),
  DETAILS: varchar("DETAILS"),
  EXTRA_REF: varchar("EXTRA_REF"),
  DISPUTED: smallint("DISPUTED"),
  VAT_FLAG: varchar("VAT_FLAG"),
  PAID_FLAG: varchar("PAID_FLAG"),
  PAID_STATUS: varchar("PAID_STATUS"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  TAX_CODE: varchar("TAX_CODE"),
  DELETED_FLAG: smallint("DELETED_FLAG"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  GROSS_AMOUNT: doublePrecision("GROSS_AMOUNT"),
  AMOUNT_PAID: doublePrecision("AMOUNT_PAID"),
  FOREIGN_NET_AMOUNT: doublePrecision("FOREIGN_NET_AMOUNT"),
  FOREIGN_TAX_AMOUNT: doublePrecision("FOREIGN_TAX_AMOUNT"),
  FOREIGN_GROSS_AMOUNT: doublePrecision("FOREIGN_GROSS_AMOUNT"),
  FOREIGN_AMOUNT_PAID: doublePrecision("FOREIGN_AMOUNT_PAID"),
  SPLIT_NUMBER: integer("SPLIT_NUMBER"),
  HEADER_NUMBER: integer("HEADER_NUMBER"),
  VAT_FLAG_CODE: smallint("VAT_FLAG_CODE"),
  DATE_ENTERED: timestamp("DATE_ENTERED"),
  VAT_RECONCILED_DATE: timestamp("VAT_RECONCILED_DATE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_AUDIT_HISTORY_SPLIT_SCHEMA =
  createInsertSchema(AUDIT_HISTORY_SPLIT);

export const AUDIT_HISTORY_USAGE = sageSchema.table("AUDIT_HISTORY_USAGE", {
  TYPE: varchar("TYPE"),
  USAGE_NUMBER: integer("USAGE_NUMBER"),
  SPLIT_NUMBER: integer("SPLIT_NUMBER"),
  SPLIT_CROSSREF: integer("SPLIT_CROSSREF"),
  REFERENCE: varchar("REFERENCE"),
  DETAILS: varchar("DETAILS"),
  USER_NAME: varchar("USER_NAME"),
  DATE: timestamp("DATE"),
  AMOUNT: doublePrecision("AMOUNT"),
  FOREIGN_AMOUNT: doublePrecision("FOREIGN_AMOUNT"),
  DELETED_FLAG: smallint("DELETED_FLAG"),
  CIS_VAT: doublePrecision("CIS_VAT"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_AUDIT_HISTORY_USAGE_SCHEMA =
  createInsertSchema(AUDIT_HISTORY_USAGE);

export const CLEAR_AUDIT_TRAIL_EVENT = sageSchema.table(
  "CLEAR_AUDIT_TRAIL_EVENT",
  {
    CATE_ID: integer("CATE_ID"),
    DATE: timestamp("DATE"),
    USER_NAME: varchar("USER_NAME"),
    LOCATION_TYPE: varchar("LOCATION_TYPE"),
    LOCATION: varchar("LOCATION"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CLEAR_AUDIT_TRAIL_EVENT_SCHEMA = createInsertSchema(
  CLEAR_AUDIT_TRAIL_EVENT,
);

export const CLEARED_TRAN_RANGE = sageSchema.table("CLEARED_TRAN_RANGE", {
  CATE_ID: integer("CATE_ID"),
  START_TRAN_NUMBER: integer("START_TRAN_NUMBER"),
  END_TRAN_NUMBER: integer("END_TRAN_NUMBER"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CLEARED_TRAN_RANGE_SCHEMA =
  createInsertSchema(CLEARED_TRAN_RANGE);

export const DELETED_RECORDS = sageSchema.table("DELETED_RECORDS", {
  TABLE_ID: integer("TABLE_ID"),
  FOREIGN_REF: text("FOREIGN_REF"),
  DELETION_DATE_TIME: timestamp("DELETION_DATE_TIME"),
  FOREIGN_REF_TYPE: smallint("FOREIGN_REF_TYPE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_DELETED_RECORDS_SCHEMA =
  createInsertSchema(DELETED_RECORDS);

export const DISPUTE_REASON = sageSchema.table("DISPUTE_REASON", {
  CODE: smallint("CODE"),
  DETAILS: varchar("DETAILS"),
});

export const INSERT_DISPUTE_REASON_SCHEMA = createInsertSchema(DISPUTE_REASON);

export const BANK = sageSchema.table("BANK", {
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  ACCOUNT_NUMBER: varchar("ACCOUNT_NUMBER"),
  ACCOUNT_NAME: varchar("ACCOUNT_NAME"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  C_ADDRESS_1: varchar("C_ADDRESS_1"),
  C_ADDRESS_2: varchar("C_ADDRESS_2"),
  C_ADDRESS_3: varchar("C_ADDRESS_3"),
  C_ADDRESS_4: varchar("C_ADDRESS_4"),
  C_ADDRESS_5: varchar("C_ADDRESS_5"),
  TELEPHONE: varchar("TELEPHONE"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  FAX: varchar("FAX"),
  E_MAIL: varchar("E_MAIL"),
  WEB_ADDRESS: varchar("WEB_ADDRESS"),
  CURRENCY: smallint("CURRENCY"),
  SORT_CODE: varchar("SORT_CODE"),
  OVERDRAFT_LIMIT: doublePrecision("OVERDRAFT_LIMIT"),
  NUMBER: smallint("NUMBER"),
  FOREIGN_BALANCE: doublePrecision("FOREIGN_BALANCE"),
  TYPE: varchar("TYPE"),
  IBAN: varchar("IBAN"),
  BICSWIFT: varchar("BICSWIFT"),
  LAST_REC_DATE: timestamp("LAST_REC_DATE"),
  LAST_REC_BALANCE: doublePrecision("LAST_REC_BALANCE"),
  ROLL_NUMBER: varchar("ROLL_NUMBER"),
  ADDITIONAL_REF1: varchar("ADDITIONAL_REF1"),
  ADDITIONAL_REF2: varchar("ADDITIONAL_REF2"),
  ADDITIONAL_REF3: varchar("ADDITIONAL_REF3"),
  INACTIVE_FLAG: integer("INACTIVE_FLAG"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_BANK_SCHEMA = createInsertSchema(BANK);

export const BANK_STATEMENT = sageSchema.table("BANK_STATEMENT", {
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  STATEMENT_REF: varchar("STATEMENT_REF"),
  CLOSING_BALANCE: doublePrecision("CLOSING_BALANCE"),
  OPENING_BALANCE: doublePrecision("OPENING_BALANCE"),
  AMOUNT_IN: doublePrecision("AMOUNT_IN"),
  AMOUNT_OUT: doublePrecision("AMOUNT_OUT"),
  INTEREST: doublePrecision("INTEREST"),
  INTEREST_ID: integer("INTEREST_ID"),
  INTEREST_NOM_CODE: varchar("INTEREST_NOM_CODE"),
  CHARGES: doublePrecision("CHARGES"),
  CHARGES_ID: integer("CHARGES_ID"),
  CHARGES_NOM_CODE: varchar("CHARGES_NOM_CODE"),
  STATEMENT_DATE: timestamp("STATEMENT_DATE"),
  INTEREST_DATE: timestamp("INTEREST_DATE"),
  CHARGES_DATE: timestamp("CHARGES_DATE"),
  RECONCILIATION_DATE: timestamp("RECONCILIATION_DATE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_BANK_STATEMENT_SCHEMA = createInsertSchema(BANK_STATEMENT);

export const BANK_STATEMENT_LINE = sageSchema.table("BANK_STATEMENT_LINE", {
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  ITEM_NUMBER: integer("ITEM_NUMBER"),
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  AMOUNT: doublePrecision("AMOUNT"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_BANK_STATEMENT_LINE_SCHEMA =
  createInsertSchema(BANK_STATEMENT_LINE);

export const RECURRING = sageSchema.table("RECURRING", {
  UNIQUE_ID: integer("UNIQUE_ID"),
  TYPE: varchar("TYPE"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  BANK_CODE: varchar("BANK_CODE"),
  REFERENCE: varchar("REFERENCE"),
  DETAILS: varchar("DETAILS"),
  SUSPEND_POSTING: smallint("SUSPEND_POSTING"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  DATE_LAST_POSTING: timestamp("DATE_LAST_POSTING"),
  DAY_OF_POSTING: smallint("DAY_OF_POSTING"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  REQUIRED_POSTINGS: smallint("REQUIRED_POSTINGS"),
  POSTINGS_MADE: smallint("POSTINGS_MADE"),
  POSTED_NET: doublePrecision("POSTED_NET"),
  POSTED_TAX: doublePrecision("POSTED_TAX"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_RECURRING_SCHEMA = createInsertSchema(RECURRING);

export const REMITTANCE = sageSchema.table("REMITTANCE", {
  URN: varchar("URN"),
  BANK_CODE: varchar("BANK_CODE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  C_ADDRESS_1: varchar("C_ADDRESS_1"),
  C_ADDRESS_2: varchar("C_ADDRESS_2"),
  C_ADDRESS_3: varchar("C_ADDRESS_3"),
  C_ADDRESS_4: varchar("C_ADDRESS_4"),
  C_ADDRESS_5: varchar("C_ADDRESS_5"),
  TELEPHONE: varchar("TELEPHONE"),
  FAX: varchar("FAX"),
  CHEQUE: varchar("CHEQUE"),
  DATE: timestamp("DATE"),
  TYPE: varchar("TYPE"),
  INVOICE_DATE: timestamp("INVOICE_DATE"),
  INV_REF: varchar("INV_REF"),
  EXTRA_REF: varchar("EXTRA_REF"),
  DETAILS: varchar("DETAILS"),
  TAX_CODE: varchar("TAX_CODE"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  GROSS_AMOUNT: doublePrecision("GROSS_AMOUNT"),
  PAYMENT: doublePrecision("PAYMENT"),
  FOREIGN_RATE: doublePrecision("FOREIGN_RATE"),
  CURRENCY: smallint("CURRENCY"),
  PRINTED_FLAG: smallint("PRINTED_FLAG"),
  PAID_FLAG: smallint("PAID_FLAG"),
  LAST_LINE: smallint("LAST_LINE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_REMITTANCE_SCHEMA = createInsertSchema(REMITTANCE);

export const CALENDAR_EVENT = sageSchema.table("CALENDAR_EVENT", {
  UNIQUE_ID: integer("UNIQUE_ID"),
  OCCURRENCE_TYPE: smallint("OCCURRENCE_TYPE"),
  RECURRENCE_PATTERN_ID: integer("RECURRENCE_PATTERN_ID"),
  IS_DELETED_OCCURRENCE: smallint("IS_DELETED_OCCURRENCE"),
  ORIGINAL_START_TIME: timestamp("ORIGINAL_START_TIME"),
  ORIGINAL_END_TIME: timestamp("ORIGINAL_END_TIME"),
  IS_ALL_DAY_EVENT: smallint("IS_ALL_DAY_EVENT"),
  HAS_REMINDER: smallint("HAS_REMINDER"),
  REMINDER_MINUTES_BEFORE_START: integer("REMINDER_MINUTES_BEFORE_START"),
  NEXTREMINDERTIME: timestamp("NEXTREMINDERTIME"),
  CREATION_TIME: timestamp("CREATION_TIME"),
  LAST_MODIFICATION_TIME: timestamp("LAST_MODIFICATION_TIME"),
  START_TIME: timestamp("START_TIME"),
  END_TIME: timestamp("END_TIME"),
  BUSY_STATUS: smallint("BUSY_STATUS"),
  IMPORTANCE: smallint("IMPORTANCE"),
  LABEL_ID: integer("LABEL_ID"),
  SUBJECT: varchar("SUBJECT"),
  LOCATION: varchar("LOCATION"),
  USERNAME: varchar("USERNAME"),
  OFFSET: integer("OFFSET"),
  ACCOUNT: varchar("ACCOUNT"),
  ACCOUNTTYPE: integer("ACCOUNTTYPE"),
  CONTACT: varchar("CONTACT"),
  IS_COMPLETED: smallint("IS_COMPLETED"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CALENDAR_EVENT_SCHEMA = createInsertSchema(CALENDAR_EVENT);

export const CALENDAR_EVENT_LABEL = sageSchema.table("CALENDAR_EVENT_LABEL", {
  UNIQUE_ID: integer("UNIQUE_ID"),
  NAME: varchar("NAME"),
  COLOR: integer("COLOR"),
  READ_ONLY: smallint("READ_ONLY"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CALENDAR_EVENT_LABEL_SCHEMA =
  createInsertSchema(CALENDAR_EVENT_LABEL);

export const CALENDAR_EVENT_LOCATION = sageSchema.table(
  "CALENDAR_EVENT_LOCATION",
  {
    LOCATION: varchar("LOCATION"),
    POSITION_IN_LIST: integer("POSITION_IN_LIST"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CALENDAR_EVENT_LOCATION_SCHEMA = createInsertSchema(
  CALENDAR_EVENT_LOCATION,
);

export const CALENDAR_EVENT_RECURRENCE_PATTERN = sageSchema.table(
  "CALENDAR_EVENT_RECURRENCE_PATTERN",
  {
    UNIQUE_ID: integer("UNIQUE_ID"),
    START_TIME: timestamp("START_TIME"),
    DURATION_IN_MINUTES: integer("DURATION_IN_MINUTES"),
    RECURRENCE_PERIOD: smallint("RECURRENCE_PERIOD"),
    DAILY_WEEKDAYS_ONLY: smallint("DAILY_WEEKDAYS_ONLY"),
    DAILY_INTERVAL_IN_DAYS: integer("DAILY_INTERVAL_IN_DAYS"),
    WEEKLY_INTERVAL_IN_WEEKS: integer("WEEKLY_INTERVAL_IN_WEEKS"),
    WEEKLY_DAYS_OF_WEEK: integer("WEEKLY_DAYS_OF_WEEK"),
    MONTHLY_INTERVAL_IN_MONTHS: integer("MONTHLY_INTERVAL_IN_MONTHS"),
    MONTHLY_DAY_OF_MONTH: integer("MONTHLY_DAY_OF_MONTH"),
    MONTHLY_NTH_INTERVAL_IN_MONTHS: integer("MONTHLY_NTH_INTERVAL_IN_MONTHS"),
    MONTHLY_NTH_DAY_OCCURRENCE: smallint("MONTHLY_NTH_DAY_OCCURRENCE"),
    MONTHLY_NTH_DAY_OF_WEEK: smallint("MONTHLY_NTH_DAY_OF_WEEK"),
    YEARLY_MONTH_OF_YEAR: integer("YEARLY_MONTH_OF_YEAR"),
    YEARLY_DAY_OF_MONTH: integer("YEARLY_DAY_OF_MONTH"),
    YEARLY_NTH_DAY_OCCURRENCE: smallint("YEARLY_NTH_DAY_OCCURRENCE"),
    YEARLY_NTH_DAY_OF_WEEK: smallint("YEARLY_NTH_DAY_OF_WEEK"),
    YEARLY_NTH_MONTH_OF_YEAR: integer("YEARLY_NTH_MONTH_OF_YEAR"),
    START_DATE: timestamp("START_DATE"),
    END_TYPE: smallint("END_TYPE"),
    END_DATE: timestamp("END_DATE"),
    TOTAL_OCCURRENCES: integer("TOTAL_OCCURRENCES"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CALENDAR_EVENT_RECURRENCE_PATTERN_SCHEMA =
  createInsertSchema(CALENDAR_EVENT_RECURRENCE_PATTERN);

export const CATEGORY = sageSchema.table("CATEGORY", {
  CHART: integer("CHART"),
  CATEGORY: integer("CATEGORY"),
  FLAG_ASSET_LIABILITY: smallint("FLAG_ASSET_LIABILITY"),
  NAME: varchar("NAME"),
  LOW: varchar("LOW"),
  HIGH: varchar("HIGH"),
  SORT_ORDER: integer("SORT_ORDER"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CATEGORY_SCHEMA = createInsertSchema(CATEGORY);

export const CAT_TITLE = sageSchema.table("CAT_TITLE", {
  CHART: integer("CHART"),
  CATEGORY: integer("CATEGORY"),
  TITLE: varchar("TITLE"),
});

export const INSERT_CAT_TITLE_SCHEMA = createInsertSchema(CAT_TITLE);

export const FUND = sageSchema.table("FUND", {
  FUND_ID: integer("FUND_ID"),
  FUND_TYPE_ID: integer("FUND_TYPE_ID"),
  DESCRIPTION: varchar("DESCRIPTION"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  HELD_BY: varchar("HELD_BY"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  BALANCE: doublePrecision("BALANCE"),
  OPENING_BALANCE: doublePrecision("OPENING_BALANCE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_FUND_SCHEMA = createInsertSchema(FUND);

export const FUND_TYPE = sageSchema.table("FUND_TYPE", {
  FUND_TYPE_ID: integer("FUND_TYPE_ID"),
  DESCRIPTION: varchar("DESCRIPTION"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_FUND_TYPE_SCHEMA = createInsertSchema(FUND_TYPE);

export const SOFA_CATEGORY = sageSchema.table("SOFA_CATEGORY", {
  SOFA_ID: integer("SOFA_ID"),
  DESCRIPTION: varchar("DESCRIPTION"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_SOFA_CATEGORY_SCHEMA = createInsertSchema(SOFA_CATEGORY);

export const CIS_RETURN = sageSchema.table("CIS_RETURN", {
  RETURN_ID: integer("RETURN_ID"),
  CONTRACTOR_UTR: varchar("CONTRACTOR_UTR"),
  ACCOUNTS_OFFICE_REFERENCE_NUMBER: varchar("ACCOUNTS_OFFICE_REFERENCE_NUMBER"),
  MONTH_ENDING: timestamp("MONTH_ENDING"),
  EMPLOYMENT_STATUS_DECLARATION: smallint("EMPLOYMENT_STATUS_DECLARATION"),
  SUBCONTRACTOR_VERIFICATION_DECLARATION: smallint(
    "SUBCONTRACTOR_VERIFICATION_DECLARATION",
  ),
  INACTIVITY_INDICATOR: smallint("INACTIVITY_INDICATOR"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CIS_RETURN_SCHEMA = createInsertSchema(CIS_RETURN);

export const CIS_RETURN_TRANSACTION = sageSchema.table(
  "CIS_RETURN_TRANSACTION",
  {
    TRANSACTION_ID: integer("TRANSACTION_ID"),
    RETURN_ID: integer("RETURN_ID"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CIS_RETURN_TRANSACTION_SCHEMA = createInsertSchema(
  CIS_RETURN_TRANSACTION,
);

export const CIS_SETTINGS = sageSchema.table("CIS_SETTINGS", {
  IS_CONTRACTOR: smallint("IS_CONTRACTOR"),
  IS_SUBCONTRACTOR: smallint("IS_SUBCONTRACTOR"),
  UNIQUE_TAX_REFERENCE: varchar("UNIQUE_TAX_REFERENCE"),
  ACCOUNTS_OFFICE_REFERENCE_NUMBER: varchar("ACCOUNTS_OFFICE_REFERENCE_NUMBER"),
  IS_INACTIVE: smallint("IS_INACTIVE"),
  NEXT_PERIOD_END: timestamp("NEXT_PERIOD_END"),
  STANDARD_RATE: doublePrecision("STANDARD_RATE"),
  HIGHER_RATE: doublePrecision("HIGHER_RATE"),
  CONTROL_NOMINAL: varchar("CONTROL_NOMINAL"),
  LABOUR_NOMINAL: varchar("LABOUR_NOMINAL"),
  MATERIALS_NOMINAL: varchar("MATERIALS_NOMINAL"),
  OTHER_TAXABLE_NOMINAL: varchar("OTHER_TAXABLE_NOMINAL"),
  OTHER_NONTAXABLE_NOMINAL: varchar("OTHER_NONTAXABLE_NOMINAL"),
  TAX_LIABILITY_NOMINAL: varchar("TAX_LIABILITY_NOMINAL"),
  CITB_LEVY_NOMINAL: varchar("CITB_LEVY_NOMINAL"),
  IS_ENABLED: smallint("IS_ENABLED"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CIS_SETTINGS_SCHEMA = createInsertSchema(CIS_SETTINGS);

export const CIS_SUBCONTRACTOR = sageSchema.table("CIS_SUBCONTRACTOR", {
  SUPPLIER_REFN: varchar("SUPPLIER_REFN"),
  COMPANY_TYPE: varchar("COMPANY_TYPE"),
  COMPANY_TYPE_CODE: smallint("COMPANY_TYPE_CODE"),
  UNIQUE_TAX_REFERENCE: varchar("UNIQUE_TAX_REFERENCE"),
  TRADING_NAME: varchar("TRADING_NAME"),
  LEGAL_NAME: varchar("LEGAL_NAME"),
  USE_LEGAL_NAME: smallint("USE_LEGAL_NAME"),
  FIRST_NAME: varchar("FIRST_NAME"),
  MIDDLE_NAME: varchar("MIDDLE_NAME"),
  LAST_NAME: varchar("LAST_NAME"),
  PARTNERSHIP_UNIQUE_TAX_REFERENCE: varchar("PARTNERSHIP_UNIQUE_TAX_REFERENCE"),
  PARTNERSHIP_NAME: varchar("PARTNERSHIP_NAME"),
  COMPANY_REGISTRATION_NAME: varchar("COMPANY_REGISTRATION_NAME"),
  NATIONAL_INSURANCE_NUMBER: varchar("NATIONAL_INSURANCE_NUMBER"),
  VERIFICATION_REFERENCE_NUMBER: varchar("VERIFICATION_REFERENCE_NUMBER"),
  VERIFICATION_STATUS: varchar("VERIFICATION_STATUS"),
  VERIFICATION_STATUS_CODE: smallint("VERIFICATION_STATUS_CODE"),
  LAST_VERIFIED: timestamp("LAST_VERIFIED"),
  PAYMENT_FREQUENCY: varchar("PAYMENT_FREQUENCY"),
  PAYMENT_FREQUENCY_CODE: smallint("PAYMENT_FREQUENCY_CODE"),
  EMAIL_STATEMENTS: smallint("EMAIL_STATEMENTS"),
  PAY_THIRD_PARTY: smallint("PAY_THIRD_PARTY"),
  THIRD_PARTY: varchar("THIRD_PARTY"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CIS_SUBCONTRACTOR_SCHEMA =
  createInsertSchema(CIS_SUBCONTRACTOR);

export const CIS_SUBCONTRACTOR_LEGACY = sageSchema.table(
  "CIS_SUBCONTRACTOR_LEGACY",
  {
    SUPPLER_REFN: varchar("SUPPLER_REFN"),
    CIS_TYPE: varchar("CIS_TYPE"),
    CIS_TYPE_CODE: smallint("CIS_TYPE_CODE"),
    CIS_NUMBER: varchar("CIS_NUMBER"),
    CARD_TYPE: varchar("CARD_TYPE"),
    CARD_TYPE_CODE: smallint("CARD_TYPE_CODE"),
    VALID_FROM: timestamp("VALID_FROM"),
    VALID_TO: timestamp("VALID_TO"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CIS_SUBCONTRACTOR_LEGACY_SCHEMA = createInsertSchema(
  CIS_SUBCONTRACTOR_LEGACY,
);

export const CIS_SUBCONTRACTOR_RETURN = sageSchema.table(
  "CIS_SUBCONTRACTOR_RETURN",
  {
    RETURN_ID: integer("RETURN_ID"),
    SUPPLIER_REFN: varchar("SUPPLIER_REFN"),
    UNIQUE_TAX_REFERENCE: varchar("UNIQUE_TAX_REFERENCE"),
    TRADING_NAME: varchar("TRADING_NAME"),
    FIRST_NAME: varchar("FIRST_NAME"),
    MIDDLE_NAME: varchar("MIDDLE_NAME"),
    LAST_NAME: varchar("LAST_NAME"),
    COMPANY_REGISTRATION_NUMBER: varchar("COMPANY_REGISTRATION_NUMBER"),
    NATIONAL_INSURANCE_NUMBER: varchar("NATIONAL_INSURANCE_NUMBER"),
    VERIFICATION_REFERENCE_NUMBER: varchar("VERIFICATION_REFERENCE_NUMBER"),
    TOTAL_PAYMENTS_MADE: doublePrecision("TOTAL_PAYMENTS_MADE"),
    COST_OF_MATERIALS: doublePrecision("COST_OF_MATERIALS"),
    AMOUNT_DEDUCTED: doublePrecision("AMOUNT_DEDUCTED"),
    UNMATCHED_RATE: smallint("UNMATCHED_RATE"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CIS_SUBCONTRACTOR_RETURN_SCHEMA = createInsertSchema(
  CIS_SUBCONTRACTOR_RETURN,
);

export const CIS_SUBCONTRACTOR_TAX_HISTORY = sageSchema.table(
  "CIS_SUBCONTRACTOR_TAX_HISTORY",
  {
    SUPPLIER_REFN: varchar("SUPPLIER_REFN"),
    TAX_TREATMENT: varchar("TAX_TREATMENT"),
    TAX_TREATMENT_CODE: smallint("TAX_TREATMENT_CODE"),
    START_DATE: timestamp("START_DATE"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CIS_SUBCONTRACTOR_TAX_HISTORY_SCHEMA = createInsertSchema(
  CIS_SUBCONTRACTOR_TAX_HISTORY,
);

export const COMPANY = sageSchema.table("COMPANY", {
  COMPANYID: varchar("COMPANYID"),
  PROTX_VENDOR: varchar("PROTX_VENDOR"),
  CASH_REGISTER_BANK: varchar("CASH_REGISTER_BANK"),
  CASH_REGISTER_SALES_NOM: varchar("CASH_REGISTER_SALES_NOM"),
  CASH_REGISTER_TAXCODE: smallint("CASH_REGISTER_TAXCODE"),
  CASH_REGISTER_DISCREPENCIES_NOM: varchar("CASH_REGISTER_DISCREPENCIES_NOM"),
  CASH_REGISTER_TAX_INCLUSIVE_FLAG: smallint(
    "CASH_REGISTER_TAX_INCLUSIVE_FLAG",
  ),
  QUOTES_TO_ORDERS: smallint("QUOTES_TO_ORDERS"),
  PROTX_USERID: varchar("PROTX_USERID"),
  PROTX_PASSWORD: varchar("PROTX_PASSWORD"),
  PROTX_LAST_SYNC_DATE: timestamp("PROTX_LAST_SYNC_DATE"),
  PROTX_ENABLED: smallint("PROTX_ENABLED"),
  FLAT_RATE_VAT_PERCENT: doublePrecision("FLAT_RATE_VAT_PERCENT"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  C_ADDRESS_1: varchar("C_ADDRESS_1"),
  C_ADDRESS_2: varchar("C_ADDRESS_2"),
  C_ADDRESS_3: varchar("C_ADDRESS_3"),
  C_ADDRESS_4: varchar("C_ADDRESS_4"),
  C_ADDRESS_5: varchar("C_ADDRESS_5"),
  L_NAME: varchar("L_NAME"),
  L_ADDRESS_1: varchar("L_ADDRESS_1"),
  L_ADDRESS_2: varchar("L_ADDRESS_2"),
  L_ADDRESS_3: varchar("L_ADDRESS_3"),
  L_ADDRESS_4: varchar("L_ADDRESS_4"),
  L_ADDRESS_5: varchar("L_ADDRESS_5"),
  TELEPHONE: varchar("TELEPHONE"),
  FAX: varchar("FAX"),
  E_MAIL: varchar("E_MAIL"),
  WEB_ADDRESS: varchar("WEB_ADDRESS"),
  CREDIT_REF: varchar("CREDIT_REF"),
  DEL_NAME: varchar("DEL_NAME"),
  DEL_ADDRESS_1: varchar("DEL_ADDRESS_1"),
  DEL_ADDRESS_2: varchar("DEL_ADDRESS_2"),
  DEL_ADDRESS_3: varchar("DEL_ADDRESS_3"),
  DEL_ADDRESS_4: varchar("DEL_ADDRESS_4"),
  DEL_ADDRESS_5: varchar("DEL_ADDRESS_5"),
  DEL_TELEPHONE: varchar("DEL_TELEPHONE"),
  DEL_FAX: varchar("DEL_FAX"),
  DEL_E_MAIL: varchar("DEL_E_MAIL"),
  DEL_WEB_ADDRESS: varchar("DEL_WEB_ADDRESS"),
  VAT_REG_NUMBER: varchar("VAT_REG_NUMBER"),
  START_MONTH: smallint("START_MONTH"),
  FINANCIAL_YEAR: smallint("FINANCIAL_YEAR"),
  DEFAULT_CHART: smallint("DEFAULT_CHART"),
  DEFAULT_CREDIT_BUREAU: smallint("DEFAULT_CREDIT_BUREAU"),
  END_OF_REPORT: varchar("END_OF_REPORT"),
  ADDRESS_LABEL_1: varchar("ADDRESS_LABEL_1"),
  ADDRESS_LABEL_2: varchar("ADDRESS_LABEL_2"),
  ADDRESS_LABEL_3: varchar("ADDRESS_LABEL_3"),
  ADDRESS_LABEL_4: varchar("ADDRESS_LABEL_4"),
  ADDRESS_LABEL_5: varchar("ADDRESS_LABEL_5"),
  SALES_LABEL_1: varchar("SALES_LABEL_1"),
  SALES_LABEL_2: varchar("SALES_LABEL_2"),
  SALES_LABEL_3: varchar("SALES_LABEL_3"),
  PURCHASE_LABEL_1: varchar("PURCHASE_LABEL_1"),
  PURCHASE_LABEL_2: varchar("PURCHASE_LABEL_2"),
  PURCHASE_LABEL_3: varchar("PURCHASE_LABEL_3"),
  STOCK_LABEL_1: varchar("STOCK_LABEL_1"),
  STOCK_LABEL_2: varchar("STOCK_LABEL_2"),
  STOCK_LABEL_3: varchar("STOCK_LABEL_3"),
  STOCKCATEGORY_LABEL: varchar("STOCKCATEGORY_LABEL"),
  DEPARTMENTS_LABEL: varchar("DEPARTMENTS_LABEL"),
  FIXEDASSETS_LABEL: varchar("FIXEDASSETS_LABEL"),
  STOCK_DISCOUNT_A: varchar("STOCK_DISCOUNT_A"),
  STOCK_DISCOUNT_B: varchar("STOCK_DISCOUNT_B"),
  STOCK_DISCOUNT_C: varchar("STOCK_DISCOUNT_C"),
  STOCK_DISCOUNT_D: varchar("STOCK_DISCOUNT_D"),
  STOCK_DISCOUNT_E: varchar("STOCK_DISCOUNT_E"),
  NOM_DEBTORS: varchar("NOM_DEBTORS"),
  NOM_CREDITORS: varchar("NOM_CREDITORS"),
  NOM_TAX_SALES: varchar("NOM_TAX_SALES"),
  NOM_TAX_PURCHASE: varchar("NOM_TAX_PURCHASE"),
  NOM_DISCOUNT_SALES: varchar("NOM_DISCOUNT_SALES"),
  NOM_DISCOUNT_PURCHASE: varchar("NOM_DISCOUNT_PURCHASE"),
  NOM_DEFAULT_BANK: varchar("NOM_DEFAULT_BANK"),
  NOM_DEFAULT_SALES: varchar("NOM_DEFAULT_SALES"),
  NOM_RETAINED_EARNINGS: varchar("NOM_RETAINED_EARNINGS"),
  NOM_CREDIT_CHARGES: varchar("NOM_CREDIT_CHARGES"),
  NOM_BAD_DEBTS: varchar("NOM_BAD_DEBTS"),
  NOM_ACCRUALS: varchar("NOM_ACCRUALS"),
  NOM_PREPAYMENTS: varchar("NOM_PREPAYMENTS"),
  NOM_MISPOSTINGS: varchar("NOM_MISPOSTINGS"),
  NOM_SUSPENSE: varchar("NOM_SUSPENSE"),
  PAYMENT_DUE_SALES: smallint("PAYMENT_DUE_SALES"),
  PAYMENT_DUE_PURCHASE: smallint("PAYMENT_DUE_PURCHASE"),
  PAYMENT_DUE_FROM_SALES: smallint("PAYMENT_DUE_FROM_SALES"),
  PAYMENT_DUE_FROM_SALES_TEXT: varchar("PAYMENT_DUE_FROM_SALES_TEXT"),
  PAYMENT_DUE_FROM_PURCHASE: smallint("PAYMENT_DUE_FROM_PURCHASE"),
  PAYMENT_DUE_FROM_PURCHASE_TEXT: varchar("PAYMENT_DUE_FROM_PURCHASE_TEXT"),
  NON_VAT_TAX_CODE: smallint("NON_VAT_TAX_CODE"),
  VAT_CASH: smallint("VAT_CASH"),
  SALES_AGE_BY_MONTH: smallint("SALES_AGE_BY_MONTH"),
  SALES_AGED_PERIOD_1: smallint("SALES_AGED_PERIOD_1"),
  SALES_AGED_PERIOD_2: smallint("SALES_AGED_PERIOD_2"),
  SALES_AGED_PERIOD_3: smallint("SALES_AGED_PERIOD_3"),
  SALES_AGED_PERIOD_4: smallint("SALES_AGED_PERIOD_4"),
  PURCHASE_AGE_BY_MONTH: smallint("PURCHASE_AGE_BY_MONTH"),
  PURCHASE_AGED_PERIOD_1: smallint("PURCHASE_AGED_PERIOD_1"),
  PURCHASE_AGED_PERIOD_2: smallint("PURCHASE_AGED_PERIOD_2"),
  PURCHASE_AGED_PERIOD_3: smallint("PURCHASE_AGED_PERIOD_3"),
  PURCHASE_AGED_PERIOD_4: smallint("PURCHASE_AGED_PERIOD_4"),
  SALES_AMOUNT_SOLD_1: doublePrecision("SALES_AMOUNT_SOLD_1"),
  SALES_AMOUNT_SOLD_2: doublePrecision("SALES_AMOUNT_SOLD_2"),
  SALES_AMOUNT_SOLD_3: doublePrecision("SALES_AMOUNT_SOLD_3"),
  SALES_AMOUNT_SOLD_4: doublePrecision("SALES_AMOUNT_SOLD_4"),
  SALES_AMOUNT_SOLD_5: doublePrecision("SALES_AMOUNT_SOLD_5"),
  SALES_AMOUNT_SOLD_6: doublePrecision("SALES_AMOUNT_SOLD_6"),
  SALES_AMOUNT_SOLD_7: doublePrecision("SALES_AMOUNT_SOLD_7"),
  SALES_AMOUNT_SOLD_8: doublePrecision("SALES_AMOUNT_SOLD_8"),
  SALES_AMOUNT_SOLD_9: doublePrecision("SALES_AMOUNT_SOLD_9"),
  SALES_AMOUNT_SOLD_10: doublePrecision("SALES_AMOUNT_SOLD_10"),
  SALES_ADD_DISC_1: doublePrecision("SALES_ADD_DISC_1"),
  SALES_ADD_DISC_2: doublePrecision("SALES_ADD_DISC_2"),
  SALES_ADD_DISC_3: doublePrecision("SALES_ADD_DISC_3"),
  SALES_ADD_DISC_4: doublePrecision("SALES_ADD_DISC_4"),
  SALES_ADD_DISC_5: doublePrecision("SALES_ADD_DISC_5"),
  SALES_ADD_DISC_6: doublePrecision("SALES_ADD_DISC_6"),
  SALES_ADD_DISC_7: doublePrecision("SALES_ADD_DISC_7"),
  SALES_ADD_DISC_8: doublePrecision("SALES_ADD_DISC_8"),
  SALES_ADD_DISC_9: doublePrecision("SALES_ADD_DISC_9"),
  SALES_ADD_DISC_10: doublePrecision("SALES_ADD_DISC_10"),
  ALLOW_NEGATIVE_STOCK: smallint("ALLOW_NEGATIVE_STOCK"),
  INVOICE_DISC_UNIT_PRICE: smallint("INVOICE_DISC_UNIT_PRICE"),
  SOP_CARRIAGE_NET: doublePrecision("SOP_CARRIAGE_NET"),
  SOP_CARRIAGE_NOM_CODE: varchar("SOP_CARRIAGE_NOM_CODE"),
  SOP_CARRIAGE_TAX_CODE: integer("SOP_CARRIAGE_TAX_CODE"),
  SOP_CARRIAGE_DEPT: integer("SOP_CARRIAGE_DEPT"),
  SOP_GLOBAL_DETAILS: varchar("SOP_GLOBAL_DETAILS"),
  SOP_GLOBAL_NOM_CODE: varchar("SOP_GLOBAL_NOM_CODE"),
  SOP_GLOBAL_TAX_CODE: integer("SOP_GLOBAL_TAX_CODE"),
  SOP_GLOBAL_DEPT: integer("SOP_GLOBAL_DEPT"),
  POP_CARRIAGE_NET: doublePrecision("POP_CARRIAGE_NET"),
  POP_CARRIAGE_NOM_CODE: varchar("POP_CARRIAGE_NOM_CODE"),
  POP_CARRIAGE_TAX_CODE: integer("POP_CARRIAGE_TAX_CODE"),
  POP_CARRIAGE_DEPT: integer("POP_CARRIAGE_DEPT"),
  POP_GLOBAL_DETAILS: varchar("POP_GLOBAL_DETAILS"),
  POP_GLOBAL_NOM_CODE: varchar("POP_GLOBAL_NOM_CODE"),
  POP_GLOBAL_TAX_CODE: integer("POP_GLOBAL_TAX_CODE"),
  POP_GLOBAL_DEPT: integer("POP_GLOBAL_DEPT"),
  NO_DISCOUNT_PRICE_LIST: smallint("NO_DISCOUNT_PRICE_LIST"),
  QTY_DECIMAL_PLACE: smallint("QTY_DECIMAL_PLACE"),
  UNIT_DECIMAL_PLACE: smallint("UNIT_DECIMAL_PLACE"),
  BUDGETING_METHOD: smallint("BUDGETING_METHOD"),
  DEFAULT_BUDGETING_CHART: smallint("DEFAULT_BUDGETING_CHART"),
  CHARITYTAXREF: varchar("CHARITYTAXREF"),
  DUNS_NUMBER: varchar("DUNS_NUMBER"),
  CC_LETTER_1: varchar("CC_LETTER_1"),
  CC_LETTER_2: varchar("CC_LETTER_2"),
  CC_LETTER_3: varchar("CC_LETTER_3"),
  CLOSED_LEDGER_DATE_ENABLED: smallint("CLOSED_LEDGER_DATE_ENABLED"),
  CLOSED_LEDGER_CHECK_DATE: timestamp("CLOSED_LEDGER_CHECK_DATE"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  HMRC_PAYEE_ENABLED: smallint("HMRC_PAYEE_ENABLED"),
  HMRC_PAYEE_STATUS: smallint("HMRC_PAYEE_STATUS"),
  HMRC_PAYEE_STATUS_DESCRIPTION: varchar("HMRC_PAYEE_STATUS_DESCRIPTION"),
  DIRECT_DEBITS_ENABLED: smallint("DIRECT_DEBITS_ENABLED"),
  DIRECT_DEBITS_LAST_SYNCED_DATE: timestamp("DIRECT_DEBITS_LAST_SYNCED_DATE"),
  HOLDING_ACCOUNT: varchar("HOLDING_ACCOUNT"),
  NOMINATED_BANK: varchar("NOMINATED_BANK"),
  FEES_NOMINAL: varchar("FEES_NOMINAL"),
  CHARGE_DAYS: smallint("CHARGE_DAYS"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_COMPANY_SCHEMA = createInsertSchema(COMPANY);

export const COMPANY_DEL_ADDR = sageSchema.table("COMPANY_DEL_ADDR", {
  REFERENCE: varchar("REFERENCE"),
  ADDRESS_REF: integer("ADDRESS_REF"),
  DESCRIPTION: varchar("DESCRIPTION"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  TELEPHONE: varchar("TELEPHONE"),
  FAX: varchar("FAX"),
  E_MAIL: varchar("E_MAIL"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  TAX_CODE: smallint("TAX_CODE"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  VAT_REG_NUMBER: varchar("VAT_REG_NUMBER"),
  TELEPHONE_2: varchar("TELEPHONE_2"),
  ADDRESS_TYPE_NAME: varchar("ADDRESS_TYPE_NAME"),
  ADDRESS_TYPE: smallint("ADDRESS_TYPE"),
  CONTACT_ROLE: varchar("CONTACT_ROLE"),
  NOTES: varchar("NOTES"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_COMPANY_DEL_ADDR_SCHEMA =
  createInsertSchema(COMPANY_DEL_ADDR);

export const CONTACT_HISTORY = sageSchema.table("CONTACT_HISTORY", {
  UNIQUE_ID: integer("UNIQUE_ID"),
  SAL_PUR: varchar("SAL_PUR"),
  REFN: varchar("REFN"),
  MAJOR_TYPE: integer("MAJOR_TYPE"),
  CONTACT_TYPE: integer("CONTACT_TYPE"),
  CONTACT_DATE: timestamp("CONTACT_DATE"),
  CONTACT: varchar("CONTACT"),
  TELEPHONE: varchar("TELEPHONE"),
  STYLE: integer("STYLE"),
  LOCATION: integer("LOCATION"),
  USERNAME: varchar("USERNAME"),
  OUTCOME: integer("OUTCOME"),
  PROMISED_PAYMENT: doublePrecision("PROMISED_PAYMENT"),
  PROMISED_PAYMENT_DATE: timestamp("PROMISED_PAYMENT_DATE"),
  FOLLOW_UP_DATE: timestamp("FOLLOW_UP_DATE"),
  OFFSET: integer("OFFSET"),
  BALANCE: doublePrecision("BALANCE"),
  START: timestamp("START"),
  END: timestamp("END"),
  DURATION: integer("DURATION"),
  FOLLOW_UP_EVENT_ID: integer("FOLLOW_UP_EVENT_ID"),
  SUBJECT: varchar("SUBJECT"),
  ADDRESS1: varchar("ADDRESS1"),
  ADDRESS2: varchar("ADDRESS2"),
  ADDRESS3: varchar("ADDRESS3"),
  ADDRESS4: varchar("ADDRESS4"),
  ADDRESS5: varchar("ADDRESS5"),
  FOLLOW_UP_TIME: timestamp("FOLLOW_UP_TIME"),
  NOTES1: varchar("NOTES1"),
  NOTES2: varchar("NOTES2"),
  NOTES3: varchar("NOTES3"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CONTACT_HISTORY_SCHEMA =
  createInsertSchema(CONTACT_HISTORY);

export const CONTACT_HISTORY_MAJOR_TYPE = sageSchema.table(
  "CONTACT_HISTORY_MAJOR_TYPE",
  {
    UNIQUE_ID: integer("UNIQUE_ID"),
    CONTACT_MAJOR_TYPE: smallint("CONTACT_MAJOR_TYPE"),
    DESCRIPTION: varchar("DESCRIPTION"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CONTACT_HISTORY_MAJOR_TYPE_SCHEMA = createInsertSchema(
  CONTACT_HISTORY_MAJOR_TYPE,
);

export const CONTACT_HISTORY_CONTACT_OUTCOME = sageSchema.table(
  "CONTACT_HISTORY_CONTACT_OUTCOME",
  {
    UNIQUE_ID: integer("UNIQUE_ID"),
    OUTCOME_TYPE: smallint("OUTCOME_TYPE"),
    DESCRIPTION: varchar("DESCRIPTION"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CONTACT_HISTORY_CONTACT_OUTCOME_SCHEMA = createInsertSchema(
  CONTACT_HISTORY_CONTACT_OUTCOME,
);

export const CONTACT_HISTORY_CONTACT_TYPE = sageSchema.table(
  "CONTACT_HISTORY_CONTACT_TYPE",
  {
    UNIQUE_ID: integer("UNIQUE_ID"),
    CONTACT_TYPE: smallint("CONTACT_TYPE"),
    DESCRIPTION: varchar("DESCRIPTION"),
    CONTACT_MAJOR_TYPE: smallint("CONTACT_MAJOR_TYPE"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_CONTACT_HISTORY_CONTACT_TYPE_SCHEMA = createInsertSchema(
  CONTACT_HISTORY_CONTACT_TYPE,
);

export const ECSALES_FILL = sageSchema.table("ECSALES_FILL", {
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  VAT_NUMBER: varchar("VAT_NUMBER"),
  NET: doublePrecision("NET"),
  PENCE: varchar("PENCE"),
  INDICATOR: varchar("INDICATOR"),
  SUBMISSION: varchar("SUBMISSION"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  COLLECTION_KEY: varchar("COLLECTION_KEY"),
  SUBMISSION_ATTEMPTS: smallint("SUBMISSION_ATTEMPTS"),
  SUBMISSION_ACKNOWLEDGED: smallint("SUBMISSION_ACKNOWLEDGED"),
  SUBMISSION_ERRORS: varchar("SUBMISSION_ERRORS"),
});

export const INSERT_ECSALES_FILL_SCHEMA = createInsertSchema(ECSALES_FILL);

export const ECSALES_HEADER = sageSchema.table("ECSALES_HEADER", {
  DATE_FROM: timestamp("DATE_FROM"),
  DATE_TO: timestamp("DATE_TO"),
  VAT_NUMBER: varchar("VAT_NUMBER"),
  TAX_BRANCH_ID: varchar("TAX_BRANCH_ID"),
  QUARTER: varchar("QUARTER"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  ATTEMPTS: integer("ATTEMPTS"),
  ACKNOWLEDGED: smallint("ACKNOWLEDGED"),
  LINES: integer("LINES"),
  SALES: doublePrecision("SALES"),
  REFERENCE: varchar("REFERENCE"),
  TIMESTAMP: varchar("TIMESTAMP"),
  DUE_DATE: timestamp("DUE_DATE"),
});

export const INSERT_ECSALES_HEADER_SCHEMA = createInsertSchema(ECSALES_HEADER);

export const ECSALES_SPLIT = sageSchema.table("ECSALES_SPLIT", {
  TYPE: varchar("TYPE"),
  ID: integer("ID"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  DATE: timestamp("DATE"),
  REF: varchar("REF"),
  DETAILS: varchar("DETAILS"),
  NET: doublePrecision("NET"),
  TRIANGULATED: smallint("TRIANGULATED"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  VAT_NUMBER: varchar("VAT_NUMBER"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  INDICATOR: varchar("INDICATOR"),
});

export const INSERT_ECSALES_SPLIT_SCHEMA = createInsertSchema(ECSALES_SPLIT);

export const EC_VAT_DESCRIPTION = sageSchema.table("EC_VAT_DESCRIPTION", {
  UNIQUE_ID: integer("UNIQUE_ID"),
  DESCRIPTION: varchar("DESCRIPTION"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_EC_VAT_DESCRIPTION_SCHEMA =
  createInsertSchema(EC_VAT_DESCRIPTION);

export const INTRASTAT = sageSchema.table("INTRASTAT", {
  ORDER_NUMBER: varchar("ORDER_NUMBER"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  STOCK_CODE: varchar("STOCK_CODE"),
  DESCRIPTION: varchar("DESCRIPTION"),
  DATE: timestamp("DATE"),
  NOTC: varchar("NOTC"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  COMMODITY_CODE: varchar("COMMODITY_CODE"),
  DELIVERY_STATUS: varchar("DELIVERY_STATUS"),
  DELIVERY_TERMS: varchar("DELIVERY_TERMS"),
  QUANTITY: doublePrecision("QUANTITY"),
  QTY_ORDERED: doublePrecision("QTY_ORDERED"),
  QTY_DELIVERED: doublePrecision("QTY_DELIVERED"),
  QTY_TO_CONFIRM: doublePrecision("QTY_TO_CONFIRM"),
  UNIT: doublePrecision("UNIT"),
  NET_MASS: doublePrecision("NET_MASS"),
  GOODS_VALUE: doublePrecision("GOODS_VALUE"),
  COUNTRY_OF_ORIGIN: varchar("COUNTRY_OF_ORIGIN"),
  TRANSPORT: varchar("TRANSPORT"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_INTRASTAT_SCHEMA = createInsertSchema(INTRASTAT);

export const INVOICE = sageSchema.table("INVOICE", {
  INVOICE_NUMBER: integer("INVOICE_NUMBER"),
  INVOICE_TYPE_CODE: smallint("INVOICE_TYPE_CODE"),
  INVOICE_TYPE: varchar("INVOICE_TYPE"),
  INVOICE_OR_CREDIT: varchar("INVOICE_OR_CREDIT"),
  INVOICE_DATE: timestamp("INVOICE_DATE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  C_ADDRESS_1: varchar("C_ADDRESS_1"),
  C_ADDRESS_2: varchar("C_ADDRESS_2"),
  C_ADDRESS_3: varchar("C_ADDRESS_3"),
  C_ADDRESS_4: varchar("C_ADDRESS_4"),
  C_ADDRESS_5: varchar("C_ADDRESS_5"),
  DEL_NAME: varchar("DEL_NAME"),
  DEL_ADDRESS_1: varchar("DEL_ADDRESS_1"),
  DEL_ADDRESS_2: varchar("DEL_ADDRESS_2"),
  DEL_ADDRESS_3: varchar("DEL_ADDRESS_3"),
  DEL_ADDRESS_4: varchar("DEL_ADDRESS_4"),
  DEL_ADDRESS_5: varchar("DEL_ADDRESS_5"),
  VAT_REG_NUMBER: varchar("VAT_REG_NUMBER"),
  ORDER_NUMBER: varchar("ORDER_NUMBER"),
  ORDER_NUMBER_NUMERIC: integer("ORDER_NUMBER_NUMERIC"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  TAKEN_BY: varchar("TAKEN_BY"),
  CUST_ORDER_NUMBER: varchar("CUST_ORDER_NUMBER"),
  CUST_TEL_NUMBER: varchar("CUST_TEL_NUMBER"),
  NOTES_1: varchar("NOTES_1"),
  NOTES_2: varchar("NOTES_2"),
  NOTES_3: varchar("NOTES_3"),
  CUST_DISC_RATE: doublePrecision("CUST_DISC_RATE"),
  FOREIGN_ITEMS_NET: doublePrecision("FOREIGN_ITEMS_NET"),
  FOREIGN_ITEMS_TAX: doublePrecision("FOREIGN_ITEMS_TAX"),
  FOREIGN_ITEMS_GROSS: doublePrecision("FOREIGN_ITEMS_GROSS"),
  ITEMS_NET: doublePrecision("ITEMS_NET"),
  ITEMS_TAX: doublePrecision("ITEMS_TAX"),
  ITEMS_GROSS: doublePrecision("ITEMS_GROSS"),
  TAX_RATE_1: doublePrecision("TAX_RATE_1"),
  TAX_RATE_2: doublePrecision("TAX_RATE_2"),
  TAX_RATE_3: doublePrecision("TAX_RATE_3"),
  TAX_RATE_4: doublePrecision("TAX_RATE_4"),
  TAX_RATE_5: doublePrecision("TAX_RATE_5"),
  NET_AMOUNT_1: doublePrecision("NET_AMOUNT_1"),
  NET_AMOUNT_2: doublePrecision("NET_AMOUNT_2"),
  NET_AMOUNT_3: doublePrecision("NET_AMOUNT_3"),
  NET_AMOUNT_4: doublePrecision("NET_AMOUNT_4"),
  NET_AMOUNT_5: doublePrecision("NET_AMOUNT_5"),
  TAX_AMOUNT_1: doublePrecision("TAX_AMOUNT_1"),
  TAX_AMOUNT_2: doublePrecision("TAX_AMOUNT_2"),
  TAX_AMOUNT_3: doublePrecision("TAX_AMOUNT_3"),
  TAX_AMOUNT_4: doublePrecision("TAX_AMOUNT_4"),
  TAX_AMOUNT_5: doublePrecision("TAX_AMOUNT_5"),
  GLOBAL_NOM_CODE: varchar("GLOBAL_NOM_CODE"),
  GLOBAL_DETAILS: varchar("GLOBAL_DETAILS"),
  GLOBAL_TAX_CODE: varchar("GLOBAL_TAX_CODE"),
  GLOBAL_DEPT_NUMBER: smallint("GLOBAL_DEPT_NUMBER"),
  GLOBAL_DEPT_NAME: varchar("GLOBAL_DEPT_NAME"),
  COURIER_NUMBER: smallint("COURIER_NUMBER"),
  COURIER_NAME: varchar("COURIER_NAME"),
  CONSIGNMENT: varchar("CONSIGNMENT"),
  CARR_NOM_CODE: varchar("CARR_NOM_CODE"),
  CARR_TAX_CODE: varchar("CARR_TAX_CODE"),
  CARR_DEPT_NUMBER: smallint("CARR_DEPT_NUMBER"),
  CARR_DEPT_NAME: varchar("CARR_DEPT_NAME"),
  FOREIGN_CARR_NET: doublePrecision("FOREIGN_CARR_NET"),
  FOREIGN_CARR_TAX: doublePrecision("FOREIGN_CARR_TAX"),
  FOREIGN_CARR_GROSS: doublePrecision("FOREIGN_CARR_GROSS"),
  CARR_NET: doublePrecision("CARR_NET"),
  CARR_TAX: doublePrecision("CARR_TAX"),
  CARR_GROSS: doublePrecision("CARR_GROSS"),
  FOREIGN_INVOICE_NET: doublePrecision("FOREIGN_INVOICE_NET"),
  FOREIGN_INVOICE_TAX: doublePrecision("FOREIGN_INVOICE_TAX"),
  FOREIGN_INVOICE_GROSS: doublePrecision("FOREIGN_INVOICE_GROSS"),
  INVOICE_NET: doublePrecision("INVOICE_NET"),
  INVOICE_TAX: doublePrecision("INVOICE_TAX"),
  INVOICE_GROSS: doublePrecision("INVOICE_GROSS"),
  CURRENCY: smallint("CURRENCY"),
  CURRENCY_TYPE: smallint("CURRENCY_TYPE"),
  EURO_GROSS: doublePrecision("EURO_GROSS"),
  EURO_RATE: doublePrecision("EURO_RATE"),
  FOREIGN_RATE: doublePrecision("FOREIGN_RATE"),
  SETTLEMENT_DUE_DAYS: smallint("SETTLEMENT_DUE_DAYS"),
  SETTLEMENT_DISC_RATE: doublePrecision("SETTLEMENT_DISC_RATE"),
  FOREIGN_SETTLEMENT_DISC_AMOUNT: doublePrecision(
    "FOREIGN_SETTLEMENT_DISC_AMOUNT",
  ),
  FOREIGN_SETTLEMENT_TOTAL: doublePrecision("FOREIGN_SETTLEMENT_TOTAL"),
  FOREIGN_AMOUNT_PREPAID: doublePrecision("FOREIGN_AMOUNT_PREPAID"),
  SETTLEMENT_DISC_AMOUNT: doublePrecision("SETTLEMENT_DISC_AMOUNT"),
  SETTLEMENT_TOTAL: doublePrecision("SETTLEMENT_TOTAL"),
  AMOUNT_PREPAID: doublePrecision("AMOUNT_PREPAID"),
  PAYMENT_REF: varchar("PAYMENT_REF"),
  PRINTED: varchar("PRINTED"),
  PRINTED_CODE: smallint("PRINTED_CODE"),
  POSTED: varchar("POSTED"),
  POSTED_CODE: smallint("POSTED_CODE"),
  QUOTE_EXPIRY_DATE: timestamp("QUOTE_EXPIRY_DATE"),
  QUOTE_STATUS: varchar("QUOTE_STATUS"),
  QUOTE_STATUS_ID: smallint("QUOTE_STATUS_ID"),
  RECURRING_REF: varchar("RECURRING_REF"),
  DUNS_NUMBER: varchar("DUNS_NUMBER"),
  NET_VALUE_DISCOUNT_NET: doublePrecision("NET_VALUE_DISCOUNT_NET"),
  NET_VALUE_DISCOUNT_NET_BASE: doublePrecision("NET_VALUE_DISCOUNT_NET_BASE"),
  NET_VALUE_DISCOUNT_RATE: doublePrecision("NET_VALUE_DISCOUNT_RATE"),
  NET_VALUE_DISCOUNT_DESC: varchar("NET_VALUE_DISCOUNT_DESC"),
  NET_VALUE_DISCOUNT_COMMENT_1: varchar("NET_VALUE_DISCOUNT_COMMENT_1"),
  NET_VALUE_DISCOUNT_COMMENT_2: varchar("NET_VALUE_DISCOUNT_COMMENT_2"),
  PAYMENT_TYPE: smallint("PAYMENT_TYPE"),
  BANK_REF: varchar("BANK_REF"),
  GDN_NUMBER: integer("GDN_NUMBER"),
  PROJECT_ID: integer("PROJECT_ID"),
  ANALYSIS_1: varchar("ANALYSIS_1"),
  ANALYSIS_2: varchar("ANALYSIS_2"),
  ANALYSIS_3: varchar("ANALYSIS_3"),
  PAYMENT_DUE_DATE: timestamp("PAYMENT_DUE_DATE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_INVOICE_SCHEMA = createInsertSchema(INVOICE);

export const INVOICE_ITEM = sageSchema.table("INVOICE_ITEM", {
  INVOICE_NUMBER: integer("INVOICE_NUMBER"),
  ITEM_NUMBER: smallint("ITEM_NUMBER"),
  JOB_NUMBER: varchar("JOB_NUMBER"),
  SERVICE_FLAG: smallint("SERVICE_FLAG"),
  DESCRIPTION: varchar("DESCRIPTION"),
  TEXT: text("TEXT"),
  STOCK_CODE: varchar("STOCK_CODE"),
  COMMENT_1: varchar("COMMENT_1"),
  COMMENT_2: varchar("COMMENT_2"),
  UNIT_OF_SALE: varchar("UNIT_OF_SALE"),
  QUANTITY: doublePrecision("QUANTITY"),
  FOREIGN_UNIT_PRICE: doublePrecision("FOREIGN_UNIT_PRICE"),
  FOREIGN_DISCOUNT_AMOUNT: doublePrecision("FOREIGN_DISCOUNT_AMOUNT"),
  UNIT_PRICE: doublePrecision("UNIT_PRICE"),
  DISCOUNT_AMOUNT: doublePrecision("DISCOUNT_AMOUNT"),
  DISCOUNT_RATE: doublePrecision("DISCOUNT_RATE"),
  DELIVERY_DATE: timestamp("DELIVERY_DATE"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  TAX_CODE_ID: smallint("TAX_CODE_ID"),
  TAX_CODE: varchar("TAX_CODE"),
  ADD_DISC_RATE: doublePrecision("ADD_DISC_RATE"),
  TAX_RATE: doublePrecision("TAX_RATE"),
  FULL_NET_AMOUNT: doublePrecision("FULL_NET_AMOUNT"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  GROSS_AMOUNT: doublePrecision("GROSS_AMOUNT"),
  FOREIGN_FULL_NET_AMOUNT: doublePrecision("FOREIGN_FULL_NET_AMOUNT"),
  FOREIGN_NET_AMOUNT: doublePrecision("FOREIGN_NET_AMOUNT"),
  FOREIGN_TAX_AMOUNT: doublePrecision("FOREIGN_TAX_AMOUNT"),
  FOREIGN_GROSS_AMOUNT: doublePrecision("FOREIGN_GROSS_AMOUNT"),
  EXT_ORDER_REF: varchar("EXT_ORDER_REF"),
  EXT_ORDER_LINE_REF: integer("EXT_ORDER_LINE_REF"),
  PROJECT_ID: integer("PROJECT_ID"),
  ITEMID: integer("ITEMID"),
  NEGOTIATION_DISC_NET: doublePrecision("NEGOTIATION_DISC_NET"),
  NEGOTIATION_DISC_NET_BASE: doublePrecision("NEGOTIATION_DISC_NET_BASE"),
  GENERATED_MESSAGE: smallint("GENERATED_MESSAGE"),
  EC_VAT_DESCRIPTION_ID: integer("EC_VAT_DESCRIPTION_ID"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_INVOICE_ITEM_SCHEMA = createInsertSchema(INVOICE_ITEM);

export const UPDATE_LEDGER = sageSchema.table("UPDATE_LEDGER", {
  INVOICE_NUMBER: integer("INVOICE_NUMBER"),
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  TYPE: varchar("TYPE"),
  DATE: timestamp("DATE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  DESCRIPTION: varchar("DESCRIPTION"),
  ERROR: varchar("ERROR"),
  STOCK_CODE: varchar("STOCK_CODE"),
  QUANTITY: doublePrecision("QUANTITY"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  GROSS_AMOUNT: doublePrecision("GROSS_AMOUNT"),
  CARR_GROSS: doublePrecision("CARR_GROSS"),
});

export const INSERT_UPDATE_LEDGER_SCHEMA = createInsertSchema(UPDATE_LEDGER);

export const ACCOUNT_STATUS = sageSchema.table("ACCOUNT_STATUS", {
  NUMBER: smallint("NUMBER"),
  STATUS: varchar("STATUS"),
  ON_HOLD: smallint("ON_HOLD"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_ACCOUNT_STATUS_SCHEMA = createInsertSchema(ACCOUNT_STATUS);

export const COMMUNICATION_ADDRESS = sageSchema.table("COMMUNICATION_ADDRESS", {
  ACCOUNT_TYPE: smallint("ACCOUNT_TYPE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  LETTER_TYPE_ID: integer("LETTER_TYPE_ID"),
  ADDRESS_REF: integer("ADDRESS_REF"),
  ADDRESS_ID: varchar("ADDRESS_ID"),
  PREFERRED_EMAIL: smallint("PREFERRED_EMAIL"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_COMMUNICATION_ADDRESS_SCHEMA = createInsertSchema(
  COMMUNICATION_ADDRESS,
);

export const COUNTRY_CODE = sageSchema.table("COUNTRY_CODE", {
  CODE: varchar("CODE"),
  NAME: varchar("NAME"),
  EU_MEMBER: smallint("EU_MEMBER"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_COUNTRY_CODE_SCHEMA = createInsertSchema(COUNTRY_CODE);

export const CURRENCY = sageSchema.table("CURRENCY", {
  NUMBER: smallint("NUMBER"),
  CODE: varchar("CODE"),
  SYMBOL: varchar("SYMBOL"),
  NAME: varchar("NAME"),
  EMU_MEMBER: smallint("EMU_MEMBER"),
  BASE_CURRENCY: smallint("BASE_CURRENCY"),
  RATE: doublePrecision("RATE"),
  MAJOR_CURRENCY_UNIT: varchar("MAJOR_CURRENCY_UNIT"),
  MINOR_CURRENCY_UNIT: varchar("MINOR_CURRENCY_UNIT"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CURRENCY_SCHEMA = createInsertSchema(CURRENCY);

export const DEPARTMENT = sageSchema.table("DEPARTMENT", {
  NUMBER: smallint("NUMBER"),
  NAME: varchar("NAME"),
  REFERENCE: varchar("REFERENCE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_DEPARTMENT_SCHEMA = createInsertSchema(DEPARTMENT);

export const LETTER_TYPE = sageSchema.table("LETTER_TYPE", {
  UNIQUE_ID: integer("UNIQUE_ID"),
  LETTER_TYPE: smallint("LETTER_TYPE"),
  DESCRIPTION: varchar("DESCRIPTION"),
  USED_FOR_CUSTOMERS: smallint("USED_FOR_CUSTOMERS"),
  USED_FOR_SUPPLIERS: smallint("USED_FOR_SUPPLIERS"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_LETTER_TYPE_SCHEMA = createInsertSchema(LETTER_TYPE);

export const PRICE = sageSchema.table("PRICE", {
  PRICE_ID: varchar("PRICE_ID"),
  TYPE: varchar("TYPE"),
  PRICING_REF: varchar("PRICING_REF"),
  STOCK_CODE: varchar("STOCK_CODE"),
  CALC_METHOD: integer("CALC_METHOD"),
  CALC_VALUE: doublePrecision("CALC_VALUE"),
  STORED_PRICE: doublePrecision("STORED_PRICE"),
  ROUNDER_METHOD: smallint("ROUNDER_METHOD"),
  ROUNDER_DIRECTION: smallint("ROUNDER_DIRECTION"),
  ROUNDER_MULTIPLE_OF: doublePrecision("ROUNDER_MULTIPLE_OF"),
  ROUNDER_ADJUSTMENT: doublePrecision("ROUNDER_ADJUSTMENT"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PRICE_SCHEMA = createInsertSchema(PRICE);

export const PRICE_LIST = sageSchema.table("PRICE_LIST", {
  TYPE: varchar("TYPE"),
  PRICING_REF: varchar("PRICING_REF"),
  NAME: varchar("NAME"),
  CURRENCY: smallint("CURRENCY"),
  HAS_STATIC_PRICES: smallint("HAS_STATIC_PRICES"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PRICE_LIST_SCHEMA = createInsertSchema(PRICE_LIST);

export const TAX_CODE = sageSchema.table("TAX_CODE", {
  TAX_CODE: varchar("TAX_CODE"),
  TAX_CODE_ID: smallint("TAX_CODE_ID"),
  DESCRIPTION: varchar("DESCRIPTION"),
  TAX_RATE: doublePrecision("TAX_RATE"),
  VAT_INCLUDE: smallint("VAT_INCLUDE"),
  EURO_SALES: smallint("EURO_SALES"),
  EURO_PURCHASE: smallint("EURO_PURCHASE"),
  RELATED_CODE: smallint("RELATED_CODE"),
  RELATED_RATE: doublePrecision("RELATED_RATE"),
  IS_REVERSECHARGE: smallint("IS_REVERSECHARGE"),
});

export const INSERT_TAX_CODE_SCHEMA = createInsertSchema(TAX_CODE);

export const ACCRUAL = sageSchema.table("ACCRUAL", {
  NAME: varchar("NAME"),
  NOMINAL_CODE_1: varchar("NOMINAL_CODE_1"),
  NOMINAL_CODE_2: varchar("NOMINAL_CODE_2"),
  AMOUNT: doublePrecision("AMOUNT"),
  MONTHS_TO_POST: smallint("MONTHS_TO_POST"),
  MONTHS_POSTED: smallint("MONTHS_POSTED"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_ACCRUAL_SCHEMA = createInsertSchema(ACCRUAL);

export const CHART_LIST = sageSchema.table("CHART_LIST", {
  CHART: integer("CHART"),
  NAME: varchar("NAME"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CHART_LIST_SCHEMA = createInsertSchema(CHART_LIST);

export const FINANCIAL_BUDGET = sageSchema.table("FINANCIAL_BUDGET", {
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  ANALYSIS_ID: integer("ANALYSIS_ID"),
  YEAR: smallint("YEAR"),
  BUDGET: doublePrecision("BUDGET"),
  PERIOD: smallint("PERIOD"),
  ACTUAL: doublePrecision("ACTUAL"),
  CLEARED_ACTUAL: doublePrecision("CLEARED_ACTUAL"),
  CATEGORY: smallint("CATEGORY"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_FINANCIAL_BUDGET_SCHEMA =
  createInsertSchema(FINANCIAL_BUDGET);

export const FIXED_ASSET = sageSchema.table("FIXED_ASSET", {
  ASSET_REF: varchar("ASSET_REF"),
  DETAILS_1: varchar("DETAILS_1"),
  DETAILS_2: varchar("DETAILS_2"),
  DETAILS_3: varchar("DETAILS_3"),
  EMPLOYEE: varchar("EMPLOYEE"),
  SERIAL_NUMBER: varchar("SERIAL_NUMBER"),
  PURCHASE_REF: varchar("PURCHASE_REF"),
  BAL_SHEET_NOM_CODE: varchar("BAL_SHEET_NOM_CODE"),
  PROFIT_LOSS_NOM_CODE: varchar("PROFIT_LOSS_NOM_CODE"),
  DEP_METHOD_CODE: smallint("DEP_METHOD_CODE"),
  DEP_METHOD: varchar("DEP_METHOD"),
  DEP_RATE: doublePrecision("DEP_RATE"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  ASSET_CAT: smallint("ASSET_CAT"),
  PURCHASE_DATE: timestamp("PURCHASE_DATE"),
  COST_PRICE: doublePrecision("COST_PRICE"),
  DEP_LAST: doublePrecision("DEP_LAST"),
  DEP_NEXT: doublePrecision("DEP_NEXT"),
  DEP_TO_DATE: timestamp("DEP_TO_DATE"),
  NET_BOOK: doublePrecision("NET_BOOK"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_FIXED_ASSET_SCHEMA = createInsertSchema(FIXED_ASSET);

export const FIXED_ASSET_CAT = sageSchema.table("FIXED_ASSET_CAT", {
  NUMBER: smallint("NUMBER"),
  NAME: varchar("NAME"),
});

export const INSERT_FIXED_ASSET_CAT_SCHEMA =
  createInsertSchema(FIXED_ASSET_CAT);

export const NOMINAL_LEDGER = sageSchema.table("NOMINAL_LEDGER", {
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NAME: varchar("NAME"),
  ACCOUNT_TYPE: smallint("ACCOUNT_TYPE"),
  BALANCE: doublePrecision("BALANCE"),
  QUICK_RATIO: smallint("QUICK_RATIO"),
  SOFA_ID: integer("SOFA_ID"),
  PRIOR_YR_MTH1: doublePrecision("PRIOR_YR_MTH1"),
  PRIOR_YR_MTH2: doublePrecision("PRIOR_YR_MTH2"),
  PRIOR_YR_MTH3: doublePrecision("PRIOR_YR_MTH3"),
  PRIOR_YR_MTH4: doublePrecision("PRIOR_YR_MTH4"),
  PRIOR_YR_MTH5: doublePrecision("PRIOR_YR_MTH5"),
  PRIOR_YR_MTH6: doublePrecision("PRIOR_YR_MTH6"),
  PRIOR_YR_MTH7: doublePrecision("PRIOR_YR_MTH7"),
  PRIOR_YR_MTH8: doublePrecision("PRIOR_YR_MTH8"),
  PRIOR_YR_MTH9: doublePrecision("PRIOR_YR_MTH9"),
  PRIOR_YR_MTH10: doublePrecision("PRIOR_YR_MTH10"),
  PRIOR_YR_MTH11: doublePrecision("PRIOR_YR_MTH11"),
  PRIOR_YR_MTH12: doublePrecision("PRIOR_YR_MTH12"),
  PRIOR_YR2_MTH1: doublePrecision("PRIOR_YR2_MTH1"),
  PRIOR_YR2_MTH2: doublePrecision("PRIOR_YR2_MTH2"),
  PRIOR_YR2_MTH3: doublePrecision("PRIOR_YR2_MTH3"),
  PRIOR_YR2_MTH4: doublePrecision("PRIOR_YR2_MTH4"),
  PRIOR_YR2_MTH5: doublePrecision("PRIOR_YR2_MTH5"),
  PRIOR_YR2_MTH6: doublePrecision("PRIOR_YR2_MTH6"),
  PRIOR_YR2_MTH7: doublePrecision("PRIOR_YR2_MTH7"),
  PRIOR_YR2_MTH8: doublePrecision("PRIOR_YR2_MTH8"),
  PRIOR_YR2_MTH9: doublePrecision("PRIOR_YR2_MTH9"),
  PRIOR_YR2_MTH10: doublePrecision("PRIOR_YR2_MTH10"),
  PRIOR_YR2_MTH11: doublePrecision("PRIOR_YR2_MTH11"),
  PRIOR_YR2_MTH12: doublePrecision("PRIOR_YR2_MTH12"),
  PRIOR_YR3_MTH1: doublePrecision("PRIOR_YR3_MTH1"),
  PRIOR_YR3_MTH2: doublePrecision("PRIOR_YR3_MTH2"),
  PRIOR_YR3_MTH3: doublePrecision("PRIOR_YR3_MTH3"),
  PRIOR_YR3_MTH4: doublePrecision("PRIOR_YR3_MTH4"),
  PRIOR_YR3_MTH5: doublePrecision("PRIOR_YR3_MTH5"),
  PRIOR_YR3_MTH6: doublePrecision("PRIOR_YR3_MTH6"),
  PRIOR_YR3_MTH7: doublePrecision("PRIOR_YR3_MTH7"),
  PRIOR_YR3_MTH8: doublePrecision("PRIOR_YR3_MTH8"),
  PRIOR_YR3_MTH9: doublePrecision("PRIOR_YR3_MTH9"),
  PRIOR_YR3_MTH10: doublePrecision("PRIOR_YR3_MTH10"),
  PRIOR_YR3_MTH11: doublePrecision("PRIOR_YR3_MTH11"),
  PRIOR_YR3_MTH12: doublePrecision("PRIOR_YR3_MTH12"),
  PRIOR_YR4_MTH1: doublePrecision("PRIOR_YR4_MTH1"),
  PRIOR_YR4_MTH2: doublePrecision("PRIOR_YR4_MTH2"),
  PRIOR_YR4_MTH3: doublePrecision("PRIOR_YR4_MTH3"),
  PRIOR_YR4_MTH4: doublePrecision("PRIOR_YR4_MTH4"),
  PRIOR_YR4_MTH5: doublePrecision("PRIOR_YR4_MTH5"),
  PRIOR_YR4_MTH6: doublePrecision("PRIOR_YR4_MTH6"),
  PRIOR_YR4_MTH7: doublePrecision("PRIOR_YR4_MTH7"),
  PRIOR_YR4_MTH8: doublePrecision("PRIOR_YR4_MTH8"),
  PRIOR_YR4_MTH9: doublePrecision("PRIOR_YR4_MTH9"),
  PRIOR_YR4_MTH10: doublePrecision("PRIOR_YR4_MTH10"),
  PRIOR_YR4_MTH11: doublePrecision("PRIOR_YR4_MTH11"),
  PRIOR_YR4_MTH12: doublePrecision("PRIOR_YR4_MTH12"),
  PRIOR_YR5_MTH1: doublePrecision("PRIOR_YR5_MTH1"),
  PRIOR_YR5_MTH2: doublePrecision("PRIOR_YR5_MTH2"),
  PRIOR_YR5_MTH3: doublePrecision("PRIOR_YR5_MTH3"),
  PRIOR_YR5_MTH4: doublePrecision("PRIOR_YR5_MTH4"),
  PRIOR_YR5_MTH5: doublePrecision("PRIOR_YR5_MTH5"),
  PRIOR_YR5_MTH6: doublePrecision("PRIOR_YR5_MTH6"),
  PRIOR_YR5_MTH7: doublePrecision("PRIOR_YR5_MTH7"),
  PRIOR_YR5_MTH8: doublePrecision("PRIOR_YR5_MTH8"),
  PRIOR_YR5_MTH9: doublePrecision("PRIOR_YR5_MTH9"),
  PRIOR_YR5_MTH10: doublePrecision("PRIOR_YR5_MTH10"),
  PRIOR_YR5_MTH11: doublePrecision("PRIOR_YR5_MTH11"),
  PRIOR_YR5_MTH12: doublePrecision("PRIOR_YR5_MTH12"),
  BUDGET_MTH1: doublePrecision("BUDGET_MTH1"),
  BUDGET_MTH2: doublePrecision("BUDGET_MTH2"),
  BUDGET_MTH3: doublePrecision("BUDGET_MTH3"),
  BUDGET_MTH4: doublePrecision("BUDGET_MTH4"),
  BUDGET_MTH5: doublePrecision("BUDGET_MTH5"),
  BUDGET_MTH6: doublePrecision("BUDGET_MTH6"),
  BUDGET_MTH7: doublePrecision("BUDGET_MTH7"),
  BUDGET_MTH8: doublePrecision("BUDGET_MTH8"),
  BUDGET_MTH9: doublePrecision("BUDGET_MTH9"),
  BUDGET_MTH10: doublePrecision("BUDGET_MTH10"),
  BUDGET_MTH11: doublePrecision("BUDGET_MTH11"),
  BUDGET_MTH12: doublePrecision("BUDGET_MTH12"),
  BALANCE_BF: doublePrecision("BALANCE_BF"),
  BALANCE_MTH1: doublePrecision("BALANCE_MTH1"),
  BALANCE_MTH2: doublePrecision("BALANCE_MTH2"),
  BALANCE_MTH3: doublePrecision("BALANCE_MTH3"),
  BALANCE_MTH4: doublePrecision("BALANCE_MTH4"),
  BALANCE_MTH5: doublePrecision("BALANCE_MTH5"),
  BALANCE_MTH6: doublePrecision("BALANCE_MTH6"),
  BALANCE_MTH7: doublePrecision("BALANCE_MTH7"),
  BALANCE_MTH8: doublePrecision("BALANCE_MTH8"),
  BALANCE_MTH9: doublePrecision("BALANCE_MTH9"),
  BALANCE_MTH10: doublePrecision("BALANCE_MTH10"),
  BALANCE_MTH11: doublePrecision("BALANCE_MTH11"),
  BALANCE_MTH12: doublePrecision("BALANCE_MTH12"),
  BALANCE_FUTURE: doublePrecision("BALANCE_FUTURE"),
  DEBIT_BF: doublePrecision("DEBIT_BF"),
  DEBIT_MTH1: doublePrecision("DEBIT_MTH1"),
  DEBIT_MTH2: doublePrecision("DEBIT_MTH2"),
  DEBIT_MTH3: doublePrecision("DEBIT_MTH3"),
  DEBIT_MTH4: doublePrecision("DEBIT_MTH4"),
  DEBIT_MTH5: doublePrecision("DEBIT_MTH5"),
  DEBIT_MTH6: doublePrecision("DEBIT_MTH6"),
  DEBIT_MTH7: doublePrecision("DEBIT_MTH7"),
  DEBIT_MTH8: doublePrecision("DEBIT_MTH8"),
  DEBIT_MTH9: doublePrecision("DEBIT_MTH9"),
  DEBIT_MTH10: doublePrecision("DEBIT_MTH10"),
  DEBIT_MTH11: doublePrecision("DEBIT_MTH11"),
  DEBIT_MTH12: doublePrecision("DEBIT_MTH12"),
  DEBIT_FUTURE: doublePrecision("DEBIT_FUTURE"),
  CREDIT_BF: doublePrecision("CREDIT_BF"),
  CREDIT_MTH1: doublePrecision("CREDIT_MTH1"),
  CREDIT_MTH2: doublePrecision("CREDIT_MTH2"),
  CREDIT_MTH3: doublePrecision("CREDIT_MTH3"),
  CREDIT_MTH4: doublePrecision("CREDIT_MTH4"),
  CREDIT_MTH5: doublePrecision("CREDIT_MTH5"),
  CREDIT_MTH6: doublePrecision("CREDIT_MTH6"),
  CREDIT_MTH7: doublePrecision("CREDIT_MTH7"),
  CREDIT_MTH8: doublePrecision("CREDIT_MTH8"),
  CREDIT_MTH9: doublePrecision("CREDIT_MTH9"),
  CREDIT_MTH10: doublePrecision("CREDIT_MTH10"),
  CREDIT_MTH11: doublePrecision("CREDIT_MTH11"),
  CREDIT_MTH12: doublePrecision("CREDIT_MTH12"),
  CREDIT_FUTURE: doublePrecision("CREDIT_FUTURE"),
  INACTIVE_FLAG: integer("INACTIVE_FLAG"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_NOMINAL_LEDGER_SCHEMA = createInsertSchema(NOMINAL_LEDGER);

export const PERIOD = sageSchema.table("PERIOD", {
  PERIOD: smallint("PERIOD"),
  DESCRIPTION: varchar("DESCRIPTION"),
});

export const INSERT_PERIOD_SCHEMA = createInsertSchema(PERIOD);

export const PREPAYMENT = sageSchema.table("PREPAYMENT", {
  NAME: varchar("NAME"),
  NOMINAL_CODE_1: varchar("NOMINAL_CODE_1"),
  NOMINAL_CODE_2: varchar("NOMINAL_CODE_2"),
  AMOUNT: doublePrecision("AMOUNT"),
  MONTHS_TO_POST: smallint("MONTHS_TO_POST"),
  MONTHS_POSTED: smallint("MONTHS_POSTED"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PREPAYMENT_SCHEMA = createInsertSchema(PREPAYMENT);

export const PAYMENT_METHOD = sageSchema.table("PAYMENT_METHOD", {
  UNIQUE_ID: integer("UNIQUE_ID"),
  DESCRIPTION: varchar("DESCRIPTION"),
  ONLINE: smallint("ONLINE"),
  READONLY: smallint("READONLY"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PAYMENT_METHOD_SCHEMA = createInsertSchema(PAYMENT_METHOD);

export const PROTX_PAYMENT = sageSchema.table("PROTX_PAYMENT", {
  VENDOR_TX_CODE: varchar("VENDOR_TX_CODE"),
  VPS_TX_ID: varchar("VPS_TX_ID"),
  TX_AUTH_NUMBER: varchar("TX_AUTH_NUMBER"),
  AMOUNT: doublePrecision("AMOUNT"),
  ACCOUNT: varchar("ACCOUNT"),
  PAYMENT_DATE: timestamp("PAYMENT_DATE"),
  PAYMENT_TYPE: varchar("PAYMENT_TYPE"),
  TRANSACTION_TYPE: smallint("TRANSACTION_TYPE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROTX_PAYMENT_SCHEMA = createInsertSchema(PROTX_PAYMENT);

export const PROJECT = sageSchema.table("PROJECT", {
  REFERENCE: varchar("REFERENCE"),
  NAME: varchar("NAME"),
  DESCRIPTION: varchar("DESCRIPTION"),
  STATUS_ID: integer("STATUS_ID"),
  START_DATE: timestamp("START_DATE"),
  END_DATE: timestamp("END_DATE"),
  CUSTOMER_REF: varchar("CUSTOMER_REF"),
  ORDER_NUMBER: varchar("ORDER_NUMBER"),
  ANALYSIS_1: varchar("ANALYSIS_1"),
  ANALYSIS_2: varchar("ANALYSIS_2"),
  ANALYSIS_3: varchar("ANALYSIS_3"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  TELEPHONE: varchar("TELEPHONE"),
  FAX: varchar("FAX"),
  E_MAIL: varchar("E_MAIL"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  TOTAL_BILLED: doublePrecision("TOTAL_BILLED"),
  BILLED_NET: doublePrecision("BILLED_NET"),
  BILLED_TAX: doublePrecision("BILLED_TAX"),
  OUTSTANDING_TO_BILL: doublePrecision("OUTSTANDING_TO_BILL"),
  PRICE_QUOTED: doublePrecision("PRICE_QUOTED"),
  PROFIT_TO_DATE: timestamp("PROFIT_TO_DATE"),
  TOTAL_COST: doublePrecision("TOTAL_COST"),
  TOTAL_BUDGET: doublePrecision("TOTAL_BUDGET"),
  VARIANCE: doublePrecision("VARIANCE"),
  LAST_BILLED_DATE: timestamp("LAST_BILLED_DATE"),
  LAST_COST_DATE: timestamp("LAST_COST_DATE"),
  PROJECT_ID: integer("PROJECT_ID"),
  PARENT_PROJECT_NO: integer("PARENT_PROJECT_NO"),
  CHILD_POSITION: integer("CHILD_POSITION"),
  COMMITTED_COST: doublePrecision("COMMITTED_COST"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_SCHEMA = createInsertSchema(PROJECT);

export const PROJECT_BUDGET = sageSchema.table("PROJECT_BUDGET", {
  PROJECT_ID: integer("PROJECT_ID"),
  COST_CODE_ID: integer("COST_CODE_ID"),
  AMOUNT: doublePrecision("AMOUNT"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_BUDGET_SCHEMA = createInsertSchema(PROJECT_BUDGET);

export const PROJECT_COST_CODE = sageSchema.table("PROJECT_COST_CODE", {
  COST_CODE_ID: integer("COST_CODE_ID"),
  REFERENCE: varchar("REFERENCE"),
  DESCRIPTION: varchar("DESCRIPTION"),
  COST_TYPE_ID: integer("COST_TYPE_ID"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_COST_CODE_SCHEMA =
  createInsertSchema(PROJECT_COST_CODE);

export const PROJECT_COST_TYPE = sageSchema.table("PROJECT_COST_TYPE", {
  COST_TYPE_ID: integer("COST_TYPE_ID"),
  NAME: varchar("NAME"),
  IS_DEFAULT: smallint("IS_DEFAULT"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_COST_TYPE_SCHEMA =
  createInsertSchema(PROJECT_COST_TYPE);

export const PROJECT_ONLY_TRAN = sageSchema.table("PROJECT_ONLY_TRAN", {
  PROJECT_TRAN_ID: integer("PROJECT_TRAN_ID"),
  TYPE: varchar("TYPE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  REFERENCE: varchar("REFERENCE"),
  EXTRA_REF: varchar("EXTRA_REF"),
  DETAILS: varchar("DETAILS"),
  RESOURCE_ID: integer("RESOURCE_ID"),
  QUANTITY: doublePrecision("QUANTITY"),
  RATE: doublePrecision("RATE"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  TAX_CODE: varchar("TAX_CODE"),
  DEPT_NUMBER: integer("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_ONLY_TRAN_SCHEMA =
  createInsertSchema(PROJECT_ONLY_TRAN);

export const PROJECT_RELATIONSHIP = sageSchema.table("PROJECT_RELATIONSHIP", {
  ANCESTOR_ID: integer("ANCESTOR_ID"),
  DESCENDENT_ID: integer("DESCENDENT_ID"),
  GENERATION_GAP: integer("GENERATION_GAP"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_RELATIONSHIP_SCHEMA =
  createInsertSchema(PROJECT_RELATIONSHIP);

export const PROJECT_RESOURCE = sageSchema.table("PROJECT_RESOURCE", {
  RESOURCE_ID: integer("RESOURCE_ID"),
  REFERENCE: varchar("REFERENCE"),
  NAME: varchar("NAME"),
  UNIT: varchar("UNIT"),
  DEFAULT_COST_CODE_ID: integer("DEFAULT_COST_CODE_ID"),
  RATE: doublePrecision("RATE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_RESOURCE_SCHEMA =
  createInsertSchema(PROJECT_RESOURCE);

export const PROJECT_RESOURCE_TYPE = sageSchema.table("PROJECT_RESOURCE_TYPE", {
  TYPE_ID: integer("TYPE_ID"),
  NAME: varchar("NAME"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_RESOURCE_TYPE_SCHEMA = createInsertSchema(
  PROJECT_RESOURCE_TYPE,
);

export const PROJECT_REVENUE_CODE = sageSchema.table("PROJECT_REVENUE_CODE", {
  REVENUE_CODE_ID: integer("REVENUE_CODE_ID"),
  REFERENCE: varchar("REFERENCE"),
  DESCRIPTION: varchar("DESCRIPTION"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_REVENUE_CODE_SCHEMA =
  createInsertSchema(PROJECT_REVENUE_CODE);

export const PROJECT_STATUS = sageSchema.table("PROJECT_STATUS", {
  STATUS_ID: integer("STATUS_ID"),
  REFERENCE: varchar("REFERENCE"),
  NAME: varchar("NAME"),
  IS_DEFAULT: smallint("IS_DEFAULT"),
  ALLOW_POSTING: smallint("ALLOW_POSTING"),
  ALLOW_DELETE: smallint("ALLOW_DELETE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_STATUS_SCHEMA = createInsertSchema(PROJECT_STATUS);

export const PROJECT_TRAN = sageSchema.table("PROJECT_TRAN", {
  PROJECT_TRAN_ID: integer("PROJECT_TRAN_ID"),
  AUDIT_TRAIL_ID: integer("AUDIT_TRAIL_ID"),
  STOCK_TRAIL_ID: integer("STOCK_TRAIL_ID"),
  PROJECT_ID: integer("PROJECT_ID"),
  COST_CODE_ID: integer("COST_CODE_ID"),
  REVENUE_CODE_ID: integer("REVENUE_CODE_ID"),
  POP_ITEM_ID: integer("POP_ITEM_ID"),
  STOCK_ALLOCATION_ID: integer("STOCK_ALLOCATION_ID"),
  DATE: timestamp("DATE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PROJECT_TRAN_SCHEMA = createInsertSchema(PROJECT_TRAN);

export const GRN_ITEM = sageSchema.table("GRN_ITEM", {
  GRN_NUMBER: integer("GRN_NUMBER"),
  ITEM_NUMBER: integer("ITEM_NUMBER"),
  ORDER_NUMBER: integer("ORDER_NUMBER"),
  ORDER_ITEM: smallint("ORDER_ITEM"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  SUPPLIER_GRN_NUMBER: varchar("SUPPLIER_GRN_NUMBER"),
  STOCK_CODE: varchar("STOCK_CODE"),
  DESCRIPTION: varchar("DESCRIPTION"),
  DATE: timestamp("DATE"),
  QTY_RECEIVED: doublePrecision("QTY_RECEIVED"),
  QTY_ON_ORDER: doublePrecision("QTY_ON_ORDER"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_GRN_ITEM_SCHEMA = createInsertSchema(GRN_ITEM);

export const PURCHASE_DEL_ADDR = sageSchema.table("PURCHASE_DEL_ADDR", {
  REFERENCE: varchar("REFERENCE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  ADDRESS_REF: integer("ADDRESS_REF"),
  DESCRIPTION: varchar("DESCRIPTION"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  TELEPHONE: varchar("TELEPHONE"),
  FAX: varchar("FAX"),
  E_MAIL: varchar("E_MAIL"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  TAX_CODE: smallint("TAX_CODE"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  VAT_REG_NUMBER: varchar("VAT_REG_NUMBER"),
  TELEPHONE_2: varchar("TELEPHONE_2"),
  ADDRESS_TYPE_NAME: varchar("ADDRESS_TYPE_NAME"),
  ADDRESS_TYPE: smallint("ADDRESS_TYPE"),
  CONTACT_ROLE: varchar("CONTACT_ROLE"),
  NOTES: varchar("NOTES"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PURCHASE_DEL_ADDR_SCHEMA =
  createInsertSchema(PURCHASE_DEL_ADDR);

export const PURCHASE_LEDGER = sageSchema.table("PURCHASE_LEDGER", {
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  C_ADDRESS_1: varchar("C_ADDRESS_1"),
  C_ADDRESS_2: varchar("C_ADDRESS_2"),
  C_ADDRESS_3: varchar("C_ADDRESS_3"),
  C_ADDRESS_4: varchar("C_ADDRESS_4"),
  C_ADDRESS_5: varchar("C_ADDRESS_5"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  TELEPHONE: varchar("TELEPHONE"),
  TELEPHONE_2: varchar("TELEPHONE_2"),
  FAX: varchar("FAX"),
  E_MAIL: varchar("E_MAIL"),
  E_MAIL2: varchar("E_MAIL2"),
  E_MAIL3: varchar("E_MAIL3"),
  WEB_ADDRESS: varchar("WEB_ADDRESS"),
  TRADE_CONTACT: varchar("TRADE_CONTACT"),
  DEL_NAME: varchar("DEL_NAME"),
  DEL_ADDRESS_1: varchar("DEL_ADDRESS_1"),
  DEL_ADDRESS_2: varchar("DEL_ADDRESS_2"),
  DEL_ADDRESS_3: varchar("DEL_ADDRESS_3"),
  DEL_ADDRESS_4: varchar("DEL_ADDRESS_4"),
  DEL_ADDRESS_5: varchar("DEL_ADDRESS_5"),
  DEL_CONTACT_NAME: varchar("DEL_CONTACT_NAME"),
  DEL_TELEPHONE: varchar("DEL_TELEPHONE"),
  DEL_FAX: varchar("DEL_FAX"),
  ANALYSIS_1: varchar("ANALYSIS_1"),
  ANALYSIS_2: varchar("ANALYSIS_2"),
  ANALYSIS_3: varchar("ANALYSIS_3"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  STATUS_NUMBER: smallint("STATUS_NUMBER"),
  STATUS_TEXT: varchar("STATUS_TEXT"),
  DEF_TAX_CODE: varchar("DEF_TAX_CODE"),
  DEF_NOM_CODE: varchar("DEF_NOM_CODE"),
  VAT_REG_NUMBER: varchar("VAT_REG_NUMBER"),
  CURRENCY: smallint("CURRENCY"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  DISCOUNT_RATE: doublePrecision("DISCOUNT_RATE"),
  SETTLEMENT_DISC_RATE: doublePrecision("SETTLEMENT_DISC_RATE"),
  SETTLEMENT_DUE_DAYS: smallint("SETTLEMENT_DUE_DAYS"),
  PAYMENT_DUE_DAYS: smallint("PAYMENT_DUE_DAYS"),
  PAYMENT_DUE_FROM: smallint("PAYMENT_DUE_FROM"),
  PAYMENT_DUE_FROM_TEXT: varchar("PAYMENT_DUE_FROM_TEXT"),
  CREDIT_LIMIT: doublePrecision("CREDIT_LIMIT"),
  ACCOUNT_ON_HOLD: smallint("ACCOUNT_ON_HOLD"),
  TERMS: varchar("TERMS"),
  RESTRICT_MAIL: smallint("RESTRICT_MAIL"),
  TERMS_AGREED: smallint("TERMS_AGREED"),
  DATE_ACCOUNT_OPENED: timestamp("DATE_ACCOUNT_OPENED"),
  DATE_NEXT_CREDIT: timestamp("DATE_NEXT_CREDIT"),
  DATE_LAST_CREDIT: timestamp("DATE_LAST_CREDIT"),
  CREDIT_POSITION: varchar("CREDIT_POSITION"),
  CREDIT_POS_CODE: smallint("CREDIT_POS_CODE"),
  CAN_CHARGE: smallint("CAN_CHARGE"),
  USE_BACS: smallint("USE_BACS"),
  USE_BSOC: smallint("USE_BSOC"),
  BACS_REF: varchar("BACS_REF"),
  BUREAU_CODE: smallint("BUREAU_CODE"),
  CREDIT_REF: varchar("CREDIT_REF"),
  DATE_CREDIT_APPLIED: timestamp("DATE_CREDIT_APPLIED"),
  DATE_CREDIT_RECEIVED: timestamp("DATE_CREDIT_RECEIVED"),
  OVERRIDE_TAX_CODE: smallint("OVERRIDE_TAX_CODE"),
  LAST_PAYMENT_DATE: timestamp("LAST_PAYMENT_DATE"),
  FIRST_INV_DATE: timestamp("FIRST_INV_DATE"),
  LAST_INV_DATE: timestamp("LAST_INV_DATE"),
  BALANCE: doublePrecision("BALANCE"),
  FOREIGN_BALANCE: doublePrecision("FOREIGN_BALANCE"),
  TURNOVER_MTD: doublePrecision("TURNOVER_MTD"),
  TURNOVER_YTD: doublePrecision("TURNOVER_YTD"),
  PRIOR_YEAR: doublePrecision("PRIOR_YEAR"),
  BANK_NAME: varchar("BANK_NAME"),
  BANK_ADDRESS_1: varchar("BANK_ADDRESS_1"),
  BANK_ADDRESS_2: varchar("BANK_ADDRESS_2"),
  BANK_ADDRESS_3: varchar("BANK_ADDRESS_3"),
  BANK_ADDRESS_4: varchar("BANK_ADDRESS_4"),
  BANK_ADDRESS_5: varchar("BANK_ADDRESS_5"),
  BANK_SORT_CODE: varchar("BANK_SORT_CODE"),
  BANK_ACCOUNT_NAME: varchar("BANK_ACCOUNT_NAME"),
  BANK_ACCOUNT_NUMBER: varchar("BANK_ACCOUNT_NUMBER"),
  BANK_IBAN: varchar("BANK_IBAN"),
  BANK_BIC: varchar("BANK_BIC"),
  BANK_ROLLNUMBER: varchar("BANK_ROLLNUMBER"),
  BANK_ADDITIONALREF1: varchar("BANK_ADDITIONALREF1"),
  BANK_ADDITIONALREF2: varchar("BANK_ADDITIONALREF2"),
  BANK_ADDITIONALREF3: varchar("BANK_ADDITIONALREF3"),
  DONOR_TITLE: varchar("DONOR_TITLE"),
  DONOR_FORENAME: varchar("DONOR_FORENAME"),
  DONOR_SURNAME: varchar("DONOR_SURNAME"),
  DEFAULT_FUND_ID: integer("DEFAULT_FUND_ID"),
  INVOICE_BF: doublePrecision("INVOICE_BF"),
  INVOICE_MTH1: doublePrecision("INVOICE_MTH1"),
  INVOICE_MTH2: doublePrecision("INVOICE_MTH2"),
  INVOICE_MTH3: doublePrecision("INVOICE_MTH3"),
  INVOICE_MTH4: doublePrecision("INVOICE_MTH4"),
  INVOICE_MTH5: doublePrecision("INVOICE_MTH5"),
  INVOICE_MTH6: doublePrecision("INVOICE_MTH6"),
  INVOICE_MTH7: doublePrecision("INVOICE_MTH7"),
  INVOICE_MTH8: doublePrecision("INVOICE_MTH8"),
  INVOICE_MTH9: doublePrecision("INVOICE_MTH9"),
  INVOICE_MTH10: doublePrecision("INVOICE_MTH10"),
  INVOICE_MTH11: doublePrecision("INVOICE_MTH11"),
  INVOICE_MTH12: doublePrecision("INVOICE_MTH12"),
  INVOICE_CF: doublePrecision("INVOICE_CF"),
  CREDIT_BF: doublePrecision("CREDIT_BF"),
  CREDIT_MTH1: doublePrecision("CREDIT_MTH1"),
  CREDIT_MTH2: doublePrecision("CREDIT_MTH2"),
  CREDIT_MTH3: doublePrecision("CREDIT_MTH3"),
  CREDIT_MTH4: doublePrecision("CREDIT_MTH4"),
  CREDIT_MTH5: doublePrecision("CREDIT_MTH5"),
  CREDIT_MTH6: doublePrecision("CREDIT_MTH6"),
  CREDIT_MTH7: doublePrecision("CREDIT_MTH7"),
  CREDIT_MTH8: doublePrecision("CREDIT_MTH8"),
  CREDIT_MTH9: doublePrecision("CREDIT_MTH9"),
  CREDIT_MTH10: doublePrecision("CREDIT_MTH10"),
  CREDIT_MTH11: doublePrecision("CREDIT_MTH11"),
  CREDIT_MTH12: doublePrecision("CREDIT_MTH12"),
  CREDIT_CF: doublePrecision("CREDIT_CF"),
  PAYMENT_BF: doublePrecision("PAYMENT_BF"),
  PAYMENT_MTH1: doublePrecision("PAYMENT_MTH1"),
  PAYMENT_MTH2: doublePrecision("PAYMENT_MTH2"),
  PAYMENT_MTH3: doublePrecision("PAYMENT_MTH3"),
  PAYMENT_MTH4: doublePrecision("PAYMENT_MTH4"),
  PAYMENT_MTH5: doublePrecision("PAYMENT_MTH5"),
  PAYMENT_MTH6: doublePrecision("PAYMENT_MTH6"),
  PAYMENT_MTH7: doublePrecision("PAYMENT_MTH7"),
  PAYMENT_MTH8: doublePrecision("PAYMENT_MTH8"),
  PAYMENT_MTH9: doublePrecision("PAYMENT_MTH9"),
  PAYMENT_MTH10: doublePrecision("PAYMENT_MTH10"),
  PAYMENT_MTH11: doublePrecision("PAYMENT_MTH11"),
  PAYMENT_MTH12: doublePrecision("PAYMENT_MTH12"),
  PAYMENT_CF: doublePrecision("PAYMENT_CF"),
  DUNS_NUMBER: varchar("DUNS_NUMBER"),
  PRIORITY: smallint("PRIORITY"),
  PROMISED_PAYMENT: doublePrecision("PROMISED_PAYMENT"),
  PROMISED_PAYMENT_DATE: timestamp("PROMISED_PAYMENT_DATE"),
  REPORT_PASSWORD: varchar("REPORT_PASSWORD"),
  LETTERS_VIA_EMAIL: smallint("LETTERS_VIA_EMAIL"),
  PAYMENT_METHOD_ID: integer("PAYMENT_METHOD_ID"),
  DECLARATION_VALID_FROM: timestamp("DECLARATION_VALID_FROM"),
  INACTIVE_FLAG: smallint("INACTIVE_FLAG"),
  MANDATEID: varchar("MANDATEID"),
  STATUS: smallint("STATUS"),
  STATUS_DESCRIPTION: varchar("STATUS_DESCRIPTION"),
  LAST_REFRESHED_DATE: timestamp("LAST_REFRESHED_DATE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PURCHASE_LEDGER_SCHEMA =
  createInsertSchema(PURCHASE_LEDGER);

export const PURCHASE_ORDER = sageSchema.table("PURCHASE_ORDER", {
  ORDER_NUMBER: integer("ORDER_NUMBER"),
  ORDER_OR_QUOTE: varchar("ORDER_OR_QUOTE"),
  ORDER_DATE: timestamp("ORDER_DATE"),
  DELIVERY_DATE: timestamp("DELIVERY_DATE"),
  ORDER_STATUS_CODE: smallint("ORDER_STATUS_CODE"),
  ORDER_STATUS: varchar("ORDER_STATUS"),
  DELIVERY_STATUS_CODE: smallint("DELIVERY_STATUS_CODE"),
  DELIVERY_STATUS: varchar("DELIVERY_STATUS"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  C_ADDRESS_1: varchar("C_ADDRESS_1"),
  C_ADDRESS_2: varchar("C_ADDRESS_2"),
  C_ADDRESS_3: varchar("C_ADDRESS_3"),
  C_ADDRESS_4: varchar("C_ADDRESS_4"),
  C_ADDRESS_5: varchar("C_ADDRESS_5"),
  DEL_NAME: varchar("DEL_NAME"),
  DEL_ADDRESS_1: varchar("DEL_ADDRESS_1"),
  DEL_ADDRESS_2: varchar("DEL_ADDRESS_2"),
  DEL_ADDRESS_3: varchar("DEL_ADDRESS_3"),
  DEL_ADDRESS_4: varchar("DEL_ADDRESS_4"),
  DEL_ADDRESS_5: varchar("DEL_ADDRESS_5"),
  VAT_REG_NUMBER: varchar("VAT_REG_NUMBER"),
  REFERENCE: varchar("REFERENCE"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  TAKEN_BY: varchar("TAKEN_BY"),
  SUPP_ORDER_NUMBER: varchar("SUPP_ORDER_NUMBER"),
  SUPP_TEL_NUMBER: varchar("SUPP_TEL_NUMBER"),
  NOTES_1: varchar("NOTES_1"),
  NOTES_2: varchar("NOTES_2"),
  NOTES_3: varchar("NOTES_3"),
  SUPP_DISC_RATE: doublePrecision("SUPP_DISC_RATE"),
  FOREIGN_ITEMS_NET: doublePrecision("FOREIGN_ITEMS_NET"),
  FOREIGN_ITEMS_TAX: doublePrecision("FOREIGN_ITEMS_TAX"),
  FOREIGN_ITEMS_GROSS: doublePrecision("FOREIGN_ITEMS_GROSS"),
  ITEMS_NET: doublePrecision("ITEMS_NET"),
  ITEMS_TAX: doublePrecision("ITEMS_TAX"),
  ITEMS_GROSS: doublePrecision("ITEMS_GROSS"),
  TAX_RATE_1: doublePrecision("TAX_RATE_1"),
  TAX_RATE_2: doublePrecision("TAX_RATE_2"),
  TAX_RATE_3: doublePrecision("TAX_RATE_3"),
  TAX_RATE_4: doublePrecision("TAX_RATE_4"),
  TAX_RATE_5: doublePrecision("TAX_RATE_5"),
  NET_AMOUNT_1: doublePrecision("NET_AMOUNT_1"),
  NET_AMOUNT_2: doublePrecision("NET_AMOUNT_2"),
  NET_AMOUNT_3: doublePrecision("NET_AMOUNT_3"),
  NET_AMOUNT_4: doublePrecision("NET_AMOUNT_4"),
  NET_AMOUNT_5: doublePrecision("NET_AMOUNT_5"),
  TAX_AMOUNT_1: doublePrecision("TAX_AMOUNT_1"),
  TAX_AMOUNT_2: doublePrecision("TAX_AMOUNT_2"),
  TAX_AMOUNT_3: doublePrecision("TAX_AMOUNT_3"),
  TAX_AMOUNT_4: doublePrecision("TAX_AMOUNT_4"),
  TAX_AMOUNT_5: doublePrecision("TAX_AMOUNT_5"),
  COURIER_NUMBER: smallint("COURIER_NUMBER"),
  COURIER_NAME: varchar("COURIER_NAME"),
  CONSIGNMENT: varchar("CONSIGNMENT"),
  CARR_NOM_CODE: varchar("CARR_NOM_CODE"),
  CARR_TAX_CODE: varchar("CARR_TAX_CODE"),
  CARR_DEPT_NUMBER: smallint("CARR_DEPT_NUMBER"),
  CARR_DEPT_NAME: varchar("CARR_DEPT_NAME"),
  FOREIGN_CARR_NET: doublePrecision("FOREIGN_CARR_NET"),
  FOREIGN_CARR_TAX: doublePrecision("FOREIGN_CARR_TAX"),
  FOREIGN_CARR_GROSS: doublePrecision("FOREIGN_CARR_GROSS"),
  CARR_NET: doublePrecision("CARR_NET"),
  CARR_TAX: doublePrecision("CARR_TAX"),
  CARR_GROSS: doublePrecision("CARR_GROSS"),
  FOREIGN_INVOICE_NET: doublePrecision("FOREIGN_INVOICE_NET"),
  FOREIGN_INVOICE_TAX: doublePrecision("FOREIGN_INVOICE_TAX"),
  FOREIGN_INVOICE_GROSS: doublePrecision("FOREIGN_INVOICE_GROSS"),
  INVOICE_NET: doublePrecision("INVOICE_NET"),
  INVOICE_TAX: doublePrecision("INVOICE_TAX"),
  INVOICE_GROSS: doublePrecision("INVOICE_GROSS"),
  CURRENCY: smallint("CURRENCY"),
  CURRENCY_TYPE: smallint("CURRENCY_TYPE"),
  EURO_GROSS: doublePrecision("EURO_GROSS"),
  EURO_RATE: doublePrecision("EURO_RATE"),
  FOREIGN_RATE: doublePrecision("FOREIGN_RATE"),
  SETTLEMENT_DUE_DAYS: smallint("SETTLEMENT_DUE_DAYS"),
  SETTLEMENT_DISC_RATE: doublePrecision("SETTLEMENT_DISC_RATE"),
  FOREIGN_SETTLEMENT_DISC_AMOUNT: doublePrecision(
    "FOREIGN_SETTLEMENT_DISC_AMOUNT",
  ),
  FOREIGN_SETTLEMENT_TOTAL: doublePrecision("FOREIGN_SETTLEMENT_TOTAL"),
  SETTLEMENT_DISC_AMOUNT: doublePrecision("SETTLEMENT_DISC_AMOUNT"),
  SETTLEMENT_TOTAL: doublePrecision("SETTLEMENT_TOTAL"),
  PAYMENT_REF: varchar("PAYMENT_REF"),
  PRINTED: varchar("PRINTED"),
  PRINTED_CODE: smallint("PRINTED_CODE"),
  POSTED: varchar("POSTED"),
  POSTED_CODE: smallint("POSTED_CODE"),
  QUOTE_STATUS_ID: smallint("QUOTE_STATUS_ID"),
  RECURRING_REF: varchar("RECURRING_REF"),
  DUNS_NUMBER: varchar("DUNS_NUMBER"),
  PAYMENT_TYPE: smallint("PAYMENT_TYPE"),
  BANK_REF: varchar("BANK_REF"),
  GDN_NUMBER: integer("GDN_NUMBER"),
  PROJECT_ID: integer("PROJECT_ID"),
  ANALYSIS_1: varchar("ANALYSIS_1"),
  ANALYSIS_2: varchar("ANALYSIS_2"),
  ANALYSIS_3: varchar("ANALYSIS_3"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PURCHASE_ORDER_SCHEMA = createInsertSchema(PURCHASE_ORDER);

export const POP_ITEM = sageSchema.table("POP_ITEM", {
  ORDER_NUMBER: integer("ORDER_NUMBER"),
  ITEM_NUMBER: smallint("ITEM_NUMBER"),
  JOB_NUMBER: varchar("JOB_NUMBER"),
  SERVICE_FLAG: smallint("SERVICE_FLAG"),
  DESCRIPTION: varchar("DESCRIPTION"),
  TEXT: text("TEXT"),
  STOCK_CODE: varchar("STOCK_CODE"),
  COMMENT_1: varchar("COMMENT_1"),
  COMMENT_2: varchar("COMMENT_2"),
  UNIT_OF_SALE: varchar("UNIT_OF_SALE"),
  QTY_ORDER: doublePrecision("QTY_ORDER"),
  QTY_ALLOCATED: doublePrecision("QTY_ALLOCATED"),
  QTY_DELIVERED: doublePrecision("QTY_DELIVERED"),
  QTY_DESPATCH: doublePrecision("QTY_DESPATCH"),
  QTY_LAST_DESPATCH: doublePrecision("QTY_LAST_DESPATCH"),
  FOREIGN_UNIT_PRICE: doublePrecision("FOREIGN_UNIT_PRICE"),
  FOREIGN_DISCOUNT_AMOUNT: doublePrecision("FOREIGN_DISCOUNT_AMOUNT"),
  UNIT_PRICE: doublePrecision("UNIT_PRICE"),
  DISCOUNT_AMOUNT: doublePrecision("DISCOUNT_AMOUNT"),
  DISCOUNT_RATE: doublePrecision("DISCOUNT_RATE"),
  DELIVERY_DATE: timestamp("DELIVERY_DATE"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  TAX_CODE_ID: smallint("TAX_CODE_ID"),
  TAX_CODE: varchar("TAX_CODE"),
  ADD_DISC_RATE: doublePrecision("ADD_DISC_RATE"),
  TAX_RATE: doublePrecision("TAX_RATE"),
  FULL_NET_AMOUNT: doublePrecision("FULL_NET_AMOUNT"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  GROSS_AMOUNT: doublePrecision("GROSS_AMOUNT"),
  FOREIGN_FULL_NET_AMOUNT: doublePrecision("FOREIGN_FULL_NET_AMOUNT"),
  FOREIGN_NET_AMOUNT: doublePrecision("FOREIGN_NET_AMOUNT"),
  FOREIGN_TAX_AMOUNT: doublePrecision("FOREIGN_TAX_AMOUNT"),
  FOREIGN_GROSS_AMOUNT: doublePrecision("FOREIGN_GROSS_AMOUNT"),
  THIS_RECORD: integer("THIS_RECORD"),
  POP_ITEM_ID: integer("POP_ITEM_ID"),
  QTY_ALLOCATED_TO_PROJECT: doublePrecision("QTY_ALLOCATED_TO_PROJECT"),
  QTY_ISSUED_TO_PROJECT: doublePrecision("QTY_ISSUED_TO_PROJECT"),
  DUE_DATE: timestamp("DUE_DATE"),
  QTY_COMMITTED_TO_PROJECT: doublePrecision("QTY_COMMITTED_TO_PROJECT"),
  PROJECT_REF: varchar("PROJECT_REF"),
  PROJECT_NAME: varchar("PROJECT_NAME"),
  COST_CODE_REF: varchar("COST_CODE_REF"),
  ITEMID: integer("ITEMID"),
  GENERATED_MESSAGE: smallint("GENERATED_MESSAGE"),
  QTY_INVOICED: doublePrecision("QTY_INVOICED"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_POP_ITEM_SCHEMA = createInsertSchema(POP_ITEM);

export const SUPPLIER_PAYMENT_INFO = sageSchema.table("SUPPLIER_PAYMENT_INFO", {
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  PAYEE_STATUS: smallint("PAYEE_STATUS"),
  PAYEE_STATUS_DESCRIPTION: varchar("PAYEE_STATUS_DESCRIPTION"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_SUPPLIER_PAYMENT_INFO_SCHEMA = createInsertSchema(
  SUPPLIER_PAYMENT_INFO,
);

export const CREDIT_BUREAU = sageSchema.table("CREDIT_BUREAU", {
  NUMBER: smallint("NUMBER"),
  NAME: varchar("NAME"),
  WEB_ADDRESS: varchar("WEB_ADDRESS"),
  CHECK_ADDRESS: varchar("CHECK_ADDRESS"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_CREDIT_BUREAU_SCHEMA = createInsertSchema(CREDIT_BUREAU);

export const DIRECT_DEBIT_PAYMENT_REQUESTS = sageSchema.table(
  "DIRECT_DEBIT_PAYMENT_REQUESTS",
  {
    TRAN_NUMBER: integer("TRAN_NUMBER"),
    PAYMENT_REQUEST_ID: varchar("PAYMENT_REQUEST_ID"),
    DIRECT_DEBIT_STATUS: smallint("DIRECT_DEBIT_STATUS"),
    DIRECT_DEBIT_STATUS_DESCRIPTION: varchar("DIRECT_DEBIT_STATUS_DESCRIPTION"),
    LAST_REFRESHED_DATE: timestamp("LAST_REFRESHED_DATE"),
    FAILURE_REASON: varchar("FAILURE_REASON"),
    DIRECT_DEBIT_CHARGE_DATE: timestamp("DIRECT_DEBIT_CHARGE_DATE"),
    DIRECT_DEBIT_REQUESTED_AMOUNT: doublePrecision(
      "DIRECT_DEBIT_REQUESTED_AMOUNT",
    ),
    DIRECT_DEBIT_INSTALMENT_NUMBER: smallint("DIRECT_DEBIT_INSTALMENT_NUMBER"),
    RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
    RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
    RECORD_DELETED: smallint("RECORD_DELETED"),
  },
);

export const INSERT_DIRECT_DEBIT_PAYMENT_REQUESTS_SCHEMA = createInsertSchema(
  DIRECT_DEBIT_PAYMENT_REQUESTS,
);

export const GDN_ITEM = sageSchema.table("GDN_ITEM", {
  UNIQUE_ID: integer("UNIQUE_ID"),
  GDN_NUMBER: integer("GDN_NUMBER"),
  ITEM_NUMBER: integer("ITEM_NUMBER"),
  ORDER_NUMBER: integer("ORDER_NUMBER"),
  ORDER_ITEM: smallint("ORDER_ITEM"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  CUSTOMER_GDN_NUMBER: varchar("CUSTOMER_GDN_NUMBER"),
  STOCK_CODE: varchar("STOCK_CODE"),
  DESCRIPTION: varchar("DESCRIPTION"),
  DATE: timestamp("DATE"),
  QTY_DESPATCHED: doublePrecision("QTY_DESPATCHED"),
  QTY_ON_ORDER: doublePrecision("QTY_ON_ORDER"),
  PRINTED_FLAG: smallint("PRINTED_FLAG"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_GDN_ITEM_SCHEMA = createInsertSchema(GDN_ITEM);

export const PAYMENT_INFO = sageSchema.table("PAYMENT_INFO", {
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  PAYMENT_STATUS: smallint("PAYMENT_STATUS"),
  PAYMENT_STATUS_DESCRIPTION: varchar("PAYMENT_STATUS_DESCRIPTION"),
  FOREIGN_SAGE_PAYMENTS_RATE: doublePrecision("FOREIGN_SAGE_PAYMENTS_RATE"),
  FINAL_AMOUNT_BASE: doublePrecision("FINAL_AMOUNT_BASE"),
  FINAL_PAID_DATE: timestamp("FINAL_PAID_DATE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_PAYMENT_INFO_SCHEMA = createInsertSchema(PAYMENT_INFO);

export const SAGEPAY_PAY_BY_LINK = sageSchema.table("SAGEPAY_PAY_BY_LINK", {
  CUSTOMER_REFN: varchar("CUSTOMER_REFN"),
  PAYMENT_AMOUNT: doublePrecision("PAYMENT_AMOUNT"),
});

export const INSERT_SAGEPAY_PAY_BY_LINK_SCHEMA =
  createInsertSchema(SAGEPAY_PAY_BY_LINK);

export const SALES_DEL_ADDR = sageSchema.table("SALES_DEL_ADDR", {
  REFERENCE: varchar("REFERENCE"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  ADDRESS_REF: integer("ADDRESS_REF"),
  DESCRIPTION: varchar("DESCRIPTION"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  TELEPHONE: varchar("TELEPHONE"),
  FAX: varchar("FAX"),
  E_MAIL: varchar("E_MAIL"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  TAX_CODE: smallint("TAX_CODE"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  VAT_REG_NUMBER: varchar("VAT_REG_NUMBER"),
  TELEPHONE_2: varchar("TELEPHONE_2"),
  ADDRESS_TYPE_NAME: varchar("ADDRESS_TYPE_NAME"),
  ADDRESS_TYPE: smallint("ADDRESS_TYPE"),
  CONTACT_ROLE: varchar("CONTACT_ROLE"),
  NOTES: varchar("NOTES"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_SALES_DEL_ADDR_SCHEMA = createInsertSchema(SALES_DEL_ADDR);

export const SALES_LEDGER = sageSchema.table("SALES_LEDGER", {
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  C_ADDRESS_1: varchar("C_ADDRESS_1"),
  C_ADDRESS_2: varchar("C_ADDRESS_2"),
  C_ADDRESS_3: varchar("C_ADDRESS_3"),
  C_ADDRESS_4: varchar("C_ADDRESS_4"),
  C_ADDRESS_5: varchar("C_ADDRESS_5"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  TELEPHONE: varchar("TELEPHONE"),
  TELEPHONE_2: varchar("TELEPHONE_2"),
  FAX: varchar("FAX"),
  E_MAIL: varchar("E_MAIL"),
  E_MAIL2: varchar("E_MAIL2"),
  E_MAIL3: varchar("E_MAIL3"),
  DIRECT_DEBITS_EMAIL: varchar("DIRECT_DEBITS_EMAIL"),
  WEB_ADDRESS: varchar("WEB_ADDRESS"),
  TRADE_CONTACT: varchar("TRADE_CONTACT"),
  DEL_NAME: varchar("DEL_NAME"),
  DEL_ADDRESS_1: varchar("DEL_ADDRESS_1"),
  DEL_ADDRESS_2: varchar("DEL_ADDRESS_2"),
  DEL_ADDRESS_3: varchar("DEL_ADDRESS_3"),
  DEL_ADDRESS_4: varchar("DEL_ADDRESS_4"),
  DEL_ADDRESS_5: varchar("DEL_ADDRESS_5"),
  DEL_CONTACT_NAME: varchar("DEL_CONTACT_NAME"),
  DEL_TELEPHONE: varchar("DEL_TELEPHONE"),
  DEL_FAX: varchar("DEL_FAX"),
  ANALYSIS_1: varchar("ANALYSIS_1"),
  ANALYSIS_2: varchar("ANALYSIS_2"),
  ANALYSIS_3: varchar("ANALYSIS_3"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  STATUS_NUMBER: smallint("STATUS_NUMBER"),
  STATUS_TEXT: varchar("STATUS_TEXT"),
  DEF_TAX_CODE: varchar("DEF_TAX_CODE"),
  DEF_NOM_CODE: varchar("DEF_NOM_CODE"),
  VAT_REG_NUMBER: varchar("VAT_REG_NUMBER"),
  CURRENCY: smallint("CURRENCY"),
  COUNTRY_CODE: varchar("COUNTRY_CODE"),
  DISCOUNT_TYPE: smallint("DISCOUNT_TYPE"),
  DISCOUNT_RATE: doublePrecision("DISCOUNT_RATE"),
  PRICING_REF: varchar("PRICING_REF"),
  SETTLEMENT_DISC_RATE: doublePrecision("SETTLEMENT_DISC_RATE"),
  SETTLEMENT_DUE_DAYS: smallint("SETTLEMENT_DUE_DAYS"),
  PAYMENT_DUE_DAYS: smallint("PAYMENT_DUE_DAYS"),
  PAYMENT_DUE_FROM: smallint("PAYMENT_DUE_FROM"),
  PAYMENT_DUE_FROM_TEXT: varchar("PAYMENT_DUE_FROM_TEXT"),
  CREDIT_LIMIT: doublePrecision("CREDIT_LIMIT"),
  ACCOUNT_ON_HOLD: smallint("ACCOUNT_ON_HOLD"),
  TERMS: varchar("TERMS"),
  RESTRICT_MAIL: smallint("RESTRICT_MAIL"),
  TERMS_AGREED: smallint("TERMS_AGREED"),
  DATE_ACCOUNT_OPENED: timestamp("DATE_ACCOUNT_OPENED"),
  DATE_NEXT_CREDIT: timestamp("DATE_NEXT_CREDIT"),
  DATE_LAST_CREDIT: timestamp("DATE_LAST_CREDIT"),
  CREDIT_POSITION: varchar("CREDIT_POSITION"),
  CREDIT_POS_CODE: smallint("CREDIT_POS_CODE"),
  CAN_CHARGE: smallint("CAN_CHARGE"),
  USE_BACS: smallint("USE_BACS"),
  BACS_REF: varchar("BACS_REF"),
  BUREAU_CODE: smallint("BUREAU_CODE"),
  CREDIT_REF: varchar("CREDIT_REF"),
  DATE_CREDIT_APPLIED: timestamp("DATE_CREDIT_APPLIED"),
  DATE_CREDIT_RECEIVED: timestamp("DATE_CREDIT_RECEIVED"),
  OVERRIDE_TAX_CODE: smallint("OVERRIDE_TAX_CODE"),
  LAST_PAYMENT_DATE: timestamp("LAST_PAYMENT_DATE"),
  FIRST_INV_DATE: timestamp("FIRST_INV_DATE"),
  AVERAGE_PAY_DAYS: doublePrecision("AVERAGE_PAY_DAYS"),
  LAST_INV_DATE: timestamp("LAST_INV_DATE"),
  BALANCE: doublePrecision("BALANCE"),
  FOREIGN_BALANCE: doublePrecision("FOREIGN_BALANCE"),
  TURNOVER_MTD: doublePrecision("TURNOVER_MTD"),
  TURNOVER_YTD: doublePrecision("TURNOVER_YTD"),
  PRIOR_YEAR: doublePrecision("PRIOR_YEAR"),
  BANK_NAME: varchar("BANK_NAME"),
  BANK_ADDRESS_1: varchar("BANK_ADDRESS_1"),
  BANK_ADDRESS_2: varchar("BANK_ADDRESS_2"),
  BANK_ADDRESS_3: varchar("BANK_ADDRESS_3"),
  BANK_ADDRESS_4: varchar("BANK_ADDRESS_4"),
  BANK_ADDRESS_5: varchar("BANK_ADDRESS_5"),
  BANK_SORT_CODE: varchar("BANK_SORT_CODE"),
  BANK_ACCOUNT_NAME: varchar("BANK_ACCOUNT_NAME"),
  BANK_ACCOUNT_NUMBER: varchar("BANK_ACCOUNT_NUMBER"),
  BANK_IBAN: varchar("BANK_IBAN"),
  BANK_BIC: varchar("BANK_BIC"),
  BANK_ROLLNUMBER: varchar("BANK_ROLLNUMBER"),
  BANK_ADDITIONALREF1: varchar("BANK_ADDITIONALREF1"),
  BANK_ADDITIONALREF2: varchar("BANK_ADDITIONALREF2"),
  BANK_ADDITIONALREF3: varchar("BANK_ADDITIONALREF3"),
  DONOR_TITLE: varchar("DONOR_TITLE"),
  DONOR_FORENAME: varchar("DONOR_FORENAME"),
  DONOR_SURNAME: varchar("DONOR_SURNAME"),
  DEFAULT_FUND_ID: integer("DEFAULT_FUND_ID"),
  GIFT_AID: smallint("GIFT_AID"),
  INVOICE_BF: doublePrecision("INVOICE_BF"),
  INVOICE_MTH1: doublePrecision("INVOICE_MTH1"),
  INVOICE_MTH2: doublePrecision("INVOICE_MTH2"),
  INVOICE_MTH3: doublePrecision("INVOICE_MTH3"),
  INVOICE_MTH4: doublePrecision("INVOICE_MTH4"),
  INVOICE_MTH5: doublePrecision("INVOICE_MTH5"),
  INVOICE_MTH6: doublePrecision("INVOICE_MTH6"),
  INVOICE_MTH7: doublePrecision("INVOICE_MTH7"),
  INVOICE_MTH8: doublePrecision("INVOICE_MTH8"),
  INVOICE_MTH9: doublePrecision("INVOICE_MTH9"),
  INVOICE_MTH10: doublePrecision("INVOICE_MTH10"),
  INVOICE_MTH11: doublePrecision("INVOICE_MTH11"),
  INVOICE_MTH12: doublePrecision("INVOICE_MTH12"),
  INVOICE_CF: doublePrecision("INVOICE_CF"),
  CREDIT_BF: doublePrecision("CREDIT_BF"),
  CREDIT_MTH1: doublePrecision("CREDIT_MTH1"),
  CREDIT_MTH2: doublePrecision("CREDIT_MTH2"),
  CREDIT_MTH3: doublePrecision("CREDIT_MTH3"),
  CREDIT_MTH4: doublePrecision("CREDIT_MTH4"),
  CREDIT_MTH5: doublePrecision("CREDIT_MTH5"),
  CREDIT_MTH6: doublePrecision("CREDIT_MTH6"),
  CREDIT_MTH7: doublePrecision("CREDIT_MTH7"),
  CREDIT_MTH8: doublePrecision("CREDIT_MTH8"),
  CREDIT_MTH9: doublePrecision("CREDIT_MTH9"),
  CREDIT_MTH10: doublePrecision("CREDIT_MTH10"),
  CREDIT_MTH11: doublePrecision("CREDIT_MTH11"),
  CREDIT_MTH12: doublePrecision("CREDIT_MTH12"),
  CREDIT_CF: doublePrecision("CREDIT_CF"),
  PAYMENT_BF: doublePrecision("PAYMENT_BF"),
  PAYMENT_MTH1: doublePrecision("PAYMENT_MTH1"),
  PAYMENT_MTH2: doublePrecision("PAYMENT_MTH2"),
  PAYMENT_MTH3: doublePrecision("PAYMENT_MTH3"),
  PAYMENT_MTH4: doublePrecision("PAYMENT_MTH4"),
  PAYMENT_MTH5: doublePrecision("PAYMENT_MTH5"),
  PAYMENT_MTH6: doublePrecision("PAYMENT_MTH6"),
  PAYMENT_MTH7: doublePrecision("PAYMENT_MTH7"),
  PAYMENT_MTH8: doublePrecision("PAYMENT_MTH8"),
  PAYMENT_MTH9: doublePrecision("PAYMENT_MTH9"),
  PAYMENT_MTH10: doublePrecision("PAYMENT_MTH10"),
  PAYMENT_MTH11: doublePrecision("PAYMENT_MTH11"),
  PAYMENT_MTH12: doublePrecision("PAYMENT_MTH12"),
  PAYMENT_CF: doublePrecision("PAYMENT_CF"),
  DUNS_NUMBER: varchar("DUNS_NUMBER"),
  PRIORITY: smallint("PRIORITY"),
  PROMISED_PAYMENT: doublePrecision("PROMISED_PAYMENT"),
  PROMISED_PAYMENT_DATE: timestamp("PROMISED_PAYMENT_DATE"),
  REPORT_PASSWORD: varchar("REPORT_PASSWORD"),
  LETTERS_VIA_EMAIL: smallint("LETTERS_VIA_EMAIL"),
  PAYMENT_METHOD_ID: integer("PAYMENT_METHOD_ID"),
  DECLARATION_VALID_FROM: timestamp("DECLARATION_VALID_FROM"),
  INACTIVE_FLAG: smallint("INACTIVE_FLAG"),
  MANDATEID: varchar("MANDATEID"),
  STATUS: smallint("STATUS"),
  STATUS_DESCRIPTION: varchar("STATUS_DESCRIPTION"),
  LAST_REFRESHED_DATE: timestamp("LAST_REFRESHED_DATE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_SALES_LEDGER_SCHEMA = createInsertSchema(SALES_LEDGER);

export const SALES_ORDER = sageSchema.table("SALES_ORDER", {
  ORDER_NUMBER: integer("ORDER_NUMBER"),
  ORDER_TYPE_CODE: smallint("ORDER_TYPE_CODE"),
  ORDER_OR_QUOTE: varchar("ORDER_OR_QUOTE"),
  ORDER_DATE: timestamp("ORDER_DATE"),
  DESPATCH_DATE: timestamp("DESPATCH_DATE"),
  ALLOCATED_STATUS_CODE: smallint("ALLOCATED_STATUS_CODE"),
  ALLOCATED_STATUS: varchar("ALLOCATED_STATUS"),
  DESPATCH_STATUS_CODE: smallint("DESPATCH_STATUS_CODE"),
  DESPATCH_STATUS: varchar("DESPATCH_STATUS"),
  ACCOUNT_REF: varchar("ACCOUNT_REF"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
  ADDRESS_4: varchar("ADDRESS_4"),
  ADDRESS_5: varchar("ADDRESS_5"),
  C_ADDRESS_1: varchar("C_ADDRESS_1"),
  C_ADDRESS_2: varchar("C_ADDRESS_2"),
  C_ADDRESS_3: varchar("C_ADDRESS_3"),
  C_ADDRESS_4: varchar("C_ADDRESS_4"),
  C_ADDRESS_5: varchar("C_ADDRESS_5"),
  DEL_NAME: varchar("DEL_NAME"),
  DEL_ADDRESS_1: varchar("DEL_ADDRESS_1"),
  DEL_ADDRESS_2: varchar("DEL_ADDRESS_2"),
  DEL_ADDRESS_3: varchar("DEL_ADDRESS_3"),
  DEL_ADDRESS_4: varchar("DEL_ADDRESS_4"),
  DEL_ADDRESS_5: varchar("DEL_ADDRESS_5"),
  VAT_REG_NUMBER: varchar("VAT_REG_NUMBER"),
  INVOICE_NUMBER: varchar("INVOICE_NUMBER"),
  INVOICE_NUMBER_NUMERIC: integer("INVOICE_NUMBER_NUMERIC"),
  CONTACT_NAME: varchar("CONTACT_NAME"),
  TAKEN_BY: varchar("TAKEN_BY"),
  CUST_ORDER_NUMBER: varchar("CUST_ORDER_NUMBER"),
  CUST_TEL_NUMBER: varchar("CUST_TEL_NUMBER"),
  NOTES_1: varchar("NOTES_1"),
  NOTES_2: varchar("NOTES_2"),
  NOTES_3: varchar("NOTES_3"),
  CUST_DISC_RATE: doublePrecision("CUST_DISC_RATE"),
  FOREIGN_ITEMS_NET: doublePrecision("FOREIGN_ITEMS_NET"),
  FOREIGN_ITEMS_TAX: doublePrecision("FOREIGN_ITEMS_TAX"),
  FOREIGN_ITEMS_GROSS: doublePrecision("FOREIGN_ITEMS_GROSS"),
  ITEMS_NET: doublePrecision("ITEMS_NET"),
  ITEMS_TAX: doublePrecision("ITEMS_TAX"),
  ITEMS_GROSS: doublePrecision("ITEMS_GROSS"),
  TAX_RATE_1: doublePrecision("TAX_RATE_1"),
  TAX_RATE_2: doublePrecision("TAX_RATE_2"),
  TAX_RATE_3: doublePrecision("TAX_RATE_3"),
  TAX_RATE_4: doublePrecision("TAX_RATE_4"),
  TAX_RATE_5: doublePrecision("TAX_RATE_5"),
  NET_AMOUNT_1: doublePrecision("NET_AMOUNT_1"),
  NET_AMOUNT_2: doublePrecision("NET_AMOUNT_2"),
  NET_AMOUNT_3: doublePrecision("NET_AMOUNT_3"),
  NET_AMOUNT_4: doublePrecision("NET_AMOUNT_4"),
  NET_AMOUNT_5: doublePrecision("NET_AMOUNT_5"),
  TAX_AMOUNT_1: doublePrecision("TAX_AMOUNT_1"),
  TAX_AMOUNT_2: doublePrecision("TAX_AMOUNT_2"),
  TAX_AMOUNT_3: doublePrecision("TAX_AMOUNT_3"),
  TAX_AMOUNT_4: doublePrecision("TAX_AMOUNT_4"),
  TAX_AMOUNT_5: doublePrecision("TAX_AMOUNT_5"),
  GLOBAL_NOM_CODE: varchar("GLOBAL_NOM_CODE"),
  GLOBAL_DETAILS: varchar("GLOBAL_DETAILS"),
  GLOBAL_TAX_CODE: varchar("GLOBAL_TAX_CODE"),
  GLOBAL_DEPT_NUMBER: smallint("GLOBAL_DEPT_NUMBER"),
  GLOBAL_DEPT_NAME: varchar("GLOBAL_DEPT_NAME"),
  COURIER_NUMBER: smallint("COURIER_NUMBER"),
  COURIER_NAME: varchar("COURIER_NAME"),
  CONSIGNMENT: varchar("CONSIGNMENT"),
  CARR_NOM_CODE: varchar("CARR_NOM_CODE"),
  CARR_TAX_CODE: varchar("CARR_TAX_CODE"),
  CARR_DEPT_NUMBER: smallint("CARR_DEPT_NUMBER"),
  CARR_DEPT_NAME: varchar("CARR_DEPT_NAME"),
  FOREIGN_CARR_NET: doublePrecision("FOREIGN_CARR_NET"),
  FOREIGN_CARR_TAX: doublePrecision("FOREIGN_CARR_TAX"),
  FOREIGN_CARR_GROSS: doublePrecision("FOREIGN_CARR_GROSS"),
  CARR_NET: doublePrecision("CARR_NET"),
  CARR_TAX: doublePrecision("CARR_TAX"),
  CARR_GROSS: doublePrecision("CARR_GROSS"),
  FOREIGN_INVOICE_NET: doublePrecision("FOREIGN_INVOICE_NET"),
  FOREIGN_INVOICE_TAX: doublePrecision("FOREIGN_INVOICE_TAX"),
  FOREIGN_INVOICE_GROSS: doublePrecision("FOREIGN_INVOICE_GROSS"),
  INVOICE_NET: doublePrecision("INVOICE_NET"),
  INVOICE_TAX: doublePrecision("INVOICE_TAX"),
  INVOICE_GROSS: doublePrecision("INVOICE_GROSS"),
  CURRENCY: smallint("CURRENCY"),
  CURRENCY_TYPE: smallint("CURRENCY_TYPE"),
  EURO_GROSS: doublePrecision("EURO_GROSS"),
  EURO_RATE: doublePrecision("EURO_RATE"),
  FOREIGN_RATE: doublePrecision("FOREIGN_RATE"),
  SETTLEMENT_DUE_DAYS: smallint("SETTLEMENT_DUE_DAYS"),
  SETTLEMENT_DISC_RATE: doublePrecision("SETTLEMENT_DISC_RATE"),
  FOREIGN_SETTLEMENT_DISC_AMOUNT: doublePrecision(
    "FOREIGN_SETTLEMENT_DISC_AMOUNT",
  ),
  FOREIGN_SETTLEMENT_TOTAL: doublePrecision("FOREIGN_SETTLEMENT_TOTAL"),
  FOREIGN_AMOUNT_PREPAID: doublePrecision("FOREIGN_AMOUNT_PREPAID"),
  SETTLEMENT_DISC_AMOUNT: doublePrecision("SETTLEMENT_DISC_AMOUNT"),
  SETTLEMENT_TOTAL: doublePrecision("SETTLEMENT_TOTAL"),
  AMOUNT_PREPAID: doublePrecision("AMOUNT_PREPAID"),
  PAYMENT_REF: varchar("PAYMENT_REF"),
  PRINTED: varchar("PRINTED"),
  PRINTED_CODE: smallint("PRINTED_CODE"),
  QUOTE_EXPIRY_DATE: timestamp("QUOTE_EXPIRY_DATE"),
  QUOTE_STATUS: varchar("QUOTE_STATUS"),
  QUOTE_STATUS_ID: smallint("QUOTE_STATUS_ID"),
  RECURRING_REF: varchar("RECURRING_REF"),
  DUNS_NUMBER: varchar("DUNS_NUMBER"),
  NET_VALUE_DISCOUNT_NET: doublePrecision("NET_VALUE_DISCOUNT_NET"),
  NET_VALUE_DISCOUNT_NET_BASE: doublePrecision("NET_VALUE_DISCOUNT_NET_BASE"),
  NET_VALUE_DISCOUNT_RATE: doublePrecision("NET_VALUE_DISCOUNT_RATE"),
  NET_VALUE_DISCOUNT_DESC: varchar("NET_VALUE_DISCOUNT_DESC"),
  NET_VALUE_DISCOUNT_COMMENT_1: varchar("NET_VALUE_DISCOUNT_COMMENT_1"),
  NET_VALUE_DISCOUNT_COMMENT_2: varchar("NET_VALUE_DISCOUNT_COMMENT_2"),
  PAYMENT_TYPE: smallint("PAYMENT_TYPE"),
  BANK_REF: varchar("BANK_REF"),
  GDN_NUMBER: integer("GDN_NUMBER"),
  PROJECT_ID: integer("PROJECT_ID"),
  ANALYSIS_1: varchar("ANALYSIS_1"),
  ANALYSIS_2: varchar("ANALYSIS_2"),
  ANALYSIS_3: varchar("ANALYSIS_3"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_SALES_ORDER_SCHEMA = createInsertSchema(SALES_ORDER);

export const SOP_ITEM = sageSchema.table("SOP_ITEM", {
  ORDER_NUMBER: integer("ORDER_NUMBER"),
  ITEM_NUMBER: smallint("ITEM_NUMBER"),
  JOB_NUMBER: varchar("JOB_NUMBER"),
  SERVICE_FLAG: smallint("SERVICE_FLAG"),
  DESCRIPTION: varchar("DESCRIPTION"),
  TEXT: text("TEXT"),
  STOCK_CODE: varchar("STOCK_CODE"),
  COMMENT_1: varchar("COMMENT_1"),
  COMMENT_2: varchar("COMMENT_2"),
  UNIT_OF_SALE: varchar("UNIT_OF_SALE"),
  QTY_ORDER: doublePrecision("QTY_ORDER"),
  QTY_ALLOCATED: doublePrecision("QTY_ALLOCATED"),
  QTY_DELIVERED: doublePrecision("QTY_DELIVERED"),
  QTY_DESPATCH: doublePrecision("QTY_DESPATCH"),
  QTY_LAST_DESPATCH: doublePrecision("QTY_LAST_DESPATCH"),
  FOREIGN_UNIT_PRICE: doublePrecision("FOREIGN_UNIT_PRICE"),
  FOREIGN_DISCOUNT_AMOUNT: doublePrecision("FOREIGN_DISCOUNT_AMOUNT"),
  UNIT_PRICE: doublePrecision("UNIT_PRICE"),
  DISCOUNT_AMOUNT: doublePrecision("DISCOUNT_AMOUNT"),
  DISCOUNT_RATE: doublePrecision("DISCOUNT_RATE"),
  DELIVERY_DATE: timestamp("DELIVERY_DATE"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  TAX_CODE_ID: smallint("TAX_CODE_ID"),
  TAX_CODE: varchar("TAX_CODE"),
  ADD_DISC_RATE: doublePrecision("ADD_DISC_RATE"),
  TAX_RATE: doublePrecision("TAX_RATE"),
  FULL_NET_AMOUNT: doublePrecision("FULL_NET_AMOUNT"),
  NET_AMOUNT: doublePrecision("NET_AMOUNT"),
  TAX_AMOUNT: doublePrecision("TAX_AMOUNT"),
  GROSS_AMOUNT: doublePrecision("GROSS_AMOUNT"),
  FOREIGN_FULL_NET_AMOUNT: doublePrecision("FOREIGN_FULL_NET_AMOUNT"),
  FOREIGN_NET_AMOUNT: doublePrecision("FOREIGN_NET_AMOUNT"),
  FOREIGN_TAX_AMOUNT: doublePrecision("FOREIGN_TAX_AMOUNT"),
  FOREIGN_GROSS_AMOUNT: doublePrecision("FOREIGN_GROSS_AMOUNT"),
  EXT_ORDER_REF: varchar("EXT_ORDER_REF"),
  EXT_ORDER_LINE_REF: integer("EXT_ORDER_LINE_REF"),
  PROJECT_ID: integer("PROJECT_ID"),
  THIS_RECORD: integer("THIS_RECORD"),
  POP_ITEM_ID: integer("POP_ITEM_ID"),
  DUE_DATE: timestamp("DUE_DATE"),
  ITEMID: integer("ITEMID"),
  NEGOTIATION_DISC_NET: doublePrecision("NEGOTIATION_DISC_NET"),
  NEGOTIATION_DISC_NET_BASE: doublePrecision("NEGOTIATION_DISC_NET_BASE"),
  GENERATED_MESSAGE: smallint("GENERATED_MESSAGE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_SOP_ITEM_SCHEMA = createInsertSchema(SOP_ITEM);

export const STOCK = sageSchema.table("STOCK", {
  STOCK_CODE: varchar("STOCK_CODE"),
  DESCRIPTION: varchar("DESCRIPTION"),
  UNIT_OF_SALE: varchar("UNIT_OF_SALE"),
  NOMINAL_CODE: varchar("NOMINAL_CODE"),
  PURCHASE_REF: varchar("PURCHASE_REF"),
  SUPPLIER_PART_NUMBER: varchar("SUPPLIER_PART_NUMBER"),
  LOCATION: varchar("LOCATION"),
  COMMODITY_CODE: varchar("COMMODITY_CODE"),
  SALES_PRICE: doublePrecision("SALES_PRICE"),
  WEB_DESCRIPTION: varchar("WEB_DESCRIPTION"),
  WEB_DETAILS: varchar("WEB_DETAILS"),
  WEB_CATEGORY_1: varchar("WEB_CATEGORY_1"),
  WEB_CATEGORY_2: varchar("WEB_CATEGORY_2"),
  WEB_CATEGORY_3: varchar("WEB_CATEGORY_3"),
  WEB_IMAGE_FILE: varchar("WEB_IMAGE_FILE"),
  WEB_PUBLISH: smallint("WEB_PUBLISH"),
  WEB_SPECIAL: smallint("WEB_SPECIAL"),
  INTRASTAT_COMM_CODE: varchar("INTRASTAT_COMM_CODE"),
  INTRASTAT_IMPORT_DUTY_CODE: varchar("INTRASTAT_IMPORT_DUTY_CODE"),
  SUPP_UNIT_QTY: doublePrecision("SUPP_UNIT_QTY"),
  IGNORE_STK_LVL_FLAG: smallint("IGNORE_STK_LVL_FLAG"),
  DEPT_NUMBER: smallint("DEPT_NUMBER"),
  DEPT_NAME: varchar("DEPT_NAME"),
  TAX_CODE: varchar("TAX_CODE"),
  ASSEMBLY_LEVEL: smallint("ASSEMBLY_LEVEL"),
  LINK_LEVEL: smallint("LINK_LEVEL"),
  STOCK_CAT: smallint("STOCK_CAT"),
  STOCK_CAT_NAME: varchar("STOCK_CAT_NAME"),
  STOCK_TAKE_DATE: timestamp("STOCK_TAKE_DATE"),
  LAST_PURCHASE_PRICE: doublePrecision("LAST_PURCHASE_PRICE"),
  LAST_DISC_PURCHASE_PRICE: doublePrecision("LAST_DISC_PURCHASE_PRICE"),
  AVERAGE_COST_PRICE: doublePrecision("AVERAGE_COST_PRICE"),
  QTY_IN_STOCK: doublePrecision("QTY_IN_STOCK"),
  QTY_ON_ORDER: doublePrecision("QTY_ON_ORDER"),
  QTY_ALLOCATED: doublePrecision("QTY_ALLOCATED"),
  QTY_LAST_ORDER: doublePrecision("QTY_LAST_ORDER"),
  QTY_REORDER: doublePrecision("QTY_REORDER"),
  QTY_REORDER_LEVEL: doublePrecision("QTY_REORDER_LEVEL"),
  QTY_LAST_STOCK_TAKE: doublePrecision("QTY_LAST_STOCK_TAKE"),
  QTY_MAKEUP: doublePrecision("QTY_MAKEUP"),
  LAST_SALE_DATE: timestamp("LAST_SALE_DATE"),
  LAST_PURCHASE_DATE: timestamp("LAST_PURCHASE_DATE"),
  UNIT_WEIGHT: doublePrecision("UNIT_WEIGHT"),
  HAS_NO_COMPONENT: smallint("HAS_NO_COMPONENT"),
  HAS_BOM: varchar("HAS_BOM"),
  BARCODE: varchar("BARCODE"),
  COMPONENT_CODE_1: varchar("COMPONENT_CODE_1"),
  COMPONENT_CODE_2: varchar("COMPONENT_CODE_2"),
  COMPONENT_CODE_3: varchar("COMPONENT_CODE_3"),
  COMPONENT_CODE_4: varchar("COMPONENT_CODE_4"),
  COMPONENT_CODE_5: varchar("COMPONENT_CODE_5"),
  COMPONENT_CODE_6: varchar("COMPONENT_CODE_6"),
  COMPONENT_CODE_7: varchar("COMPONENT_CODE_7"),
  COMPONENT_CODE_8: varchar("COMPONENT_CODE_8"),
  COMPONENT_CODE_9: varchar("COMPONENT_CODE_9"),
  COMPONENT_CODE_10: varchar("COMPONENT_CODE_10"),
  COMPONENT_CODE_11: varchar("COMPONENT_CODE_11"),
  COMPONENT_CODE_12: varchar("COMPONENT_CODE_12"),
  COMPONENT_CODE_13: varchar("COMPONENT_CODE_13"),
  COMPONENT_CODE_14: varchar("COMPONENT_CODE_14"),
  COMPONENT_CODE_15: varchar("COMPONENT_CODE_15"),
  COMPONENT_CODE_16: varchar("COMPONENT_CODE_16"),
  COMPONENT_CODE_17: varchar("COMPONENT_CODE_17"),
  COMPONENT_CODE_18: varchar("COMPONENT_CODE_18"),
  COMPONENT_CODE_19: varchar("COMPONENT_CODE_19"),
  COMPONENT_CODE_20: varchar("COMPONENT_CODE_20"),
  COMPONENT_CODE_21: varchar("COMPONENT_CODE_21"),
  COMPONENT_CODE_22: varchar("COMPONENT_CODE_22"),
  COMPONENT_CODE_23: varchar("COMPONENT_CODE_23"),
  COMPONENT_CODE_24: varchar("COMPONENT_CODE_24"),
  COMPONENT_CODE_25: varchar("COMPONENT_CODE_25"),
  COMPONENT_CODE_26: varchar("COMPONENT_CODE_26"),
  COMPONENT_CODE_27: varchar("COMPONENT_CODE_27"),
  COMPONENT_CODE_28: varchar("COMPONENT_CODE_28"),
  COMPONENT_CODE_29: varchar("COMPONENT_CODE_29"),
  COMPONENT_CODE_30: varchar("COMPONENT_CODE_30"),
  COMPONENT_CODE_31: varchar("COMPONENT_CODE_31"),
  COMPONENT_CODE_32: varchar("COMPONENT_CODE_32"),
  COMPONENT_CODE_33: varchar("COMPONENT_CODE_33"),
  COMPONENT_CODE_34: varchar("COMPONENT_CODE_34"),
  COMPONENT_CODE_35: varchar("COMPONENT_CODE_35"),
  COMPONENT_CODE_36: varchar("COMPONENT_CODE_36"),
  COMPONENT_CODE_37: varchar("COMPONENT_CODE_37"),
  COMPONENT_CODE_38: varchar("COMPONENT_CODE_38"),
  COMPONENT_CODE_39: varchar("COMPONENT_CODE_39"),
  COMPONENT_CODE_40: varchar("COMPONENT_CODE_40"),
  COMPONENT_CODE_41: varchar("COMPONENT_CODE_41"),
  COMPONENT_CODE_42: varchar("COMPONENT_CODE_42"),
  COMPONENT_CODE_43: varchar("COMPONENT_CODE_43"),
  COMPONENT_CODE_44: varchar("COMPONENT_CODE_44"),
  COMPONENT_CODE_45: varchar("COMPONENT_CODE_45"),
  COMPONENT_CODE_46: varchar("COMPONENT_CODE_46"),
  COMPONENT_CODE_47: varchar("COMPONENT_CODE_47"),
  COMPONENT_CODE_48: varchar("COMPONENT_CODE_48"),
  COMPONENT_CODE_49: varchar("COMPONENT_CODE_49"),
  COMPONENT_CODE_50: varchar("COMPONENT_CODE_50"),
  COMPONENT_QTY_1: doublePrecision("COMPONENT_QTY_1"),
  COMPONENT_QTY_2: doublePrecision("COMPONENT_QTY_2"),
  COMPONENT_QTY_3: doublePrecision("COMPONENT_QTY_3"),
  COMPONENT_QTY_4: doublePrecision("COMPONENT_QTY_4"),
  COMPONENT_QTY_5: doublePrecision("COMPONENT_QTY_5"),
  COMPONENT_QTY_6: doublePrecision("COMPONENT_QTY_6"),
  COMPONENT_QTY_7: doublePrecision("COMPONENT_QTY_7"),
  COMPONENT_QTY_8: doublePrecision("COMPONENT_QTY_8"),
  COMPONENT_QTY_9: doublePrecision("COMPONENT_QTY_9"),
  COMPONENT_QTY_10: doublePrecision("COMPONENT_QTY_10"),
  COMPONENT_QTY_11: doublePrecision("COMPONENT_QTY_11"),
  COMPONENT_QTY_12: doublePrecision("COMPONENT_QTY_12"),
  COMPONENT_QTY_13: doublePrecision("COMPONENT_QTY_13"),
  COMPONENT_QTY_14: doublePrecision("COMPONENT_QTY_14"),
  COMPONENT_QTY_15: doublePrecision("COMPONENT_QTY_15"),
  COMPONENT_QTY_16: doublePrecision("COMPONENT_QTY_16"),
  COMPONENT_QTY_17: doublePrecision("COMPONENT_QTY_17"),
  COMPONENT_QTY_18: doublePrecision("COMPONENT_QTY_18"),
  COMPONENT_QTY_19: doublePrecision("COMPONENT_QTY_19"),
  COMPONENT_QTY_20: doublePrecision("COMPONENT_QTY_20"),
  COMPONENT_QTY_21: doublePrecision("COMPONENT_QTY_21"),
  COMPONENT_QTY_22: doublePrecision("COMPONENT_QTY_22"),
  COMPONENT_QTY_23: doublePrecision("COMPONENT_QTY_23"),
  COMPONENT_QTY_24: doublePrecision("COMPONENT_QTY_24"),
  COMPONENT_QTY_25: doublePrecision("COMPONENT_QTY_25"),
  COMPONENT_QTY_26: doublePrecision("COMPONENT_QTY_26"),
  COMPONENT_QTY_27: doublePrecision("COMPONENT_QTY_27"),
  COMPONENT_QTY_28: doublePrecision("COMPONENT_QTY_28"),
  COMPONENT_QTY_29: doublePrecision("COMPONENT_QTY_29"),
  COMPONENT_QTY_30: doublePrecision("COMPONENT_QTY_30"),
  COMPONENT_QTY_31: doublePrecision("COMPONENT_QTY_31"),
  COMPONENT_QTY_32: doublePrecision("COMPONENT_QTY_32"),
  COMPONENT_QTY_33: doublePrecision("COMPONENT_QTY_33"),
  COMPONENT_QTY_34: doublePrecision("COMPONENT_QTY_34"),
  COMPONENT_QTY_35: doublePrecision("COMPONENT_QTY_35"),
  COMPONENT_QTY_36: doublePrecision("COMPONENT_QTY_36"),
  COMPONENT_QTY_37: doublePrecision("COMPONENT_QTY_37"),
  COMPONENT_QTY_38: doublePrecision("COMPONENT_QTY_38"),
  COMPONENT_QTY_39: doublePrecision("COMPONENT_QTY_39"),
  COMPONENT_QTY_40: doublePrecision("COMPONENT_QTY_40"),
  COMPONENT_QTY_41: doublePrecision("COMPONENT_QTY_41"),
  COMPONENT_QTY_42: doublePrecision("COMPONENT_QTY_42"),
  COMPONENT_QTY_43: doublePrecision("COMPONENT_QTY_43"),
  COMPONENT_QTY_44: doublePrecision("COMPONENT_QTY_44"),
  COMPONENT_QTY_45: doublePrecision("COMPONENT_QTY_45"),
  COMPONENT_QTY_46: doublePrecision("COMPONENT_QTY_46"),
  COMPONENT_QTY_47: doublePrecision("COMPONENT_QTY_47"),
  COMPONENT_QTY_48: doublePrecision("COMPONENT_QTY_48"),
  COMPONENT_QTY_49: doublePrecision("COMPONENT_QTY_49"),
  COMPONENT_QTY_50: doublePrecision("COMPONENT_QTY_50"),
  QTY_SOLD_BF: doublePrecision("QTY_SOLD_BF"),
  QTY_SOLD_MTH1: doublePrecision("QTY_SOLD_MTH1"),
  QTY_SOLD_MTH2: doublePrecision("QTY_SOLD_MTH2"),
  QTY_SOLD_MTH3: doublePrecision("QTY_SOLD_MTH3"),
  QTY_SOLD_MTH4: doublePrecision("QTY_SOLD_MTH4"),
  QTY_SOLD_MTH5: doublePrecision("QTY_SOLD_MTH5"),
  QTY_SOLD_MTH6: doublePrecision("QTY_SOLD_MTH6"),
  QTY_SOLD_MTH7: doublePrecision("QTY_SOLD_MTH7"),
  QTY_SOLD_MTH8: doublePrecision("QTY_SOLD_MTH8"),
  QTY_SOLD_MTH9: doublePrecision("QTY_SOLD_MTH9"),
  QTY_SOLD_MTH10: doublePrecision("QTY_SOLD_MTH10"),
  QTY_SOLD_MTH11: doublePrecision("QTY_SOLD_MTH11"),
  QTY_SOLD_MTH12: doublePrecision("QTY_SOLD_MTH12"),
  QTY_SOLD_FUTURE: doublePrecision("QTY_SOLD_FUTURE"),
  SALES_BF: doublePrecision("SALES_BF"),
  SALES_MTH1: doublePrecision("SALES_MTH1"),
  SALES_MTH2: doublePrecision("SALES_MTH2"),
  SALES_MTH3: doublePrecision("SALES_MTH3"),
  SALES_MTH4: doublePrecision("SALES_MTH4"),
  SALES_MTH5: doublePrecision("SALES_MTH5"),
  SALES_MTH6: doublePrecision("SALES_MTH6"),
  SALES_MTH7: doublePrecision("SALES_MTH7"),
  SALES_MTH8: doublePrecision("SALES_MTH8"),
  SALES_MTH9: doublePrecision("SALES_MTH9"),
  SALES_MTH10: doublePrecision("SALES_MTH10"),
  SALES_MTH11: doublePrecision("SALES_MTH11"),
  SALES_MTH12: doublePrecision("SALES_MTH12"),
  SALES_FUTURE: doublePrecision("SALES_FUTURE"),
  COST_BF: doublePrecision("COST_BF"),
  COST_MTH1: doublePrecision("COST_MTH1"),
  COST_MTH2: doublePrecision("COST_MTH2"),
  COST_MTH3: doublePrecision("COST_MTH3"),
  COST_MTH4: doublePrecision("COST_MTH4"),
  COST_MTH5: doublePrecision("COST_MTH5"),
  COST_MTH6: doublePrecision("COST_MTH6"),
  COST_MTH7: doublePrecision("COST_MTH7"),
  COST_MTH8: doublePrecision("COST_MTH8"),
  COST_MTH9: doublePrecision("COST_MTH9"),
  COST_MTH10: doublePrecision("COST_MTH10"),
  COST_MTH11: doublePrecision("COST_MTH11"),
  COST_MTH12: doublePrecision("COST_MTH12"),
  COST_FUTURE: doublePrecision("COST_FUTURE"),
  THIS_RECORD: integer("THIS_RECORD"),
  BUDGET_QTY_SOLD_BF: doublePrecision("BUDGET_QTY_SOLD_BF"),
  BUDGET_QTY_SOLD_MTH1: doublePrecision("BUDGET_QTY_SOLD_MTH1"),
  BUDGET_QTY_SOLD_MTH2: doublePrecision("BUDGET_QTY_SOLD_MTH2"),
  BUDGET_QTY_SOLD_MTH3: doublePrecision("BUDGET_QTY_SOLD_MTH3"),
  BUDGET_QTY_SOLD_MTH4: doublePrecision("BUDGET_QTY_SOLD_MTH4"),
  BUDGET_QTY_SOLD_MTH5: doublePrecision("BUDGET_QTY_SOLD_MTH5"),
  BUDGET_QTY_SOLD_MTH6: doublePrecision("BUDGET_QTY_SOLD_MTH6"),
  BUDGET_QTY_SOLD_MTH7: doublePrecision("BUDGET_QTY_SOLD_MTH7"),
  BUDGET_QTY_SOLD_MTH8: doublePrecision("BUDGET_QTY_SOLD_MTH8"),
  BUDGET_QTY_SOLD_MTH9: doublePrecision("BUDGET_QTY_SOLD_MTH9"),
  BUDGET_QTY_SOLD_MTH10: doublePrecision("BUDGET_QTY_SOLD_MTH10"),
  BUDGET_QTY_SOLD_MTH11: doublePrecision("BUDGET_QTY_SOLD_MTH11"),
  BUDGET_QTY_SOLD_MTH12: doublePrecision("BUDGET_QTY_SOLD_MTH12"),
  BUDGET_QTY_SOLD_FUTURE: doublePrecision("BUDGET_QTY_SOLD_FUTURE"),
  BUDGET_SALES_BF: doublePrecision("BUDGET_SALES_BF"),
  BUDGET_SALES_MTH1: doublePrecision("BUDGET_SALES_MTH1"),
  BUDGET_SALES_MTH2: doublePrecision("BUDGET_SALES_MTH2"),
  BUDGET_SALES_MTH3: doublePrecision("BUDGET_SALES_MTH3"),
  BUDGET_SALES_MTH4: doublePrecision("BUDGET_SALES_MTH4"),
  BUDGET_SALES_MTH5: doublePrecision("BUDGET_SALES_MTH5"),
  BUDGET_SALES_MTH6: doublePrecision("BUDGET_SALES_MTH6"),
  BUDGET_SALES_MTH7: doublePrecision("BUDGET_SALES_MTH7"),
  BUDGET_SALES_MTH8: doublePrecision("BUDGET_SALES_MTH8"),
  BUDGET_SALES_MTH9: doublePrecision("BUDGET_SALES_MTH9"),
  BUDGET_SALES_MTH10: doublePrecision("BUDGET_SALES_MTH10"),
  BUDGET_SALES_MTH11: doublePrecision("BUDGET_SALES_MTH11"),
  BUDGET_SALES_MTH12: doublePrecision("BUDGET_SALES_MTH12"),
  BUDGET_SALES_FUTURE: doublePrecision("BUDGET_SALES_FUTURE"),
  PRIOR_YR_QTY_SOLD_BF: doublePrecision("PRIOR_YR_QTY_SOLD_BF"),
  PRIOR_YR_QTY_SOLD_MTH1: doublePrecision("PRIOR_YR_QTY_SOLD_MTH1"),
  PRIOR_YR_QTY_SOLD_MTH2: doublePrecision("PRIOR_YR_QTY_SOLD_MTH2"),
  PRIOR_YR_QTY_SOLD_MTH3: doublePrecision("PRIOR_YR_QTY_SOLD_MTH3"),
  PRIOR_YR_QTY_SOLD_MTH4: doublePrecision("PRIOR_YR_QTY_SOLD_MTH4"),
  PRIOR_YR_QTY_SOLD_MTH5: doublePrecision("PRIOR_YR_QTY_SOLD_MTH5"),
  PRIOR_YR_QTY_SOLD_MTH6: doublePrecision("PRIOR_YR_QTY_SOLD_MTH6"),
  PRIOR_YR_QTY_SOLD_MTH7: doublePrecision("PRIOR_YR_QTY_SOLD_MTH7"),
  PRIOR_YR_QTY_SOLD_MTH8: doublePrecision("PRIOR_YR_QTY_SOLD_MTH8"),
  PRIOR_YR_QTY_SOLD_MTH9: doublePrecision("PRIOR_YR_QTY_SOLD_MTH9"),
  PRIOR_YR_QTY_SOLD_MTH10: doublePrecision("PRIOR_YR_QTY_SOLD_MTH10"),
  PRIOR_YR_QTY_SOLD_MTH11: doublePrecision("PRIOR_YR_QTY_SOLD_MTH11"),
  PRIOR_YR_QTY_SOLD_MTH12: doublePrecision("PRIOR_YR_QTY_SOLD_MTH12"),
  PRIOR_YR_QTY_SOLD_FUTURE: doublePrecision("PRIOR_YR_QTY_SOLD_FUTURE"),
  PRIOR_YR_SALES_BF: doublePrecision("PRIOR_YR_SALES_BF"),
  PRIOR_YR_SALES_MTH1: doublePrecision("PRIOR_YR_SALES_MTH1"),
  PRIOR_YR_SALES_MTH2: doublePrecision("PRIOR_YR_SALES_MTH2"),
  PRIOR_YR_SALES_MTH3: doublePrecision("PRIOR_YR_SALES_MTH3"),
  PRIOR_YR_SALES_MTH4: doublePrecision("PRIOR_YR_SALES_MTH4"),
  PRIOR_YR_SALES_MTH5: doublePrecision("PRIOR_YR_SALES_MTH5"),
  PRIOR_YR_SALES_MTH6: doublePrecision("PRIOR_YR_SALES_MTH6"),
  PRIOR_YR_SALES_MTH7: doublePrecision("PRIOR_YR_SALES_MTH7"),
  PRIOR_YR_SALES_MTH8: doublePrecision("PRIOR_YR_SALES_MTH8"),
  PRIOR_YR_SALES_MTH9: doublePrecision("PRIOR_YR_SALES_MTH9"),
  PRIOR_YR_SALES_MTH10: doublePrecision("PRIOR_YR_SALES_MTH10"),
  PRIOR_YR_SALES_MTH11: doublePrecision("PRIOR_YR_SALES_MTH11"),
  PRIOR_YR_SALES_MTH12: doublePrecision("PRIOR_YR_SALES_MTH12"),
  PRIOR_YR_SALES_FUTURE: doublePrecision("PRIOR_YR_SALES_FUTURE"),
  PRIOR_YR_COST_BF: doublePrecision("PRIOR_YR_COST_BF"),
  PRIOR_YR_COST_MTH1: doublePrecision("PRIOR_YR_COST_MTH1"),
  PRIOR_YR_COST_MTH2: doublePrecision("PRIOR_YR_COST_MTH2"),
  PRIOR_YR_COST_MTH3: doublePrecision("PRIOR_YR_COST_MTH3"),
  PRIOR_YR_COST_MTH4: doublePrecision("PRIOR_YR_COST_MTH4"),
  PRIOR_YR_COST_MTH5: doublePrecision("PRIOR_YR_COST_MTH5"),
  PRIOR_YR_COST_MTH6: doublePrecision("PRIOR_YR_COST_MTH6"),
  PRIOR_YR_COST_MTH7: doublePrecision("PRIOR_YR_COST_MTH7"),
  PRIOR_YR_COST_MTH8: doublePrecision("PRIOR_YR_COST_MTH8"),
  PRIOR_YR_COST_MTH9: doublePrecision("PRIOR_YR_COST_MTH9"),
  PRIOR_YR_COST_MTH10: doublePrecision("PRIOR_YR_COST_MTH10"),
  PRIOR_YR_COST_MTH11: doublePrecision("PRIOR_YR_COST_MTH11"),
  PRIOR_YR_COST_MTH12: doublePrecision("PRIOR_YR_COST_MTH12"),
  PRIOR_YR_COST_FUTURE: doublePrecision("PRIOR_YR_COST_FUTURE"),
  DISC_A_LEVEL_1_QTY: doublePrecision("DISC_A_LEVEL_1_QTY"),
  DISC_A_LEVEL_2_QTY: doublePrecision("DISC_A_LEVEL_2_QTY"),
  DISC_A_LEVEL_3_QTY: doublePrecision("DISC_A_LEVEL_3_QTY"),
  DISC_A_LEVEL_4_QTY: doublePrecision("DISC_A_LEVEL_4_QTY"),
  DISC_A_LEVEL_5_QTY: doublePrecision("DISC_A_LEVEL_5_QTY"),
  DISC_A_LEVEL_6_QTY: doublePrecision("DISC_A_LEVEL_6_QTY"),
  DISC_A_LEVEL_7_QTY: doublePrecision("DISC_A_LEVEL_7_QTY"),
  DISC_A_LEVEL_8_QTY: doublePrecision("DISC_A_LEVEL_8_QTY"),
  DISC_A_LEVEL_9_QTY: doublePrecision("DISC_A_LEVEL_9_QTY"),
  DISC_A_LEVEL_10_QTY: doublePrecision("DISC_A_LEVEL_10_QTY"),
  DISC_A_LEVEL_1_RATE: doublePrecision("DISC_A_LEVEL_1_RATE"),
  DISC_A_LEVEL_2_RATE: doublePrecision("DISC_A_LEVEL_2_RATE"),
  DISC_A_LEVEL_3_RATE: doublePrecision("DISC_A_LEVEL_3_RATE"),
  DISC_A_LEVEL_4_RATE: doublePrecision("DISC_A_LEVEL_4_RATE"),
  DISC_A_LEVEL_5_RATE: doublePrecision("DISC_A_LEVEL_5_RATE"),
  DISC_A_LEVEL_6_RATE: doublePrecision("DISC_A_LEVEL_6_RATE"),
  DISC_A_LEVEL_7_RATE: doublePrecision("DISC_A_LEVEL_7_RATE"),
  DISC_A_LEVEL_8_RATE: doublePrecision("DISC_A_LEVEL_8_RATE"),
  DISC_A_LEVEL_9_RATE: doublePrecision("DISC_A_LEVEL_9_RATE"),
  DISC_A_LEVEL_10_RATE: doublePrecision("DISC_A_LEVEL_10_RATE"),
  DISC_B_LEVEL_1_QTY: doublePrecision("DISC_B_LEVEL_1_QTY"),
  DISC_B_LEVEL_2_QTY: doublePrecision("DISC_B_LEVEL_2_QTY"),
  DISC_B_LEVEL_3_QTY: doublePrecision("DISC_B_LEVEL_3_QTY"),
  DISC_B_LEVEL_4_QTY: doublePrecision("DISC_B_LEVEL_4_QTY"),
  DISC_B_LEVEL_5_QTY: doublePrecision("DISC_B_LEVEL_5_QTY"),
  DISC_B_LEVEL_6_QTY: doublePrecision("DISC_B_LEVEL_6_QTY"),
  DISC_B_LEVEL_7_QTY: doublePrecision("DISC_B_LEVEL_7_QTY"),
  DISC_B_LEVEL_8_QTY: doublePrecision("DISC_B_LEVEL_8_QTY"),
  DISC_B_LEVEL_9_QTY: doublePrecision("DISC_B_LEVEL_9_QTY"),
  DISC_B_LEVEL_10_QTY: doublePrecision("DISC_B_LEVEL_10_QTY"),
  DISC_B_LEVEL_1_RATE: doublePrecision("DISC_B_LEVEL_1_RATE"),
  DISC_B_LEVEL_2_RATE: doublePrecision("DISC_B_LEVEL_2_RATE"),
  DISC_B_LEVEL_3_RATE: doublePrecision("DISC_B_LEVEL_3_RATE"),
  DISC_B_LEVEL_4_RATE: doublePrecision("DISC_B_LEVEL_4_RATE"),
  DISC_B_LEVEL_5_RATE: doublePrecision("DISC_B_LEVEL_5_RATE"),
  DISC_B_LEVEL_6_RATE: doublePrecision("DISC_B_LEVEL_6_RATE"),
  DISC_B_LEVEL_7_RATE: doublePrecision("DISC_B_LEVEL_7_RATE"),
  DISC_B_LEVEL_8_RATE: doublePrecision("DISC_B_LEVEL_8_RATE"),
  DISC_B_LEVEL_9_RATE: doublePrecision("DISC_B_LEVEL_9_RATE"),
  DISC_B_LEVEL_10_RATE: doublePrecision("DISC_B_LEVEL_10_RATE"),
  DISC_C_LEVEL_1_QTY: doublePrecision("DISC_C_LEVEL_1_QTY"),
  DISC_C_LEVEL_2_QTY: doublePrecision("DISC_C_LEVEL_2_QTY"),
  DISC_C_LEVEL_3_QTY: doublePrecision("DISC_C_LEVEL_3_QTY"),
  DISC_C_LEVEL_4_QTY: doublePrecision("DISC_C_LEVEL_4_QTY"),
  DISC_C_LEVEL_5_QTY: doublePrecision("DISC_C_LEVEL_5_QTY"),
  DISC_C_LEVEL_6_QTY: doublePrecision("DISC_C_LEVEL_6_QTY"),
  DISC_C_LEVEL_7_QTY: doublePrecision("DISC_C_LEVEL_7_QTY"),
  DISC_C_LEVEL_8_QTY: doublePrecision("DISC_C_LEVEL_8_QTY"),
  DISC_C_LEVEL_9_QTY: doublePrecision("DISC_C_LEVEL_9_QTY"),
  DISC_C_LEVEL_10_QTY: doublePrecision("DISC_C_LEVEL_10_QTY"),
  DISC_C_LEVEL_1_RATE: doublePrecision("DISC_C_LEVEL_1_RATE"),
  DISC_C_LEVEL_2_RATE: doublePrecision("DISC_C_LEVEL_2_RATE"),
  DISC_C_LEVEL_3_RATE: doublePrecision("DISC_C_LEVEL_3_RATE"),
  DISC_C_LEVEL_4_RATE: doublePrecision("DISC_C_LEVEL_4_RATE"),
  DISC_C_LEVEL_5_RATE: doublePrecision("DISC_C_LEVEL_5_RATE"),
  DISC_C_LEVEL_6_RATE: doublePrecision("DISC_C_LEVEL_6_RATE"),
  DISC_C_LEVEL_7_RATE: doublePrecision("DISC_C_LEVEL_7_RATE"),
  DISC_C_LEVEL_8_RATE: doublePrecision("DISC_C_LEVEL_8_RATE"),
  DISC_C_LEVEL_9_RATE: doublePrecision("DISC_C_LEVEL_9_RATE"),
  DISC_C_LEVEL_10_RATE: doublePrecision("DISC_C_LEVEL_10_RATE"),
  DISC_D_LEVEL_1_QTY: doublePrecision("DISC_D_LEVEL_1_QTY"),
  DISC_D_LEVEL_2_QTY: doublePrecision("DISC_D_LEVEL_2_QTY"),
  DISC_D_LEVEL_3_QTY: doublePrecision("DISC_D_LEVEL_3_QTY"),
  DISC_D_LEVEL_4_QTY: doublePrecision("DISC_D_LEVEL_4_QTY"),
  DISC_D_LEVEL_5_QTY: doublePrecision("DISC_D_LEVEL_5_QTY"),
  DISC_D_LEVEL_6_QTY: doublePrecision("DISC_D_LEVEL_6_QTY"),
  DISC_D_LEVEL_7_QTY: doublePrecision("DISC_D_LEVEL_7_QTY"),
  DISC_D_LEVEL_8_QTY: doublePrecision("DISC_D_LEVEL_8_QTY"),
  DISC_D_LEVEL_9_QTY: doublePrecision("DISC_D_LEVEL_9_QTY"),
  DISC_D_LEVEL_10_QTY: doublePrecision("DISC_D_LEVEL_10_QTY"),
  DISC_D_LEVEL_1_RATE: doublePrecision("DISC_D_LEVEL_1_RATE"),
  DISC_D_LEVEL_2_RATE: doublePrecision("DISC_D_LEVEL_2_RATE"),
  DISC_D_LEVEL_3_RATE: doublePrecision("DISC_D_LEVEL_3_RATE"),
  DISC_D_LEVEL_4_RATE: doublePrecision("DISC_D_LEVEL_4_RATE"),
  DISC_D_LEVEL_5_RATE: doublePrecision("DISC_D_LEVEL_5_RATE"),
  DISC_D_LEVEL_6_RATE: doublePrecision("DISC_D_LEVEL_6_RATE"),
  DISC_D_LEVEL_7_RATE: doublePrecision("DISC_D_LEVEL_7_RATE"),
  DISC_D_LEVEL_8_RATE: doublePrecision("DISC_D_LEVEL_8_RATE"),
  DISC_D_LEVEL_9_RATE: doublePrecision("DISC_D_LEVEL_9_RATE"),
  DISC_D_LEVEL_10_RATE: doublePrecision("DISC_D_LEVEL_10_RATE"),
  DISC_E_LEVEL_1_QTY: doublePrecision("DISC_E_LEVEL_1_QTY"),
  DISC_E_LEVEL_2_QTY: doublePrecision("DISC_E_LEVEL_2_QTY"),
  DISC_E_LEVEL_3_QTY: doublePrecision("DISC_E_LEVEL_3_QTY"),
  DISC_E_LEVEL_4_QTY: doublePrecision("DISC_E_LEVEL_4_QTY"),
  DISC_E_LEVEL_5_QTY: doublePrecision("DISC_E_LEVEL_5_QTY"),
  DISC_E_LEVEL_6_QTY: doublePrecision("DISC_E_LEVEL_6_QTY"),
  DISC_E_LEVEL_7_QTY: doublePrecision("DISC_E_LEVEL_7_QTY"),
  DISC_E_LEVEL_8_QTY: doublePrecision("DISC_E_LEVEL_8_QTY"),
  DISC_E_LEVEL_9_QTY: doublePrecision("DISC_E_LEVEL_9_QTY"),
  DISC_E_LEVEL_10_QTY: doublePrecision("DISC_E_LEVEL_10_QTY"),
  DISC_E_LEVEL_1_RATE: doublePrecision("DISC_E_LEVEL_1_RATE"),
  DISC_E_LEVEL_2_RATE: doublePrecision("DISC_E_LEVEL_2_RATE"),
  DISC_E_LEVEL_3_RATE: doublePrecision("DISC_E_LEVEL_3_RATE"),
  DISC_E_LEVEL_4_RATE: doublePrecision("DISC_E_LEVEL_4_RATE"),
  DISC_E_LEVEL_5_RATE: doublePrecision("DISC_E_LEVEL_5_RATE"),
  DISC_E_LEVEL_6_RATE: doublePrecision("DISC_E_LEVEL_6_RATE"),
  DISC_E_LEVEL_7_RATE: doublePrecision("DISC_E_LEVEL_7_RATE"),
  DISC_E_LEVEL_8_RATE: doublePrecision("DISC_E_LEVEL_8_RATE"),
  DISC_E_LEVEL_9_RATE: doublePrecision("DISC_E_LEVEL_9_RATE"),
  DISC_E_LEVEL_10_RATE: doublePrecision("DISC_E_LEVEL_10_RATE"),
  PURCHASE_NOMINAL_CODE: varchar("PURCHASE_NOMINAL_CODE"),
  INACTIVE_FLAG: smallint("INACTIVE_FLAG"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_STOCK_SCHEMA = createInsertSchema(STOCK);

export const STOCK_ALLOCATION = sageSchema.table("STOCK_ALLOCATION", {
  STOCK_ALLOCATION_ID: integer("STOCK_ALLOCATION_ID"),
  PROJECT_ID: integer("PROJECT_ID"),
  COST_CODE_ID: integer("COST_CODE_ID"),
  STOCK_CODE: varchar("STOCK_CODE"),
  DETAILS: varchar("DETAILS"),
  REFERENCE: varchar("REFERENCE"),
  DATE: timestamp("DATE"),
  QTY_ALLOCATED: doublePrecision("QTY_ALLOCATED"),
  QTY_ISSUED: doublePrecision("QTY_ISSUED"),
  COST_PRICE: doublePrecision("COST_PRICE"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_STOCK_ALLOCATION_SCHEMA =
  createInsertSchema(STOCK_ALLOCATION);

export const STOCK_CAT = sageSchema.table("STOCK_CAT", {
  NUMBER: smallint("NUMBER"),
  NAME: varchar("NAME"),
});

export const INSERT_STOCK_CAT_SCHEMA = createInsertSchema(STOCK_CAT);

export const STOCK_COMP = sageSchema.table("STOCK_COMP", {
  ASSEMBLY_CODE: varchar("ASSEMBLY_CODE"),
  COMPONENT_CODE: varchar("COMPONENT_CODE"),
  COMPONENT_CODE_INDENT: varchar("COMPONENT_CODE_INDENT"),
  COMPONENT_QTY: doublePrecision("COMPONENT_QTY"),
  COMPONENT_LEVEL: smallint("COMPONENT_LEVEL"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_STOCK_COMP_SCHEMA = createInsertSchema(STOCK_COMP);

export const STOCK_TRAN = sageSchema.table("STOCK_TRAN", {
  TRAN_NUMBER: integer("TRAN_NUMBER"),
  STOCK_CODE: varchar("STOCK_CODE"),
  TYPE: varchar("TYPE"),
  DATE: timestamp("DATE"),
  REFERENCE: varchar("REFERENCE"),
  REFERENCE_NUMERIC: integer("REFERENCE_NUMERIC"),
  DETAILS: varchar("DETAILS"),
  QUANTITY: doublePrecision("QUANTITY"),
  COST_PRICE: doublePrecision("COST_PRICE"),
  SALES_PRICE: doublePrecision("SALES_PRICE"),
  QTY_USED: doublePrecision("QTY_USED"),
  ISP_REFERENCE: integer("ISP_REFERENCE"),
  ARTEFACT_TYPE: smallint("ARTEFACT_TYPE"),
  GDN_NUMBER: integer("GDN_NUMBER"),
  GRN_NUMBER: integer("GRN_NUMBER"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_STOCK_TRAN_SCHEMA = createInsertSchema(STOCK_TRAN);

export const ESUBMISSION_SETTINGS = sageSchema.table("ESUBMISSION_SETTINGS", {
  USER_ID: varchar("USER_ID"),
  EMPLOYER_REFERENCE: varchar("EMPLOYER_REFERENCE"),
  IS_AGENT: smallint("IS_AGENT"),
  SUB_FAMILY: smallint("SUB_FAMILY"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_ESUBMISSION_SETTINGS_SCHEMA =
  createInsertSchema(ESUBMISSION_SETTINGS);

export const RTD_SUMMARY = sageSchema.table("RTD_SUMMARY", {
  VAT_BOX: smallint("VAT_BOX"),
  VAT_BOX_NAME: varchar("VAT_BOX_NAME"),
  TAX_CODE: varchar("TAX_CODE"),
  AMOUNT_INVOICE: doublePrecision("AMOUNT_INVOICE"),
  AMOUNT_CREDIT: doublePrecision("AMOUNT_CREDIT"),
  AMOUNT_BANK: doublePrecision("AMOUNT_BANK"),
  AMOUNT_JOURNAL: doublePrecision("AMOUNT_JOURNAL"),
  AMOUNT_REFUND: doublePrecision("AMOUNT_REFUND"),
  AMOUNT_DISCOUNT: doublePrecision("AMOUNT_DISCOUNT"),
  AMOUNT_REVALUATION: doublePrecision("AMOUNT_REVALUATION"),
  AMOUNT_ADJUSTMENT: doublePrecision("AMOUNT_ADJUSTMENT"),
  HEADING_INVOICE: varchar("HEADING_INVOICE"),
  HEADING_CREDIT: varchar("HEADING_CREDIT"),
  HEADING_BANK: varchar("HEADING_BANK"),
  HEADING_JOURNAL: varchar("HEADING_JOURNAL"),
  HEADING_REFUND: varchar("HEADING_REFUND"),
  HEADING_REVALUATION: varchar("HEADING_REVALUATION"),
});

export const INSERT_RTD_SUMMARY_SCHEMA = createInsertSchema(RTD_SUMMARY);

export const VAT_ADJUSTMENT = sageSchema.table("VAT_ADJUSTMENT", {
  VAT_BOX: smallint("VAT_BOX"),
  REASON: varchar("REASON"),
  VALUE: doublePrecision("VALUE"),
});

export const INSERT_VAT_ADJUSTMENT_SCHEMA = createInsertSchema(VAT_ADJUSTMENT);

export const VAT_DETAILS = sageSchema.table("VAT_DETAILS", {
  VAT_BOX: integer("VAT_BOX"),
  VAT_BOX_NAME: varchar("VAT_BOX_NAME"),
  TAX_CODE: varchar("TAX_CODE"),
  TRANSACTION_ID: integer("TRANSACTION_ID"),
  TRANSACTION_TYPE: varchar("TRANSACTION_TYPE"),
  ACCOUNT: varchar("ACCOUNT"),
  NOMINAL: varchar("NOMINAL"),
  REF: varchar("REF"),
  DATE: timestamp("DATE"),
  DETAILS: varchar("DETAILS"),
  AMOUNT: doublePrecision("AMOUNT"),
  VAT_FLAG_CODE: varchar("VAT_FLAG_CODE"),
  VAT_TRAN_NAME: varchar("VAT_TRAN_NAME"),
});

export const INSERT_VAT_DETAILS_SCHEMA = createInsertSchema(VAT_DETAILS);

export const VAT_REV_CHARGE_DETAIL = sageSchema.table("VAT_REV_CHARGE_DETAIL", {
  CUSTOMER_REF: varchar("CUSTOMER_REF"),
  VAT_NUMBER: varchar("VAT_NUMBER"),
  TRANS_NO: integer("TRANS_NO"),
  TRAN_TYPE: varchar("TRAN_TYPE"),
  NOMINAL_REF: varchar("NOMINAL_REF"),
  DATE: timestamp("DATE"),
  AMOUNT: doublePrecision("AMOUNT"),
});

export const INSERT_VAT_REV_CHARGE_DETAIL_SCHEMA = createInsertSchema(
  VAT_REV_CHARGE_DETAIL,
);

export const VAT_REV_CHARGE_HEADER = sageSchema.table("VAT_REV_CHARGE_HEADER", {
  DATE_FROM: timestamp("DATE_FROM"),
  DATE_TO: timestamp("DATE_TO"),
  VAT_NUMBER: varchar("VAT_NUMBER"),
  NAME: varchar("NAME"),
  ADDRESS_1: varchar("ADDRESS_1"),
  ADDRESS_2: varchar("ADDRESS_2"),
  ADDRESS_3: varchar("ADDRESS_3"),
});

export const INSERT_VAT_REV_CHARGE_HEADER_SCHEMA = createInsertSchema(
  VAT_REV_CHARGE_HEADER,
);

export const VAT_REV_CHARGE_RETURN = sageSchema.table("VAT_REV_CHARGE_RETURN", {
  CUSTOMER_REF: varchar("CUSTOMER_REF"),
  VAT_NUMBER: varchar("VAT_NUMBER"),
  MONTH_1: doublePrecision("MONTH_1"),
  MONTH_2: doublePrecision("MONTH_2"),
  MONTH_3: doublePrecision("MONTH_3"),
  MONTH_4: doublePrecision("MONTH_4"),
  MONTH_5: doublePrecision("MONTH_5"),
  MONTH_6: doublePrecision("MONTH_6"),
  MONTH_7: doublePrecision("MONTH_7"),
  MONTH_8: doublePrecision("MONTH_8"),
  MONTH_9: doublePrecision("MONTH_9"),
  MONTH_10: doublePrecision("MONTH_10"),
  MONTH_11: doublePrecision("MONTH_11"),
  MONTH_12: doublePrecision("MONTH_12"),
});

export const INSERT_VAT_REV_CHARGE_RETURN_SCHEMA = createInsertSchema(
  VAT_REV_CHARGE_RETURN,
);

export const VAT_SUMMARY = sageSchema.table("VAT_SUMMARY", {
  VAT_BOX: smallint("VAT_BOX"),
  VAT_BOX_NAME: varchar("VAT_BOX_NAME"),
  TAX_CODE: varchar("TAX_CODE"),
  AMOUNT_INVOICE: doublePrecision("AMOUNT_INVOICE"),
  AMOUNT_CREDIT: doublePrecision("AMOUNT_CREDIT"),
  AMOUNT_BANK: doublePrecision("AMOUNT_BANK"),
  AMOUNT_JOURNAL: doublePrecision("AMOUNT_JOURNAL"),
  AMOUNT_REFUND: doublePrecision("AMOUNT_REFUND"),
  AMOUNT_DISCOUNT: doublePrecision("AMOUNT_DISCOUNT"),
  AMOUNT_REVALUATION: doublePrecision("AMOUNT_REVALUATION"),
  HEADING_INVOICE: varchar("HEADING_INVOICE"),
  HEADING_CREDIT: varchar("HEADING_CREDIT"),
  HEADING_BANK: varchar("HEADING_BANK"),
  HEADING_JOURNAL: varchar("HEADING_JOURNAL"),
  HEADING_REVALUATION: varchar("HEADING_REVALUATION"),
  HEADING_REFUND: varchar("HEADING_REFUND"),
});

export const INSERT_VAT_SUMMARY_SCHEMA = createInsertSchema(VAT_SUMMARY);

export const VAT_RETURN = sageSchema.table("VAT_RETURN", {
  VAT_BOX: smallint("VAT_BOX"),
  VAT_BOX_NAME: varchar("VAT_BOX_NAME"),
  COUNT_ALL: integer("COUNT_ALL"),
  COUNT_EARLIER: integer("COUNT_EARLIER"),
  COUNT_RECON: integer("COUNT_RECON"),
  COUNT_UNRECON: integer("COUNT_UNRECON"),
  AMOUNT: doublePrecision("AMOUNT"),
});

export const INSERT_VAT_RETURN_SCHEMA = createInsertSchema(VAT_RETURN);

export const VAT_RETURN_RECEIPT = sageSchema.table("VAT_RETURN_RECEIPT", {
  UNIQUE_ID: integer("UNIQUE_ID"),
  RECEIPT_TYPE: smallint("RECEIPT_TYPE"),
  VAT_AMOUNT: doublePrecision("VAT_AMOUNT"),
  PERIOD_START: timestamp("PERIOD_START"),
  PERIOD_END: timestamp("PERIOD_END"),
  CURRENCY_SYMBOL: varchar("CURRENCY_SYMBOL"),
  DUE_DATE: timestamp("DUE_DATE"),
  HMRC_REFERENCE: varchar("HMRC_REFERENCE"),
  RECEIPT_TIMESTAMP: varchar("RECEIPT_TIMESTAMP"),
  PAYMENT_DATE: timestamp("PAYMENT_DATE"),
  DIRECTDEBIT_STATUS: varchar("DIRECTDEBIT_STATUS"),
  NARRATIVE: text("NARRATIVE"),
  EXTRAINFO: text("EXTRAINFO"),
  RECORD_CREATE_DATE: timestamp("RECORD_CREATE_DATE"),
  RECORD_MODIFY_DATE: timestamp("RECORD_MODIFY_DATE"),
  RECORD_DELETED: smallint("RECORD_DELETED"),
});

export const INSERT_VAT_RETURN_RECEIPT_SCHEMA =
  createInsertSchema(VAT_RETURN_RECEIPT);
