CREATE SCHEMA "bit_systems";
--> statement-breakpoint
CREATE SCHEMA "sage";
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "bit_systems"."bin" (
	"pk_Bin_ID" integer PRIMARY KEY NOT NULL,
	"fk_Warehouse_ID" integer,
	"Name" varchar(255),
	"IsUnspecifiedBin" integer,
	"DateTimeCreated" timestamp,
	"LastUpdated" timestamp,
	"Sequence" integer
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "bit_systems"."bin_item" (
	"pk_BinItem_ID" integer PRIMARY KEY NOT NULL,
	"fk_StockItem_ID" integer,
	"fk_Bin_ID" integer,
	"QuantityInStock" double precision,
	"QuantityAllocated" double precision,
	"DateTimeCreated" timestamp,
	"LastUpdated" timestamp,
	"Priority" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "bit_systems"."stock_item" (
	"pk_StockItem_ID" integer PRIMARY KEY NOT NULL,
	"Code" varchar(255),
	"DateTimeCreated" timestamp,
	"DeletedOn" timestamp,
	"Description" varchar(255),
	"CategoryNo" integer,
	"CategoryName" varchar(255),
	"UnitWeight" double precision,
	"Barcode" varchar(255),
	"SupplierCode" varchar(255),
	"SupplierName" varchar(255),
	"PartNo" varchar(255),
	"DepartmentCode" integer,
	"DepartmentName" varchar(255),
	"CustomField1" varchar(255),
	"CustomField2" varchar(255),
	"CustomField3" varchar(255),
	"TraceableItemTypeID" integer,
	"IgnoreStockLevel" integer
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "bit_systems"."traceable_bin_item" (
	"pk_TraceableBinItem_ID" integer PRIMARY KEY NOT NULL,
	"fk_TraceableItem_ID" integer,
	"fk_BinItem_ID" integer,
	"QuantityInStock" double precision,
	"QuantityAllocated" double precision,
	"DateTimeCreated" timestamp
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "bit_systems"."traceable_item" (
	"pk_TraceableItem_ID" integer PRIMARY KEY NOT NULL,
	"fk_StockItem_ID" integer,
	"fk_TraceableType_ID" integer,
	"IdentificationNo" varchar(255),
	"AlternativeRef" varchar(255),
	"Notes" varchar(255),
	"SellByDate" timestamp,
	"UseByDate" timestamp,
	"DateTimeCreated" timestamp,
	"LastUpdated" timestamp
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "bit_systems"."warehouse" (
	"pk_Warehouse_ID" integer PRIMARY KEY NOT NULL,
	"Name" varchar(255),
	"Description" varchar(255)
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."ACCOUNT_STATUS" (
	"NUMBER" smallint,
	"STATUS" varchar,
	"ON_HOLD" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."ACCRUAL" (
	"NAME" varchar,
	"NOMINAL_CODE_1" varchar,
	"NOMINAL_CODE_2" varchar,
	"AMOUNT" double precision,
	"MONTHS_TO_POST" smallint,
	"MONTHS_POSTED" smallint,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."AUDIT_HEADER" (
	"TRAN_NUMBER" integer,
	"ITEM_COUNT" integer,
	"TYPE" varchar,
	"DATE" timestamp,
	"ACCOUNT_REF" varchar,
	"SALES_PURCHASE_REF" varchar,
	"BANK_CODE" varchar,
	"BANK_NAME" varchar,
	"INV_REF" varchar,
	"INV_REF_NUMERIC" integer,
	"USER_NAME" varchar,
	"DETAILS" varchar,
	"DUE_DATE" timestamp,
	"LAST_CHARGE_DATE" timestamp,
	"FINANCE_CHARGE" smallint,
	"INTEREST_RATE" double precision,
	"ELECTRONIC_TRANS" smallint,
	"DISPUTED" smallint,
	"PAID_FLAG" varchar,
	"PAID_STATUS" varchar,
	"DELETED_FLAG" smallint,
	"DATE_FLAG" smallint,
	"DATE_BF" timestamp,
	"DATE_FROM" timestamp,
	"DATE_TO" timestamp,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"GROSS_AMOUNT" double precision,
	"BANK_AMOUNT" double precision,
	"AMOUNT_PAID" double precision,
	"PAYMENT" double precision,
	"OUTSTANDING" double precision,
	"FOREIGN_OUTSTANDING" double precision,
	"FOREIGN_NET_AMOUNT" double precision,
	"FOREIGN_TAX_AMOUNT" double precision,
	"FOREIGN_GROSS_AMOUNT" double precision,
	"FOREIGN_AMOUNT_PAID" double precision,
	"FOREIGN_BANK_AMOUNT" double precision,
	"CURRENCY" smallint,
	"CURRENCY_TYPE" smallint,
	"EURO_GROSS" double precision,
	"EURO_RATE" double precision,
	"FOREIGN_RATE" double precision,
	"IS_DISCOUNT" smallint,
	"AGED_BALANCE" double precision,
	"AGED_FUTURE" double precision,
	"AGED_CURRENT" double precision,
	"AGED_30" double precision,
	"AGED_60" double precision,
	"AGED_90" double precision,
	"AGED_OLDER" double precision,
	"AGED_CUM_CURRENT" double precision,
	"AGED_CUM_30" double precision,
	"AGED_CUM_60" double precision,
	"AGED_CUM_90" double precision,
	"FOREIGN_AGED_BALANCE" double precision,
	"FOREIGN_AGED_FUTURE" double precision,
	"FOREIGN_AGED_CURRENT" double precision,
	"FOREIGN_AGED_30" double precision,
	"FOREIGN_AGED_60" double precision,
	"FOREIGN_AGED_90" double precision,
	"FOREIGN_AGED_OLDER" double precision,
	"FOREIGN_AGED_CUM_CURRENT" double precision,
	"FOREIGN_AGED_CUM_30" double precision,
	"FOREIGN_AGED_CUM_60" double precision,
	"FOREIGN_AGED_CUM_90" double precision,
	"BANK_FLAG" varchar,
	"HEADER_NUMBER" integer,
	"DATE_ENTERED" timestamp,
	"DATE_BANK_RECONCILED" timestamp,
	"CIS_RECONCILED" smallint,
	"SPS_REF" varchar,
	"DEPOSIT_DATE" timestamp,
	"DEPOSIT_FLAG" varchar,
	"RECURRING_ENTRY_ID" integer,
	"ISP_REFERENCE" integer,
	"OVERRIDDEN_CLOSED_LEDGER_DATE" timestamp,
	"COUNTRY_CODE" varchar,
	"TAX_ID" varchar,
	"REVAL_TRANSACTION_FLAG" smallint,
	"POSTED_BY_DIRECT_DEBIT_SETTLEMENT" smallint,
	"DATE_AMENDED" timestamp,
	"USER_NAME_AMENDED" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."AUDIT_HISTORY_HEADER" (
	"TRAN_NUMBER" integer,
	"ITEM_COUNT" integer,
	"TYPE" varchar,
	"DATE" timestamp,
	"ACCOUNT_REF" varchar,
	"SALES_PURCHASE_REF" varchar,
	"BANK_CODE" varchar,
	"INV_REF" varchar,
	"USER_NAME" varchar,
	"DETAILS" varchar,
	"DUE_DATE" timestamp,
	"LAST_CHARGE_DATE" timestamp,
	"FINANCE_CHARGE" smallint,
	"INTEREST_RATE" double precision,
	"ELECTRONIC_TRANS" smallint,
	"DISPUTED" smallint,
	"PAID_FLAG" varchar,
	"PAID_STATUS" varchar,
	"DELETED_FLAG" smallint,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"GROSS_AMOUNT" double precision,
	"BANK_AMOUNT" double precision,
	"AMOUNT_PAID" double precision,
	"FOREIGN_NET_AMOUNT" double precision,
	"FOREIGN_TAX_AMOUNT" double precision,
	"FOREIGN_GROSS_AMOUNT" double precision,
	"FOREIGN_AMOUNT_PAID" double precision,
	"FOREIGN_BANK_AMOUNT" double precision,
	"CURRENCY" smallint,
	"CURRENCY_TYPE" smallint,
	"EURO_GROSS" double precision,
	"EURO_RATE" double precision,
	"FOREIGN_RATE" double precision,
	"BANK_FLAG" varchar,
	"HEADER_NUMBER" integer,
	"DATE_ENTERED" timestamp,
	"DATE_BANK_RECONCILED" timestamp,
	"CATE_ID" integer,
	"CIS_RECONCILED" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."AUDIT_HISTORY_JOURNAL" (
	"TRAN_NUMBER" integer,
	"TYPE" varchar,
	"DATE" timestamp,
	"NOMINAL_CODE" varchar,
	"USER_NAME" varchar,
	"DETAILS" varchar,
	"EXTRA_REF" varchar,
	"DISPUTED" smallint,
	"VAT_FLAG" varchar,
	"PAID_FLAG" varchar,
	"PAID_STATUS" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"TAX_CODE" varchar,
	"DELETED_FLAG" smallint,
	"AMOUNT" double precision,
	"FOREIGN_AMOUNT" double precision,
	"SPLIT_NUMBER" integer,
	"HEADER_NUMBER" integer,
	"VAT_FLAG_CODE" smallint,
	"DATE_ENTERED" timestamp,
	"VAT_RECONCILED_DATE" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."AUDIT_HISTORY_SPLIT" (
	"TRAN_NUMBER" integer,
	"TYPE" varchar,
	"DATE" timestamp,
	"NOMINAL_CODE" varchar,
	"USER_NAME" varchar,
	"DETAILS" varchar,
	"EXTRA_REF" varchar,
	"DISPUTED" smallint,
	"VAT_FLAG" varchar,
	"PAID_FLAG" varchar,
	"PAID_STATUS" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"TAX_CODE" varchar,
	"DELETED_FLAG" smallint,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"GROSS_AMOUNT" double precision,
	"AMOUNT_PAID" double precision,
	"FOREIGN_NET_AMOUNT" double precision,
	"FOREIGN_TAX_AMOUNT" double precision,
	"FOREIGN_GROSS_AMOUNT" double precision,
	"FOREIGN_AMOUNT_PAID" double precision,
	"SPLIT_NUMBER" integer,
	"HEADER_NUMBER" integer,
	"VAT_FLAG_CODE" smallint,
	"DATE_ENTERED" timestamp,
	"VAT_RECONCILED_DATE" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."AUDIT_HISTORY_USAGE" (
	"TYPE" varchar,
	"USAGE_NUMBER" integer,
	"SPLIT_NUMBER" integer,
	"SPLIT_CROSSREF" integer,
	"REFERENCE" varchar,
	"DETAILS" varchar,
	"USER_NAME" varchar,
	"DATE" timestamp,
	"AMOUNT" double precision,
	"FOREIGN_AMOUNT" double precision,
	"DELETED_FLAG" smallint,
	"CIS_VAT" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."AUDIT_JOURNAL" (
	"TRAN_NUMBER" integer,
	"TYPE" varchar,
	"DATE" timestamp,
	"ACCOUNT_REF" varchar,
	"NOMINAL_CODE" varchar,
	"BANK_CODE" varchar,
	"INV_REF" varchar,
	"USER_NAME" varchar,
	"DETAILS" varchar,
	"EXTRA_REF" varchar,
	"DISPUTED" smallint,
	"STMT_TEXT" varchar,
	"BANK_FLAG" varchar,
	"VAT_FLAG" varchar,
	"PAID_FLAG" varchar,
	"PAID_STATUS" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"TAX_CODE" varchar,
	"DELETED_FLAG" smallint,
	"AMOUNT" double precision,
	"FOREIGN_AMOUNT" double precision,
	"RTD_FLAG" varchar,
	"SPLIT_NUMBER" integer,
	"HEADER_NUMBER" integer,
	"VAT_FLAG_CODE" smallint,
	"DATE_FLAG" smallint,
	"DATE_ENTERED" timestamp,
	"VAT_RECONCILED_DATE" timestamp,
	"DISPUTE_CODE" smallint,
	"FUND_ID" integer,
	"VAT_LEDGER_RETURN_ID" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."AUDIT_SPLIT" (
	"TRAN_NUMBER" integer,
	"TYPE" varchar,
	"DATE" timestamp,
	"ACCOUNT_REF" varchar,
	"NOMINAL_CODE" varchar,
	"BANK_CODE" varchar,
	"INV_REF" varchar,
	"USER_NAME" varchar,
	"DETAILS" varchar,
	"EXTRA_REF" varchar,
	"DISPUTED" smallint,
	"STMT_TEXT" varchar,
	"BANK_FLAG" varchar,
	"VAT_FLAG" varchar,
	"PAID_FLAG" varchar,
	"PAID_STATUS" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"TAX_CODE" varchar,
	"DELETED_FLAG" smallint,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"GROSS_AMOUNT" double precision,
	"AMOUNT_PAID" double precision,
	"PAYMENT" double precision,
	"OUTSTANDING" double precision,
	"FOREIGN_OUTSTANDING" double precision,
	"RTD_FLAG" varchar,
	"FOREIGN_NET_AMOUNT" double precision,
	"FOREIGN_TAX_AMOUNT" double precision,
	"FOREIGN_GROSS_AMOUNT" double precision,
	"FOREIGN_AMOUNT_PAID" double precision,
	"AGED_BALANCE" double precision,
	"AGED_FUTURE" double precision,
	"AGED_CURRENT" double precision,
	"AGED_30" double precision,
	"AGED_60" double precision,
	"AGED_90" double precision,
	"AGED_OLDER" double precision,
	"AGED_CUM_CURRENT" double precision,
	"AGED_CUM_30" double precision,
	"AGED_CUM_60" double precision,
	"AGED_CUM_90" double precision,
	"FOREIGN_AGED_BALANCE" double precision,
	"FOREIGN_AGED_FUTURE" double precision,
	"FOREIGN_AGED_CURRENT" double precision,
	"FOREIGN_AGED_30" double precision,
	"FOREIGN_AGED_60" double precision,
	"FOREIGN_AGED_90" double precision,
	"FOREIGN_AGED_OLDER" double precision,
	"FOREIGN_AGED_CUM_CURRENT" double precision,
	"FOREIGN_AGED_CUM_30" double precision,
	"FOREIGN_AGED_CUM_60" double precision,
	"FOREIGN_AGED_CUM_90" double precision,
	"SPLIT_NUMBER" integer,
	"HEADER_NUMBER" integer,
	"VAT_FLAG_CODE" smallint,
	"DATE_FLAG" smallint,
	"DATE_ENTERED" timestamp,
	"VAT_RECONCILED_DATE" timestamp,
	"DISPUTE_CODE" smallint,
	"FUND_ID" integer,
	"VAT_LEDGER_RETURN_ID" integer,
	"GIFT_AID" smallint,
	"SMALL_DONATION" smallint,
	"GASDS_CLAIM_SUBMITTED" smallint,
	"HAS_EXTERNAL_LINK" smallint,
	"PROJECT_ID" smallint,
	"COST_CODE_ID" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."AUDIT_USAGE" (
	"TYPE" varchar,
	"USAGE_NUMBER" integer,
	"SPLIT_NUMBER" integer,
	"SPLIT_CROSSREF" integer,
	"REFERENCE" varchar,
	"DETAILS" varchar,
	"USER_NAME" varchar,
	"DATE" timestamp,
	"AMOUNT" double precision,
	"FOREIGN_AMOUNT" double precision,
	"DELETED_FLAG" smallint,
	"CIS_VAT" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."AUDIT_VAT" (
	"TRAN_NUMBER" integer,
	"TYPE" varchar,
	"DATE" timestamp,
	"ACCOUNT_REF" varchar,
	"NOMINAL_CODE" varchar,
	"BANK_CODE" varchar,
	"INV_REF" varchar,
	"USER_NAME" varchar,
	"DETAILS" varchar,
	"EXTRA_REF" varchar,
	"DISPUTED" smallint,
	"STMT_TEXT" varchar,
	"BANK_FLAG" varchar,
	"VAT_FLAG" varchar,
	"PAID_FLAG" varchar,
	"PAID_STATUS" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"TAX_CODE" varchar,
	"DELETED_FLAG" smallint,
	"RTD_FLAG" varchar,
	"AMOUNT" double precision,
	"AMOUNT_INVOICE" double precision,
	"AMOUNT_CREDIT" double precision,
	"AMOUNT_BANK" double precision,
	"AMOUNT_JOURNAL" double precision,
	"VAT_BOX" smallint,
	"VAT_TRAN" smallint,
	"VAT_TRAN_NAME" varchar,
	"VAT_INCLUDE" smallint,
	"SPLIT_NUMBER" integer,
	"HEADER_NUMBER" integer,
	"VAT_FLAG_CODE" smallint,
	"DATE_FLAG" smallint,
	"DATE_ENTERED" timestamp,
	"VAT_RECONCILED_DATE" timestamp,
	"DISPUTE_CODE" smallint,
	"FUND_ID" integer,
	"VAT_LEDGER_RETURN_ID" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."BANK" (
	"ACCOUNT_REF" varchar,
	"ACCOUNT_NUMBER" varchar,
	"ACCOUNT_NAME" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"C_ADDRESS_1" varchar,
	"C_ADDRESS_2" varchar,
	"C_ADDRESS_3" varchar,
	"C_ADDRESS_4" varchar,
	"C_ADDRESS_5" varchar,
	"TELEPHONE" varchar,
	"CONTACT_NAME" varchar,
	"FAX" varchar,
	"E_MAIL" varchar,
	"WEB_ADDRESS" varchar,
	"CURRENCY" smallint,
	"SORT_CODE" varchar,
	"OVERDRAFT_LIMIT" double precision,
	"NUMBER" smallint,
	"FOREIGN_BALANCE" double precision,
	"TYPE" varchar,
	"IBAN" varchar,
	"BICSWIFT" varchar,
	"LAST_REC_DATE" timestamp,
	"LAST_REC_BALANCE" double precision,
	"ROLL_NUMBER" varchar,
	"ADDITIONAL_REF1" varchar,
	"ADDITIONAL_REF2" varchar,
	"ADDITIONAL_REF3" varchar,
	"INACTIVE_FLAG" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."BANK_STATEMENT" (
	"ACCOUNT_REF" varchar,
	"STATEMENT_REF" varchar,
	"CLOSING_BALANCE" double precision,
	"OPENING_BALANCE" double precision,
	"AMOUNT_IN" double precision,
	"AMOUNT_OUT" double precision,
	"INTEREST" double precision,
	"INTEREST_ID" integer,
	"INTEREST_NOM_CODE" varchar,
	"CHARGES" double precision,
	"CHARGES_ID" integer,
	"CHARGES_NOM_CODE" varchar,
	"STATEMENT_DATE" timestamp,
	"INTEREST_DATE" timestamp,
	"CHARGES_DATE" timestamp,
	"RECONCILIATION_DATE" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."BANK_STATEMENT_LINE" (
	"ACCOUNT_REF" varchar,
	"ITEM_NUMBER" integer,
	"TRAN_NUMBER" integer,
	"AMOUNT" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CALENDAR_EVENT" (
	"UNIQUE_ID" integer,
	"OCCURRENCE_TYPE" smallint,
	"RECURRENCE_PATTERN_ID" integer,
	"IS_DELETED_OCCURRENCE" smallint,
	"ORIGINAL_START_TIME" timestamp,
	"ORIGINAL_END_TIME" timestamp,
	"IS_ALL_DAY_EVENT" smallint,
	"HAS_REMINDER" smallint,
	"REMINDER_MINUTES_BEFORE_START" integer,
	"NEXTREMINDERTIME" timestamp,
	"CREATION_TIME" timestamp,
	"LAST_MODIFICATION_TIME" timestamp,
	"START_TIME" timestamp,
	"END_TIME" timestamp,
	"BUSY_STATUS" smallint,
	"IMPORTANCE" smallint,
	"LABEL_ID" integer,
	"SUBJECT" varchar,
	"LOCATION" varchar,
	"USERNAME" varchar,
	"OFFSET" integer,
	"ACCOUNT" varchar,
	"ACCOUNTTYPE" integer,
	"CONTACT" varchar,
	"IS_COMPLETED" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CALENDAR_EVENT_LABEL" (
	"UNIQUE_ID" integer,
	"NAME" varchar,
	"COLOR" integer,
	"READ_ONLY" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CALENDAR_EVENT_LOCATION" (
	"LOCATION" varchar,
	"POSITION_IN_LIST" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CALENDAR_EVENT_RECURRENCE_PATTERN" (
	"UNIQUE_ID" integer,
	"START_TIME" timestamp,
	"DURATION_IN_MINUTES" integer,
	"RECURRENCE_PERIOD" smallint,
	"DAILY_WEEKDAYS_ONLY" smallint,
	"DAILY_INTERVAL_IN_DAYS" integer,
	"WEEKLY_INTERVAL_IN_WEEKS" integer,
	"WEEKLY_DAYS_OF_WEEK" integer,
	"MONTHLY_INTERVAL_IN_MONTHS" integer,
	"MONTHLY_DAY_OF_MONTH" integer,
	"MONTHLY_NTH_INTERVAL_IN_MONTHS" integer,
	"MONTHLY_NTH_DAY_OCCURRENCE" smallint,
	"MONTHLY_NTH_DAY_OF_WEEK" smallint,
	"YEARLY_MONTH_OF_YEAR" integer,
	"YEARLY_DAY_OF_MONTH" integer,
	"YEARLY_NTH_DAY_OCCURRENCE" smallint,
	"YEARLY_NTH_DAY_OF_WEEK" smallint,
	"YEARLY_NTH_MONTH_OF_YEAR" integer,
	"START_DATE" timestamp,
	"END_TYPE" smallint,
	"END_DATE" timestamp,
	"TOTAL_OCCURRENCES" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CATEGORY" (
	"CHART" integer,
	"CATEGORY" integer,
	"FLAG_ASSET_LIABILITY" smallint,
	"NAME" varchar,
	"LOW" varchar,
	"HIGH" varchar,
	"SORT_ORDER" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CAT_TITLE" (
	"CHART" integer,
	"CATEGORY" integer,
	"TITLE" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CHART_LIST" (
	"CHART" integer,
	"NAME" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CIS_RETURN" (
	"RETURN_ID" integer,
	"CONTRACTOR_UTR" varchar,
	"ACCOUNTS_OFFICE_REFERENCE_NUMBER" varchar,
	"MONTH_ENDING" timestamp,
	"EMPLOYMENT_STATUS_DECLARATION" smallint,
	"SUBCONTRACTOR_VERIFICATION_DECLARATION" smallint,
	"INACTIVITY_INDICATOR" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CIS_RETURN_TRANSACTION" (
	"TRANSACTION_ID" integer,
	"RETURN_ID" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CIS_SETTINGS" (
	"IS_CONTRACTOR" smallint,
	"IS_SUBCONTRACTOR" smallint,
	"UNIQUE_TAX_REFERENCE" varchar,
	"ACCOUNTS_OFFICE_REFERENCE_NUMBER" varchar,
	"IS_INACTIVE" smallint,
	"NEXT_PERIOD_END" timestamp,
	"STANDARD_RATE" double precision,
	"HIGHER_RATE" double precision,
	"CONTROL_NOMINAL" varchar,
	"LABOUR_NOMINAL" varchar,
	"MATERIALS_NOMINAL" varchar,
	"OTHER_TAXABLE_NOMINAL" varchar,
	"OTHER_NONTAXABLE_NOMINAL" varchar,
	"TAX_LIABILITY_NOMINAL" varchar,
	"CITB_LEVY_NOMINAL" varchar,
	"IS_ENABLED" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CIS_SUBCONTRACTOR" (
	"SUPPLIER_REFN" varchar,
	"COMPANY_TYPE" varchar,
	"COMPANY_TYPE_CODE" smallint,
	"UNIQUE_TAX_REFERENCE" varchar,
	"TRADING_NAME" varchar,
	"LEGAL_NAME" varchar,
	"USE_LEGAL_NAME" smallint,
	"FIRST_NAME" varchar,
	"MIDDLE_NAME" varchar,
	"LAST_NAME" varchar,
	"PARTNERSHIP_UNIQUE_TAX_REFERENCE" varchar,
	"PARTNERSHIP_NAME" varchar,
	"COMPANY_REGISTRATION_NAME" varchar,
	"NATIONAL_INSURANCE_NUMBER" varchar,
	"VERIFICATION_REFERENCE_NUMBER" varchar,
	"VERIFICATION_STATUS" varchar,
	"VERIFICATION_STATUS_CODE" smallint,
	"LAST_VERIFIED" timestamp,
	"PAYMENT_FREQUENCY" varchar,
	"PAYMENT_FREQUENCY_CODE" smallint,
	"EMAIL_STATEMENTS" smallint,
	"PAY_THIRD_PARTY" smallint,
	"THIRD_PARTY" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CIS_SUBCONTRACTOR_LEGACY" (
	"SUPPLER_REFN" varchar,
	"CIS_TYPE" varchar,
	"CIS_TYPE_CODE" smallint,
	"CIS_NUMBER" varchar,
	"CARD_TYPE" varchar,
	"CARD_TYPE_CODE" smallint,
	"VALID_FROM" timestamp,
	"VALID_TO" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CIS_SUBCONTRACTOR_RETURN" (
	"RETURN_ID" integer,
	"SUPPLIER_REFN" varchar,
	"UNIQUE_TAX_REFERENCE" varchar,
	"TRADING_NAME" varchar,
	"FIRST_NAME" varchar,
	"MIDDLE_NAME" varchar,
	"LAST_NAME" varchar,
	"COMPANY_REGISTRATION_NUMBER" varchar,
	"NATIONAL_INSURANCE_NUMBER" varchar,
	"VERIFICATION_REFERENCE_NUMBER" varchar,
	"TOTAL_PAYMENTS_MADE" double precision,
	"COST_OF_MATERIALS" double precision,
	"AMOUNT_DEDUCTED" double precision,
	"UNMATCHED_RATE" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CIS_SUBCONTRACTOR_TAX_HISTORY" (
	"SUPPLIER_REFN" varchar,
	"TAX_TREATMENT" varchar,
	"TAX_TREATMENT_CODE" smallint,
	"START_DATE" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CLEARED_TRAN_RANGE" (
	"CATE_ID" integer,
	"START_TRAN_NUMBER" integer,
	"END_TRAN_NUMBER" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CLEAR_AUDIT_TRAIL_EVENT" (
	"CATE_ID" integer,
	"DATE" timestamp,
	"USER_NAME" varchar,
	"LOCATION_TYPE" varchar,
	"LOCATION" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."COMMUNICATION_ADDRESS" (
	"ACCOUNT_TYPE" smallint,
	"ACCOUNT_REF" varchar,
	"LETTER_TYPE_ID" integer,
	"ADDRESS_REF" integer,
	"ADDRESS_ID" varchar,
	"PREFERRED_EMAIL" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."COMPANY" (
	"COMPANYID" varchar,
	"PROTX_VENDOR" varchar,
	"CASH_REGISTER_BANK" varchar,
	"CASH_REGISTER_SALES_NOM" varchar,
	"CASH_REGISTER_TAXCODE" smallint,
	"CASH_REGISTER_DISCREPENCIES_NOM" varchar,
	"CASH_REGISTER_TAX_INCLUSIVE_FLAG" smallint,
	"QUOTES_TO_ORDERS" smallint,
	"PROTX_USERID" varchar,
	"PROTX_PASSWORD" varchar,
	"PROTX_LAST_SYNC_DATE" timestamp,
	"PROTX_ENABLED" smallint,
	"FLAT_RATE_VAT_PERCENT" double precision,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"C_ADDRESS_1" varchar,
	"C_ADDRESS_2" varchar,
	"C_ADDRESS_3" varchar,
	"C_ADDRESS_4" varchar,
	"C_ADDRESS_5" varchar,
	"L_NAME" varchar,
	"L_ADDRESS_1" varchar,
	"L_ADDRESS_2" varchar,
	"L_ADDRESS_3" varchar,
	"L_ADDRESS_4" varchar,
	"L_ADDRESS_5" varchar,
	"TELEPHONE" varchar,
	"FAX" varchar,
	"E_MAIL" varchar,
	"WEB_ADDRESS" varchar,
	"CREDIT_REF" varchar,
	"DEL_NAME" varchar,
	"DEL_ADDRESS_1" varchar,
	"DEL_ADDRESS_2" varchar,
	"DEL_ADDRESS_3" varchar,
	"DEL_ADDRESS_4" varchar,
	"DEL_ADDRESS_5" varchar,
	"DEL_TELEPHONE" varchar,
	"DEL_FAX" varchar,
	"DEL_E_MAIL" varchar,
	"DEL_WEB_ADDRESS" varchar,
	"VAT_REG_NUMBER" varchar,
	"START_MONTH" smallint,
	"FINANCIAL_YEAR" smallint,
	"DEFAULT_CHART" smallint,
	"DEFAULT_CREDIT_BUREAU" smallint,
	"END_OF_REPORT" varchar,
	"ADDRESS_LABEL_1" varchar,
	"ADDRESS_LABEL_2" varchar,
	"ADDRESS_LABEL_3" varchar,
	"ADDRESS_LABEL_4" varchar,
	"ADDRESS_LABEL_5" varchar,
	"SALES_LABEL_1" varchar,
	"SALES_LABEL_2" varchar,
	"SALES_LABEL_3" varchar,
	"PURCHASE_LABEL_1" varchar,
	"PURCHASE_LABEL_2" varchar,
	"PURCHASE_LABEL_3" varchar,
	"STOCK_LABEL_1" varchar,
	"STOCK_LABEL_2" varchar,
	"STOCK_LABEL_3" varchar,
	"STOCKCATEGORY_LABEL" varchar,
	"DEPARTMENTS_LABEL" varchar,
	"FIXEDASSETS_LABEL" varchar,
	"STOCK_DISCOUNT_A" varchar,
	"STOCK_DISCOUNT_B" varchar,
	"STOCK_DISCOUNT_C" varchar,
	"STOCK_DISCOUNT_D" varchar,
	"STOCK_DISCOUNT_E" varchar,
	"NOM_DEBTORS" varchar,
	"NOM_CREDITORS" varchar,
	"NOM_TAX_SALES" varchar,
	"NOM_TAX_PURCHASE" varchar,
	"NOM_DISCOUNT_SALES" varchar,
	"NOM_DISCOUNT_PURCHASE" varchar,
	"NOM_DEFAULT_BANK" varchar,
	"NOM_DEFAULT_SALES" varchar,
	"NOM_RETAINED_EARNINGS" varchar,
	"NOM_CREDIT_CHARGES" varchar,
	"NOM_BAD_DEBTS" varchar,
	"NOM_ACCRUALS" varchar,
	"NOM_PREPAYMENTS" varchar,
	"NOM_MISPOSTINGS" varchar,
	"NOM_SUSPENSE" varchar,
	"PAYMENT_DUE_SALES" smallint,
	"PAYMENT_DUE_PURCHASE" smallint,
	"PAYMENT_DUE_FROM_SALES" smallint,
	"PAYMENT_DUE_FROM_SALES_TEXT" varchar,
	"PAYMENT_DUE_FROM_PURCHASE" smallint,
	"PAYMENT_DUE_FROM_PURCHASE_TEXT" varchar,
	"NON_VAT_TAX_CODE" smallint,
	"VAT_CASH" smallint,
	"SALES_AGE_BY_MONTH" smallint,
	"SALES_AGED_PERIOD_1" smallint,
	"SALES_AGED_PERIOD_2" smallint,
	"SALES_AGED_PERIOD_3" smallint,
	"SALES_AGED_PERIOD_4" smallint,
	"PURCHASE_AGE_BY_MONTH" smallint,
	"PURCHASE_AGED_PERIOD_1" smallint,
	"PURCHASE_AGED_PERIOD_2" smallint,
	"PURCHASE_AGED_PERIOD_3" smallint,
	"PURCHASE_AGED_PERIOD_4" smallint,
	"SALES_AMOUNT_SOLD_1" double precision,
	"SALES_AMOUNT_SOLD_2" double precision,
	"SALES_AMOUNT_SOLD_3" double precision,
	"SALES_AMOUNT_SOLD_4" double precision,
	"SALES_AMOUNT_SOLD_5" double precision,
	"SALES_AMOUNT_SOLD_6" double precision,
	"SALES_AMOUNT_SOLD_7" double precision,
	"SALES_AMOUNT_SOLD_8" double precision,
	"SALES_AMOUNT_SOLD_9" double precision,
	"SALES_AMOUNT_SOLD_10" double precision,
	"SALES_ADD_DISC_1" double precision,
	"SALES_ADD_DISC_2" double precision,
	"SALES_ADD_DISC_3" double precision,
	"SALES_ADD_DISC_4" double precision,
	"SALES_ADD_DISC_5" double precision,
	"SALES_ADD_DISC_6" double precision,
	"SALES_ADD_DISC_7" double precision,
	"SALES_ADD_DISC_8" double precision,
	"SALES_ADD_DISC_9" double precision,
	"SALES_ADD_DISC_10" double precision,
	"ALLOW_NEGATIVE_STOCK" smallint,
	"INVOICE_DISC_UNIT_PRICE" smallint,
	"SOP_CARRIAGE_NET" double precision,
	"SOP_CARRIAGE_NOM_CODE" varchar,
	"SOP_CARRIAGE_TAX_CODE" integer,
	"SOP_CARRIAGE_DEPT" integer,
	"SOP_GLOBAL_DETAILS" varchar,
	"SOP_GLOBAL_NOM_CODE" varchar,
	"SOP_GLOBAL_TAX_CODE" integer,
	"SOP_GLOBAL_DEPT" integer,
	"POP_CARRIAGE_NET" double precision,
	"POP_CARRIAGE_NOM_CODE" varchar,
	"POP_CARRIAGE_TAX_CODE" integer,
	"POP_CARRIAGE_DEPT" integer,
	"POP_GLOBAL_DETAILS" varchar,
	"POP_GLOBAL_NOM_CODE" varchar,
	"POP_GLOBAL_TAX_CODE" integer,
	"POP_GLOBAL_DEPT" integer,
	"NO_DISCOUNT_PRICE_LIST" smallint,
	"QTY_DECIMAL_PLACE" smallint,
	"UNIT_DECIMAL_PLACE" smallint,
	"BUDGETING_METHOD" smallint,
	"DEFAULT_BUDGETING_CHART" smallint,
	"CHARITYTAXREF" varchar,
	"DUNS_NUMBER" varchar,
	"CC_LETTER_1" varchar,
	"CC_LETTER_2" varchar,
	"CC_LETTER_3" varchar,
	"CLOSED_LEDGER_DATE_ENABLED" smallint,
	"CLOSED_LEDGER_CHECK_DATE" timestamp,
	"COUNTRY_CODE" varchar,
	"HMRC_PAYEE_ENABLED" smallint,
	"HMRC_PAYEE_STATUS" smallint,
	"HMRC_PAYEE_STATUS_DESCRIPTION" varchar,
	"DIRECT_DEBITS_ENABLED" smallint,
	"DIRECT_DEBITS_LAST_SYNCED_DATE" timestamp,
	"HOLDING_ACCOUNT" varchar,
	"NOMINATED_BANK" varchar,
	"FEES_NOMINAL" varchar,
	"CHARGE_DAYS" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."COMPANY_DEL_ADDR" (
	"REFERENCE" varchar,
	"ADDRESS_REF" integer,
	"DESCRIPTION" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"TELEPHONE" varchar,
	"FAX" varchar,
	"E_MAIL" varchar,
	"CONTACT_NAME" varchar,
	"TAX_CODE" smallint,
	"COUNTRY_CODE" varchar,
	"VAT_REG_NUMBER" varchar,
	"TELEPHONE_2" varchar,
	"ADDRESS_TYPE_NAME" varchar,
	"ADDRESS_TYPE" smallint,
	"CONTACT_ROLE" varchar,
	"NOTES" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CONTACT_HISTORY" (
	"UNIQUE_ID" integer,
	"SAL_PUR" varchar,
	"REFN" varchar,
	"MAJOR_TYPE" integer,
	"CONTACT_TYPE" integer,
	"CONTACT_DATE" timestamp,
	"CONTACT" varchar,
	"TELEPHONE" varchar,
	"STYLE" integer,
	"LOCATION" integer,
	"USERNAME" varchar,
	"OUTCOME" integer,
	"PROMISED_PAYMENT" double precision,
	"PROMISED_PAYMENT_DATE" timestamp,
	"FOLLOW_UP_DATE" timestamp,
	"OFFSET" integer,
	"BALANCE" double precision,
	"START" timestamp,
	"END" timestamp,
	"DURATION" integer,
	"FOLLOW_UP_EVENT_ID" integer,
	"SUBJECT" varchar,
	"ADDRESS1" varchar,
	"ADDRESS2" varchar,
	"ADDRESS3" varchar,
	"ADDRESS4" varchar,
	"ADDRESS5" varchar,
	"FOLLOW_UP_TIME" timestamp,
	"NOTES1" varchar,
	"NOTES2" varchar,
	"NOTES3" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CONTACT_HISTORY_CONTACT_OUTCOME" (
	"UNIQUE_ID" integer,
	"OUTCOME_TYPE" smallint,
	"DESCRIPTION" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CONTACT_HISTORY_CONTACT_TYPE" (
	"UNIQUE_ID" integer,
	"CONTACT_TYPE" smallint,
	"DESCRIPTION" varchar,
	"CONTACT_MAJOR_TYPE" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CONTACT_HISTORY_MAJOR_TYPE" (
	"UNIQUE_ID" integer,
	"CONTACT_MAJOR_TYPE" smallint,
	"DESCRIPTION" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."COUNTRY_CODE" (
	"CODE" varchar,
	"NAME" varchar,
	"EU_MEMBER" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CREDIT_BUREAU" (
	"NUMBER" smallint,
	"NAME" varchar,
	"WEB_ADDRESS" varchar,
	"CHECK_ADDRESS" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."CURRENCY" (
	"NUMBER" smallint,
	"CODE" varchar,
	"SYMBOL" varchar,
	"NAME" varchar,
	"EMU_MEMBER" smallint,
	"BASE_CURRENCY" smallint,
	"RATE" double precision,
	"MAJOR_CURRENCY_UNIT" varchar,
	"MINOR_CURRENCY_UNIT" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."DELETED_RECORDS" (
	"TABLE_ID" integer,
	"FOREIGN_REF" text,
	"DELETION_DATE_TIME" timestamp,
	"FOREIGN_REF_TYPE" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."DEPARTMENT" (
	"NUMBER" smallint PRIMARY KEY NOT NULL,
	"NAME" varchar,
	"REFERENCE" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."DIRECT_DEBIT_PAYMENT_REQUESTS" (
	"TRAN_NUMBER" integer,
	"PAYMENT_REQUEST_ID" varchar,
	"DIRECT_DEBIT_STATUS" smallint,
	"DIRECT_DEBIT_STATUS_DESCRIPTION" varchar,
	"LAST_REFRESHED_DATE" timestamp,
	"FAILURE_REASON" varchar,
	"DIRECT_DEBIT_CHARGE_DATE" timestamp,
	"DIRECT_DEBIT_REQUESTED_AMOUNT" double precision,
	"DIRECT_DEBIT_INSTALMENT_NUMBER" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."DISPUTE_REASON" (
	"CODE" smallint,
	"DETAILS" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."ECSALES_FILL" (
	"COUNTRY_CODE" varchar,
	"VAT_NUMBER" varchar,
	"NET" double precision,
	"PENCE" varchar,
	"INDICATOR" varchar,
	"SUBMISSION" varchar,
	"ACCOUNT_REF" varchar,
	"COLLECTION_KEY" varchar,
	"SUBMISSION_ATTEMPTS" smallint,
	"SUBMISSION_ACKNOWLEDGED" smallint,
	"SUBMISSION_ERRORS" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."ECSALES_HEADER" (
	"DATE_FROM" timestamp,
	"DATE_TO" timestamp,
	"VAT_NUMBER" varchar,
	"TAX_BRANCH_ID" varchar,
	"QUARTER" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"ATTEMPTS" integer,
	"ACKNOWLEDGED" smallint,
	"LINES" integer,
	"SALES" double precision,
	"REFERENCE" varchar,
	"TIMESTAMP" varchar,
	"DUE_DATE" timestamp
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."ECSALES_SPLIT" (
	"TYPE" varchar,
	"ID" integer,
	"NOMINAL_CODE" varchar,
	"DATE" timestamp,
	"REF" varchar,
	"DETAILS" varchar,
	"NET" double precision,
	"TRIANGULATED" smallint,
	"COUNTRY_CODE" varchar,
	"VAT_NUMBER" varchar,
	"ACCOUNT_REF" varchar,
	"INDICATOR" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."EC_VAT_DESCRIPTION" (
	"UNIQUE_ID" integer,
	"DESCRIPTION" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."ESUBMISSION_SETTINGS" (
	"USER_ID" varchar,
	"EMPLOYER_REFERENCE" varchar,
	"IS_AGENT" smallint,
	"SUB_FAMILY" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."FINANCIAL_BUDGET" (
	"ACCOUNT_REF" varchar,
	"ANALYSIS_ID" integer,
	"YEAR" smallint,
	"BUDGET" double precision,
	"PERIOD" smallint,
	"ACTUAL" double precision,
	"CLEARED_ACTUAL" double precision,
	"CATEGORY" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."FIXED_ASSET" (
	"ASSET_REF" varchar,
	"DETAILS_1" varchar,
	"DETAILS_2" varchar,
	"DETAILS_3" varchar,
	"EMPLOYEE" varchar,
	"SERIAL_NUMBER" varchar,
	"PURCHASE_REF" varchar,
	"BAL_SHEET_NOM_CODE" varchar,
	"PROFIT_LOSS_NOM_CODE" varchar,
	"DEP_METHOD_CODE" smallint,
	"DEP_METHOD" varchar,
	"DEP_RATE" double precision,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"ASSET_CAT" smallint,
	"PURCHASE_DATE" timestamp,
	"COST_PRICE" double precision,
	"DEP_LAST" double precision,
	"DEP_NEXT" double precision,
	"DEP_TO_DATE" timestamp,
	"NET_BOOK" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."FIXED_ASSET_CAT" (
	"NUMBER" smallint,
	"NAME" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."FUND" (
	"FUND_ID" integer,
	"FUND_TYPE_ID" integer,
	"DESCRIPTION" varchar,
	"CONTACT_NAME" varchar,
	"HELD_BY" varchar,
	"ACCOUNT_REF" varchar,
	"BALANCE" double precision,
	"OPENING_BALANCE" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."FUND_TYPE" (
	"FUND_TYPE_ID" integer,
	"DESCRIPTION" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."GDN_ITEM" (
	"UNIQUE_ID" integer,
	"GDN_NUMBER" integer,
	"ITEM_NUMBER" integer,
	"ORDER_NUMBER" integer,
	"ORDER_ITEM" smallint,
	"ACCOUNT_REF" varchar,
	"CUSTOMER_GDN_NUMBER" varchar,
	"STOCK_CODE" varchar,
	"DESCRIPTION" varchar,
	"DATE" timestamp,
	"QTY_DESPATCHED" double precision,
	"QTY_ON_ORDER" double precision,
	"PRINTED_FLAG" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint,
	CONSTRAINT "GDN_ITEM_GDN_NUMBER_ITEM_NUMBER_pk" PRIMARY KEY("GDN_NUMBER","ITEM_NUMBER")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."GRN_ITEM" (
	"GRN_NUMBER" integer,
	"ITEM_NUMBER" integer,
	"ORDER_NUMBER" integer,
	"ORDER_ITEM" smallint,
	"ACCOUNT_REF" varchar,
	"SUPPLIER_GRN_NUMBER" varchar,
	"STOCK_CODE" varchar,
	"DESCRIPTION" varchar,
	"DATE" timestamp,
	"QTY_RECEIVED" double precision,
	"QTY_ON_ORDER" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint,
	CONSTRAINT "GRN_ITEM_GRN_NUMBER_ITEM_NUMBER_pk" PRIMARY KEY("GRN_NUMBER","ITEM_NUMBER")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."INTRASTAT" (
	"ORDER_NUMBER" varchar,
	"ACCOUNT_REF" varchar,
	"STOCK_CODE" varchar,
	"DESCRIPTION" varchar,
	"DATE" timestamp,
	"NOTC" varchar,
	"COUNTRY_CODE" varchar,
	"COMMODITY_CODE" varchar,
	"DELIVERY_STATUS" varchar,
	"DELIVERY_TERMS" varchar,
	"QUANTITY" double precision,
	"QTY_ORDERED" double precision,
	"QTY_DELIVERED" double precision,
	"QTY_TO_CONFIRM" double precision,
	"UNIT" double precision,
	"NET_MASS" double precision,
	"GOODS_VALUE" double precision,
	"COUNTRY_OF_ORIGIN" varchar,
	"TRANSPORT" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."INVOICE" (
	"INVOICE_NUMBER" integer,
	"INVOICE_TYPE_CODE" smallint,
	"INVOICE_TYPE" varchar,
	"INVOICE_OR_CREDIT" varchar,
	"INVOICE_DATE" timestamp,
	"ACCOUNT_REF" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"C_ADDRESS_1" varchar,
	"C_ADDRESS_2" varchar,
	"C_ADDRESS_3" varchar,
	"C_ADDRESS_4" varchar,
	"C_ADDRESS_5" varchar,
	"DEL_NAME" varchar,
	"DEL_ADDRESS_1" varchar,
	"DEL_ADDRESS_2" varchar,
	"DEL_ADDRESS_3" varchar,
	"DEL_ADDRESS_4" varchar,
	"DEL_ADDRESS_5" varchar,
	"VAT_REG_NUMBER" varchar,
	"ORDER_NUMBER" varchar,
	"ORDER_NUMBER_NUMERIC" integer,
	"CONTACT_NAME" varchar,
	"TAKEN_BY" varchar,
	"CUST_ORDER_NUMBER" varchar,
	"CUST_TEL_NUMBER" varchar,
	"NOTES_1" varchar,
	"NOTES_2" varchar,
	"NOTES_3" varchar,
	"CUST_DISC_RATE" double precision,
	"FOREIGN_ITEMS_NET" double precision,
	"FOREIGN_ITEMS_TAX" double precision,
	"FOREIGN_ITEMS_GROSS" double precision,
	"ITEMS_NET" double precision,
	"ITEMS_TAX" double precision,
	"ITEMS_GROSS" double precision,
	"TAX_RATE_1" double precision,
	"TAX_RATE_2" double precision,
	"TAX_RATE_3" double precision,
	"TAX_RATE_4" double precision,
	"TAX_RATE_5" double precision,
	"NET_AMOUNT_1" double precision,
	"NET_AMOUNT_2" double precision,
	"NET_AMOUNT_3" double precision,
	"NET_AMOUNT_4" double precision,
	"NET_AMOUNT_5" double precision,
	"TAX_AMOUNT_1" double precision,
	"TAX_AMOUNT_2" double precision,
	"TAX_AMOUNT_3" double precision,
	"TAX_AMOUNT_4" double precision,
	"TAX_AMOUNT_5" double precision,
	"GLOBAL_NOM_CODE" varchar,
	"GLOBAL_DETAILS" varchar,
	"GLOBAL_TAX_CODE" varchar,
	"GLOBAL_DEPT_NUMBER" smallint,
	"GLOBAL_DEPT_NAME" varchar,
	"COURIER_NUMBER" smallint,
	"COURIER_NAME" varchar,
	"CONSIGNMENT" varchar,
	"CARR_NOM_CODE" varchar,
	"CARR_TAX_CODE" varchar,
	"CARR_DEPT_NUMBER" smallint,
	"CARR_DEPT_NAME" varchar,
	"FOREIGN_CARR_NET" double precision,
	"FOREIGN_CARR_TAX" double precision,
	"FOREIGN_CARR_GROSS" double precision,
	"CARR_NET" double precision,
	"CARR_TAX" double precision,
	"CARR_GROSS" double precision,
	"FOREIGN_INVOICE_NET" double precision,
	"FOREIGN_INVOICE_TAX" double precision,
	"FOREIGN_INVOICE_GROSS" double precision,
	"INVOICE_NET" double precision,
	"INVOICE_TAX" double precision,
	"INVOICE_GROSS" double precision,
	"CURRENCY" smallint,
	"CURRENCY_TYPE" smallint,
	"EURO_GROSS" double precision,
	"EURO_RATE" double precision,
	"FOREIGN_RATE" double precision,
	"SETTLEMENT_DUE_DAYS" smallint,
	"SETTLEMENT_DISC_RATE" double precision,
	"FOREIGN_SETTLEMENT_DISC_AMOUNT" double precision,
	"FOREIGN_SETTLEMENT_TOTAL" double precision,
	"FOREIGN_AMOUNT_PREPAID" double precision,
	"SETTLEMENT_DISC_AMOUNT" double precision,
	"SETTLEMENT_TOTAL" double precision,
	"AMOUNT_PREPAID" double precision,
	"PAYMENT_REF" varchar,
	"PRINTED" varchar,
	"PRINTED_CODE" smallint,
	"POSTED" varchar,
	"POSTED_CODE" smallint,
	"QUOTE_EXPIRY_DATE" timestamp,
	"QUOTE_STATUS" varchar,
	"QUOTE_STATUS_ID" smallint,
	"RECURRING_REF" varchar,
	"DUNS_NUMBER" varchar,
	"NET_VALUE_DISCOUNT_NET" double precision,
	"NET_VALUE_DISCOUNT_NET_BASE" double precision,
	"NET_VALUE_DISCOUNT_RATE" double precision,
	"NET_VALUE_DISCOUNT_DESC" varchar,
	"NET_VALUE_DISCOUNT_COMMENT_1" varchar,
	"NET_VALUE_DISCOUNT_COMMENT_2" varchar,
	"PAYMENT_TYPE" smallint,
	"BANK_REF" varchar,
	"GDN_NUMBER" integer,
	"PROJECT_ID" integer,
	"ANALYSIS_1" varchar,
	"ANALYSIS_2" varchar,
	"ANALYSIS_3" varchar,
	"PAYMENT_DUE_DATE" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."INVOICE_ITEM" (
	"INVOICE_NUMBER" integer,
	"ITEM_NUMBER" smallint,
	"JOB_NUMBER" varchar,
	"SERVICE_FLAG" smallint,
	"DESCRIPTION" varchar,
	"TEXT" text,
	"STOCK_CODE" varchar,
	"COMMENT_1" varchar,
	"COMMENT_2" varchar,
	"UNIT_OF_SALE" varchar,
	"QUANTITY" double precision,
	"FOREIGN_UNIT_PRICE" double precision,
	"FOREIGN_DISCOUNT_AMOUNT" double precision,
	"UNIT_PRICE" double precision,
	"DISCOUNT_AMOUNT" double precision,
	"DISCOUNT_RATE" double precision,
	"DELIVERY_DATE" timestamp,
	"NOMINAL_CODE" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"TAX_CODE_ID" smallint,
	"TAX_CODE" varchar,
	"ADD_DISC_RATE" double precision,
	"TAX_RATE" double precision,
	"FULL_NET_AMOUNT" double precision,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"GROSS_AMOUNT" double precision,
	"FOREIGN_FULL_NET_AMOUNT" double precision,
	"FOREIGN_NET_AMOUNT" double precision,
	"FOREIGN_TAX_AMOUNT" double precision,
	"FOREIGN_GROSS_AMOUNT" double precision,
	"EXT_ORDER_REF" varchar,
	"EXT_ORDER_LINE_REF" integer,
	"PROJECT_ID" integer,
	"ITEMID" integer,
	"NEGOTIATION_DISC_NET" double precision,
	"NEGOTIATION_DISC_NET_BASE" double precision,
	"GENERATED_MESSAGE" smallint,
	"EC_VAT_DESCRIPTION_ID" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."LETTER_TYPE" (
	"UNIQUE_ID" integer,
	"LETTER_TYPE" smallint,
	"DESCRIPTION" varchar,
	"USED_FOR_CUSTOMERS" smallint,
	"USED_FOR_SUPPLIERS" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."NOMINAL_LEDGER" (
	"ACCOUNT_REF" varchar,
	"NAME" varchar,
	"ACCOUNT_TYPE" smallint,
	"BALANCE" double precision,
	"QUICK_RATIO" smallint,
	"SOFA_ID" integer,
	"PRIOR_YR_MTH1" double precision,
	"PRIOR_YR_MTH2" double precision,
	"PRIOR_YR_MTH3" double precision,
	"PRIOR_YR_MTH4" double precision,
	"PRIOR_YR_MTH5" double precision,
	"PRIOR_YR_MTH6" double precision,
	"PRIOR_YR_MTH7" double precision,
	"PRIOR_YR_MTH8" double precision,
	"PRIOR_YR_MTH9" double precision,
	"PRIOR_YR_MTH10" double precision,
	"PRIOR_YR_MTH11" double precision,
	"PRIOR_YR_MTH12" double precision,
	"PRIOR_YR2_MTH1" double precision,
	"PRIOR_YR2_MTH2" double precision,
	"PRIOR_YR2_MTH3" double precision,
	"PRIOR_YR2_MTH4" double precision,
	"PRIOR_YR2_MTH5" double precision,
	"PRIOR_YR2_MTH6" double precision,
	"PRIOR_YR2_MTH7" double precision,
	"PRIOR_YR2_MTH8" double precision,
	"PRIOR_YR2_MTH9" double precision,
	"PRIOR_YR2_MTH10" double precision,
	"PRIOR_YR2_MTH11" double precision,
	"PRIOR_YR2_MTH12" double precision,
	"PRIOR_YR3_MTH1" double precision,
	"PRIOR_YR3_MTH2" double precision,
	"PRIOR_YR3_MTH3" double precision,
	"PRIOR_YR3_MTH4" double precision,
	"PRIOR_YR3_MTH5" double precision,
	"PRIOR_YR3_MTH6" double precision,
	"PRIOR_YR3_MTH7" double precision,
	"PRIOR_YR3_MTH8" double precision,
	"PRIOR_YR3_MTH9" double precision,
	"PRIOR_YR3_MTH10" double precision,
	"PRIOR_YR3_MTH11" double precision,
	"PRIOR_YR3_MTH12" double precision,
	"PRIOR_YR4_MTH1" double precision,
	"PRIOR_YR4_MTH2" double precision,
	"PRIOR_YR4_MTH3" double precision,
	"PRIOR_YR4_MTH4" double precision,
	"PRIOR_YR4_MTH5" double precision,
	"PRIOR_YR4_MTH6" double precision,
	"PRIOR_YR4_MTH7" double precision,
	"PRIOR_YR4_MTH8" double precision,
	"PRIOR_YR4_MTH9" double precision,
	"PRIOR_YR4_MTH10" double precision,
	"PRIOR_YR4_MTH11" double precision,
	"PRIOR_YR4_MTH12" double precision,
	"PRIOR_YR5_MTH1" double precision,
	"PRIOR_YR5_MTH2" double precision,
	"PRIOR_YR5_MTH3" double precision,
	"PRIOR_YR5_MTH4" double precision,
	"PRIOR_YR5_MTH5" double precision,
	"PRIOR_YR5_MTH6" double precision,
	"PRIOR_YR5_MTH7" double precision,
	"PRIOR_YR5_MTH8" double precision,
	"PRIOR_YR5_MTH9" double precision,
	"PRIOR_YR5_MTH10" double precision,
	"PRIOR_YR5_MTH11" double precision,
	"PRIOR_YR5_MTH12" double precision,
	"BUDGET_MTH1" double precision,
	"BUDGET_MTH2" double precision,
	"BUDGET_MTH3" double precision,
	"BUDGET_MTH4" double precision,
	"BUDGET_MTH5" double precision,
	"BUDGET_MTH6" double precision,
	"BUDGET_MTH7" double precision,
	"BUDGET_MTH8" double precision,
	"BUDGET_MTH9" double precision,
	"BUDGET_MTH10" double precision,
	"BUDGET_MTH11" double precision,
	"BUDGET_MTH12" double precision,
	"BALANCE_BF" double precision,
	"BALANCE_MTH1" double precision,
	"BALANCE_MTH2" double precision,
	"BALANCE_MTH3" double precision,
	"BALANCE_MTH4" double precision,
	"BALANCE_MTH5" double precision,
	"BALANCE_MTH6" double precision,
	"BALANCE_MTH7" double precision,
	"BALANCE_MTH8" double precision,
	"BALANCE_MTH9" double precision,
	"BALANCE_MTH10" double precision,
	"BALANCE_MTH11" double precision,
	"BALANCE_MTH12" double precision,
	"BALANCE_FUTURE" double precision,
	"DEBIT_BF" double precision,
	"DEBIT_MTH1" double precision,
	"DEBIT_MTH2" double precision,
	"DEBIT_MTH3" double precision,
	"DEBIT_MTH4" double precision,
	"DEBIT_MTH5" double precision,
	"DEBIT_MTH6" double precision,
	"DEBIT_MTH7" double precision,
	"DEBIT_MTH8" double precision,
	"DEBIT_MTH9" double precision,
	"DEBIT_MTH10" double precision,
	"DEBIT_MTH11" double precision,
	"DEBIT_MTH12" double precision,
	"DEBIT_FUTURE" double precision,
	"CREDIT_BF" double precision,
	"CREDIT_MTH1" double precision,
	"CREDIT_MTH2" double precision,
	"CREDIT_MTH3" double precision,
	"CREDIT_MTH4" double precision,
	"CREDIT_MTH5" double precision,
	"CREDIT_MTH6" double precision,
	"CREDIT_MTH7" double precision,
	"CREDIT_MTH8" double precision,
	"CREDIT_MTH9" double precision,
	"CREDIT_MTH10" double precision,
	"CREDIT_MTH11" double precision,
	"CREDIT_MTH12" double precision,
	"CREDIT_FUTURE" double precision,
	"INACTIVE_FLAG" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PAYMENT_INFO" (
	"TRAN_NUMBER" integer,
	"PAYMENT_STATUS" smallint,
	"PAYMENT_STATUS_DESCRIPTION" varchar,
	"FOREIGN_SAGE_PAYMENTS_RATE" double precision,
	"FINAL_AMOUNT_BASE" double precision,
	"FINAL_PAID_DATE" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PAYMENT_METHOD" (
	"UNIQUE_ID" integer,
	"DESCRIPTION" varchar,
	"ONLINE" smallint,
	"READONLY" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PERIOD" (
	"PERIOD" smallint,
	"DESCRIPTION" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."POP_ITEM" (
	"ORDER_NUMBER" integer,
	"ITEM_NUMBER" smallint,
	"JOB_NUMBER" varchar,
	"SERVICE_FLAG" smallint,
	"DESCRIPTION" varchar,
	"TEXT" text,
	"STOCK_CODE" varchar,
	"COMMENT_1" varchar,
	"COMMENT_2" varchar,
	"UNIT_OF_SALE" varchar,
	"QTY_ORDER" double precision,
	"QTY_ALLOCATED" double precision,
	"QTY_DELIVERED" double precision,
	"QTY_DESPATCH" double precision,
	"QTY_LAST_DESPATCH" double precision,
	"FOREIGN_UNIT_PRICE" double precision,
	"FOREIGN_DISCOUNT_AMOUNT" double precision,
	"UNIT_PRICE" double precision,
	"DISCOUNT_AMOUNT" double precision,
	"DISCOUNT_RATE" double precision,
	"DELIVERY_DATE" timestamp,
	"NOMINAL_CODE" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"TAX_CODE_ID" smallint,
	"TAX_CODE" varchar,
	"ADD_DISC_RATE" double precision,
	"TAX_RATE" double precision,
	"FULL_NET_AMOUNT" double precision,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"GROSS_AMOUNT" double precision,
	"FOREIGN_FULL_NET_AMOUNT" double precision,
	"FOREIGN_NET_AMOUNT" double precision,
	"FOREIGN_TAX_AMOUNT" double precision,
	"FOREIGN_GROSS_AMOUNT" double precision,
	"THIS_RECORD" integer,
	"POP_ITEM_ID" integer,
	"QTY_ALLOCATED_TO_PROJECT" double precision,
	"QTY_ISSUED_TO_PROJECT" double precision,
	"DUE_DATE" timestamp,
	"QTY_COMMITTED_TO_PROJECT" double precision,
	"PROJECT_REF" varchar,
	"PROJECT_NAME" varchar,
	"COST_CODE_REF" varchar,
	"ITEMID" integer PRIMARY KEY NOT NULL,
	"GENERATED_MESSAGE" smallint,
	"QTY_INVOICED" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PREPAYMENT" (
	"NAME" varchar,
	"NOMINAL_CODE_1" varchar,
	"NOMINAL_CODE_2" varchar,
	"AMOUNT" double precision,
	"MONTHS_TO_POST" smallint,
	"MONTHS_POSTED" smallint,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PRICE" (
	"PRICE_ID" varchar,
	"TYPE" varchar,
	"PRICING_REF" varchar,
	"STOCK_CODE" varchar,
	"CALC_METHOD" integer,
	"CALC_VALUE" double precision,
	"STORED_PRICE" double precision,
	"ROUNDER_METHOD" smallint,
	"ROUNDER_DIRECTION" smallint,
	"ROUNDER_MULTIPLE_OF" double precision,
	"ROUNDER_ADJUSTMENT" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PRICE_LIST" (
	"TYPE" varchar,
	"PRICING_REF" varchar,
	"NAME" varchar,
	"CURRENCY" smallint,
	"HAS_STATIC_PRICES" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT" (
	"REFERENCE" varchar,
	"NAME" varchar,
	"DESCRIPTION" varchar,
	"STATUS_ID" integer,
	"START_DATE" timestamp,
	"END_DATE" timestamp,
	"CUSTOMER_REF" varchar,
	"ORDER_NUMBER" varchar,
	"ANALYSIS_1" varchar,
	"ANALYSIS_2" varchar,
	"ANALYSIS_3" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"CONTACT_NAME" varchar,
	"TELEPHONE" varchar,
	"FAX" varchar,
	"E_MAIL" varchar,
	"COUNTRY_CODE" varchar,
	"TOTAL_BILLED" double precision,
	"BILLED_NET" double precision,
	"BILLED_TAX" double precision,
	"OUTSTANDING_TO_BILL" double precision,
	"PRICE_QUOTED" double precision,
	"PROFIT_TO_DATE" timestamp,
	"TOTAL_COST" double precision,
	"TOTAL_BUDGET" double precision,
	"VARIANCE" double precision,
	"LAST_BILLED_DATE" timestamp,
	"LAST_COST_DATE" timestamp,
	"PROJECT_ID" integer,
	"PARENT_PROJECT_NO" integer,
	"CHILD_POSITION" integer,
	"COMMITTED_COST" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_BUDGET" (
	"PROJECT_ID" integer,
	"COST_CODE_ID" integer,
	"AMOUNT" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_COST_CODE" (
	"COST_CODE_ID" integer,
	"REFERENCE" varchar,
	"DESCRIPTION" varchar,
	"COST_TYPE_ID" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_COST_TYPE" (
	"COST_TYPE_ID" integer,
	"NAME" varchar,
	"IS_DEFAULT" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_ONLY_TRAN" (
	"PROJECT_TRAN_ID" integer,
	"TYPE" varchar,
	"ACCOUNT_REF" varchar,
	"NOMINAL_CODE" varchar,
	"REFERENCE" varchar,
	"EXTRA_REF" varchar,
	"DETAILS" varchar,
	"RESOURCE_ID" integer,
	"QUANTITY" double precision,
	"RATE" double precision,
	"TAX_AMOUNT" double precision,
	"TAX_CODE" varchar,
	"DEPT_NUMBER" integer,
	"DEPT_NAME" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_RELATIONSHIP" (
	"ANCESTOR_ID" integer,
	"DESCENDENT_ID" integer,
	"GENERATION_GAP" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_RESOURCE" (
	"RESOURCE_ID" integer,
	"REFERENCE" varchar,
	"NAME" varchar,
	"UNIT" varchar,
	"DEFAULT_COST_CODE_ID" integer,
	"RATE" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_RESOURCE_TYPE" (
	"TYPE_ID" integer,
	"NAME" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_REVENUE_CODE" (
	"REVENUE_CODE_ID" integer,
	"REFERENCE" varchar,
	"DESCRIPTION" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_STATUS" (
	"STATUS_ID" integer,
	"REFERENCE" varchar,
	"NAME" varchar,
	"IS_DEFAULT" smallint,
	"ALLOW_POSTING" smallint,
	"ALLOW_DELETE" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROJECT_TRAN" (
	"PROJECT_TRAN_ID" integer,
	"AUDIT_TRAIL_ID" integer,
	"STOCK_TRAIL_ID" integer,
	"PROJECT_ID" integer,
	"COST_CODE_ID" integer,
	"REVENUE_CODE_ID" integer,
	"POP_ITEM_ID" integer,
	"STOCK_ALLOCATION_ID" integer,
	"DATE" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PROTX_PAYMENT" (
	"VENDOR_TX_CODE" varchar,
	"VPS_TX_ID" varchar,
	"TX_AUTH_NUMBER" varchar,
	"AMOUNT" double precision,
	"ACCOUNT" varchar,
	"PAYMENT_DATE" timestamp,
	"PAYMENT_TYPE" varchar,
	"TRANSACTION_TYPE" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PURCHASE_DEL_ADDR" (
	"REFERENCE" varchar,
	"ACCOUNT_REF" varchar,
	"ADDRESS_REF" integer,
	"DESCRIPTION" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"TELEPHONE" varchar,
	"FAX" varchar,
	"E_MAIL" varchar,
	"CONTACT_NAME" varchar,
	"TAX_CODE" smallint,
	"COUNTRY_CODE" varchar,
	"VAT_REG_NUMBER" varchar,
	"TELEPHONE_2" varchar,
	"ADDRESS_TYPE_NAME" varchar,
	"ADDRESS_TYPE" smallint,
	"CONTACT_ROLE" varchar,
	"NOTES" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PURCHASE_LEDGER" (
	"ACCOUNT_REF" varchar PRIMARY KEY NOT NULL,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"C_ADDRESS_1" varchar,
	"C_ADDRESS_2" varchar,
	"C_ADDRESS_3" varchar,
	"C_ADDRESS_4" varchar,
	"C_ADDRESS_5" varchar,
	"CONTACT_NAME" varchar,
	"TELEPHONE" varchar,
	"TELEPHONE_2" varchar,
	"FAX" varchar,
	"E_MAIL" varchar,
	"E_MAIL2" varchar,
	"E_MAIL3" varchar,
	"WEB_ADDRESS" varchar,
	"TRADE_CONTACT" varchar,
	"DEL_NAME" varchar,
	"DEL_ADDRESS_1" varchar,
	"DEL_ADDRESS_2" varchar,
	"DEL_ADDRESS_3" varchar,
	"DEL_ADDRESS_4" varchar,
	"DEL_ADDRESS_5" varchar,
	"DEL_CONTACT_NAME" varchar,
	"DEL_TELEPHONE" varchar,
	"DEL_FAX" varchar,
	"ANALYSIS_1" varchar,
	"ANALYSIS_2" varchar,
	"ANALYSIS_3" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"STATUS_NUMBER" smallint,
	"STATUS_TEXT" varchar,
	"DEF_TAX_CODE" varchar,
	"DEF_NOM_CODE" varchar,
	"VAT_REG_NUMBER" varchar,
	"CURRENCY" smallint,
	"COUNTRY_CODE" varchar,
	"DISCOUNT_RATE" double precision,
	"SETTLEMENT_DISC_RATE" double precision,
	"SETTLEMENT_DUE_DAYS" smallint,
	"PAYMENT_DUE_DAYS" smallint,
	"PAYMENT_DUE_FROM" smallint,
	"PAYMENT_DUE_FROM_TEXT" varchar,
	"CREDIT_LIMIT" double precision,
	"ACCOUNT_ON_HOLD" smallint,
	"TERMS" varchar,
	"RESTRICT_MAIL" smallint,
	"TERMS_AGREED" smallint,
	"DATE_ACCOUNT_OPENED" timestamp,
	"DATE_NEXT_CREDIT" timestamp,
	"DATE_LAST_CREDIT" timestamp,
	"CREDIT_POSITION" varchar,
	"CREDIT_POS_CODE" smallint,
	"CAN_CHARGE" smallint,
	"USE_BACS" smallint,
	"USE_BSOC" smallint,
	"BACS_REF" varchar,
	"BUREAU_CODE" smallint,
	"CREDIT_REF" varchar,
	"DATE_CREDIT_APPLIED" timestamp,
	"DATE_CREDIT_RECEIVED" timestamp,
	"OVERRIDE_TAX_CODE" smallint,
	"LAST_PAYMENT_DATE" timestamp,
	"FIRST_INV_DATE" timestamp,
	"LAST_INV_DATE" timestamp,
	"BALANCE" double precision,
	"FOREIGN_BALANCE" double precision,
	"TURNOVER_MTD" double precision,
	"TURNOVER_YTD" double precision,
	"PRIOR_YEAR" double precision,
	"BANK_NAME" varchar,
	"BANK_ADDRESS_1" varchar,
	"BANK_ADDRESS_2" varchar,
	"BANK_ADDRESS_3" varchar,
	"BANK_ADDRESS_4" varchar,
	"BANK_ADDRESS_5" varchar,
	"BANK_SORT_CODE" varchar,
	"BANK_ACCOUNT_NAME" varchar,
	"BANK_ACCOUNT_NUMBER" varchar,
	"BANK_IBAN" varchar,
	"BANK_BIC" varchar,
	"BANK_ROLLNUMBER" varchar,
	"BANK_ADDITIONALREF1" varchar,
	"BANK_ADDITIONALREF2" varchar,
	"BANK_ADDITIONALREF3" varchar,
	"DONOR_TITLE" varchar,
	"DONOR_FORENAME" varchar,
	"DONOR_SURNAME" varchar,
	"DEFAULT_FUND_ID" integer,
	"INVOICE_BF" double precision,
	"INVOICE_MTH1" double precision,
	"INVOICE_MTH2" double precision,
	"INVOICE_MTH3" double precision,
	"INVOICE_MTH4" double precision,
	"INVOICE_MTH5" double precision,
	"INVOICE_MTH6" double precision,
	"INVOICE_MTH7" double precision,
	"INVOICE_MTH8" double precision,
	"INVOICE_MTH9" double precision,
	"INVOICE_MTH10" double precision,
	"INVOICE_MTH11" double precision,
	"INVOICE_MTH12" double precision,
	"INVOICE_CF" double precision,
	"CREDIT_BF" double precision,
	"CREDIT_MTH1" double precision,
	"CREDIT_MTH2" double precision,
	"CREDIT_MTH3" double precision,
	"CREDIT_MTH4" double precision,
	"CREDIT_MTH5" double precision,
	"CREDIT_MTH6" double precision,
	"CREDIT_MTH7" double precision,
	"CREDIT_MTH8" double precision,
	"CREDIT_MTH9" double precision,
	"CREDIT_MTH10" double precision,
	"CREDIT_MTH11" double precision,
	"CREDIT_MTH12" double precision,
	"CREDIT_CF" double precision,
	"PAYMENT_BF" double precision,
	"PAYMENT_MTH1" double precision,
	"PAYMENT_MTH2" double precision,
	"PAYMENT_MTH3" double precision,
	"PAYMENT_MTH4" double precision,
	"PAYMENT_MTH5" double precision,
	"PAYMENT_MTH6" double precision,
	"PAYMENT_MTH7" double precision,
	"PAYMENT_MTH8" double precision,
	"PAYMENT_MTH9" double precision,
	"PAYMENT_MTH10" double precision,
	"PAYMENT_MTH11" double precision,
	"PAYMENT_MTH12" double precision,
	"PAYMENT_CF" double precision,
	"DUNS_NUMBER" varchar,
	"PRIORITY" smallint,
	"PROMISED_PAYMENT" double precision,
	"PROMISED_PAYMENT_DATE" timestamp,
	"REPORT_PASSWORD" varchar,
	"LETTERS_VIA_EMAIL" smallint,
	"PAYMENT_METHOD_ID" integer,
	"DECLARATION_VALID_FROM" timestamp,
	"INACTIVE_FLAG" smallint,
	"MANDATEID" varchar,
	"STATUS" smallint,
	"STATUS_DESCRIPTION" varchar,
	"LAST_REFRESHED_DATE" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."PURCHASE_ORDER" (
	"ORDER_NUMBER" integer PRIMARY KEY NOT NULL,
	"ORDER_OR_QUOTE" varchar,
	"ORDER_DATE" timestamp,
	"DELIVERY_DATE" timestamp,
	"ORDER_STATUS_CODE" smallint,
	"ORDER_STATUS" varchar,
	"DELIVERY_STATUS_CODE" smallint,
	"DELIVERY_STATUS" varchar,
	"ACCOUNT_REF" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"C_ADDRESS_1" varchar,
	"C_ADDRESS_2" varchar,
	"C_ADDRESS_3" varchar,
	"C_ADDRESS_4" varchar,
	"C_ADDRESS_5" varchar,
	"DEL_NAME" varchar,
	"DEL_ADDRESS_1" varchar,
	"DEL_ADDRESS_2" varchar,
	"DEL_ADDRESS_3" varchar,
	"DEL_ADDRESS_4" varchar,
	"DEL_ADDRESS_5" varchar,
	"VAT_REG_NUMBER" varchar,
	"REFERENCE" varchar,
	"CONTACT_NAME" varchar,
	"TAKEN_BY" varchar,
	"SUPP_ORDER_NUMBER" varchar,
	"SUPP_TEL_NUMBER" varchar,
	"NOTES_1" varchar,
	"NOTES_2" varchar,
	"NOTES_3" varchar,
	"SUPP_DISC_RATE" double precision,
	"FOREIGN_ITEMS_NET" double precision,
	"FOREIGN_ITEMS_TAX" double precision,
	"FOREIGN_ITEMS_GROSS" double precision,
	"ITEMS_NET" double precision,
	"ITEMS_TAX" double precision,
	"ITEMS_GROSS" double precision,
	"TAX_RATE_1" double precision,
	"TAX_RATE_2" double precision,
	"TAX_RATE_3" double precision,
	"TAX_RATE_4" double precision,
	"TAX_RATE_5" double precision,
	"NET_AMOUNT_1" double precision,
	"NET_AMOUNT_2" double precision,
	"NET_AMOUNT_3" double precision,
	"NET_AMOUNT_4" double precision,
	"NET_AMOUNT_5" double precision,
	"TAX_AMOUNT_1" double precision,
	"TAX_AMOUNT_2" double precision,
	"TAX_AMOUNT_3" double precision,
	"TAX_AMOUNT_4" double precision,
	"TAX_AMOUNT_5" double precision,
	"COURIER_NUMBER" smallint,
	"COURIER_NAME" varchar,
	"CONSIGNMENT" varchar,
	"CARR_NOM_CODE" varchar,
	"CARR_TAX_CODE" varchar,
	"CARR_DEPT_NUMBER" smallint,
	"CARR_DEPT_NAME" varchar,
	"FOREIGN_CARR_NET" double precision,
	"FOREIGN_CARR_TAX" double precision,
	"FOREIGN_CARR_GROSS" double precision,
	"CARR_NET" double precision,
	"CARR_TAX" double precision,
	"CARR_GROSS" double precision,
	"FOREIGN_INVOICE_NET" double precision,
	"FOREIGN_INVOICE_TAX" double precision,
	"FOREIGN_INVOICE_GROSS" double precision,
	"INVOICE_NET" double precision,
	"INVOICE_TAX" double precision,
	"INVOICE_GROSS" double precision,
	"CURRENCY" smallint,
	"CURRENCY_TYPE" smallint,
	"EURO_GROSS" double precision,
	"EURO_RATE" double precision,
	"FOREIGN_RATE" double precision,
	"SETTLEMENT_DUE_DAYS" smallint,
	"SETTLEMENT_DISC_RATE" double precision,
	"FOREIGN_SETTLEMENT_DISC_AMOUNT" double precision,
	"FOREIGN_SETTLEMENT_TOTAL" double precision,
	"SETTLEMENT_DISC_AMOUNT" double precision,
	"SETTLEMENT_TOTAL" double precision,
	"PAYMENT_REF" varchar,
	"PRINTED" varchar,
	"PRINTED_CODE" smallint,
	"POSTED" varchar,
	"POSTED_CODE" smallint,
	"QUOTE_STATUS_ID" smallint,
	"RECURRING_REF" varchar,
	"DUNS_NUMBER" varchar,
	"PAYMENT_TYPE" smallint,
	"BANK_REF" varchar,
	"GDN_NUMBER" integer,
	"PROJECT_ID" integer,
	"ANALYSIS_1" varchar,
	"ANALYSIS_2" varchar,
	"ANALYSIS_3" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."RECURRING" (
	"UNIQUE_ID" integer,
	"TYPE" varchar,
	"NOMINAL_CODE" varchar,
	"BANK_CODE" varchar,
	"REFERENCE" varchar,
	"DETAILS" varchar,
	"SUSPEND_POSTING" smallint,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"DATE_LAST_POSTING" timestamp,
	"DAY_OF_POSTING" smallint,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"REQUIRED_POSTINGS" smallint,
	"POSTINGS_MADE" smallint,
	"POSTED_NET" double precision,
	"POSTED_TAX" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."REMITTANCE" (
	"URN" varchar,
	"BANK_CODE" varchar,
	"ACCOUNT_REF" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"C_ADDRESS_1" varchar,
	"C_ADDRESS_2" varchar,
	"C_ADDRESS_3" varchar,
	"C_ADDRESS_4" varchar,
	"C_ADDRESS_5" varchar,
	"TELEPHONE" varchar,
	"FAX" varchar,
	"CHEQUE" varchar,
	"DATE" timestamp,
	"TYPE" varchar,
	"INVOICE_DATE" timestamp,
	"INV_REF" varchar,
	"EXTRA_REF" varchar,
	"DETAILS" varchar,
	"TAX_CODE" varchar,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"GROSS_AMOUNT" double precision,
	"PAYMENT" double precision,
	"FOREIGN_RATE" double precision,
	"CURRENCY" smallint,
	"PRINTED_FLAG" smallint,
	"PAID_FLAG" smallint,
	"LAST_LINE" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."RTD_SUMMARY" (
	"VAT_BOX" smallint,
	"VAT_BOX_NAME" varchar,
	"TAX_CODE" varchar,
	"AMOUNT_INVOICE" double precision,
	"AMOUNT_CREDIT" double precision,
	"AMOUNT_BANK" double precision,
	"AMOUNT_JOURNAL" double precision,
	"AMOUNT_REFUND" double precision,
	"AMOUNT_DISCOUNT" double precision,
	"AMOUNT_REVALUATION" double precision,
	"AMOUNT_ADJUSTMENT" double precision,
	"HEADING_INVOICE" varchar,
	"HEADING_CREDIT" varchar,
	"HEADING_BANK" varchar,
	"HEADING_JOURNAL" varchar,
	"HEADING_REFUND" varchar,
	"HEADING_REVALUATION" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."SAGEPAY_PAY_BY_LINK" (
	"CUSTOMER_REFN" varchar,
	"PAYMENT_AMOUNT" double precision
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."SALES_DEL_ADDR" (
	"REFERENCE" varchar,
	"ACCOUNT_REF" varchar,
	"ADDRESS_REF" integer,
	"DESCRIPTION" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"TELEPHONE" varchar,
	"FAX" varchar,
	"E_MAIL" varchar,
	"CONTACT_NAME" varchar,
	"TAX_CODE" smallint,
	"COUNTRY_CODE" varchar,
	"VAT_REG_NUMBER" varchar,
	"TELEPHONE_2" varchar,
	"ADDRESS_TYPE_NAME" varchar,
	"ADDRESS_TYPE" smallint,
	"CONTACT_ROLE" varchar,
	"NOTES" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."SALES_LEDGER" (
	"ACCOUNT_REF" varchar PRIMARY KEY NOT NULL,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"C_ADDRESS_1" varchar,
	"C_ADDRESS_2" varchar,
	"C_ADDRESS_3" varchar,
	"C_ADDRESS_4" varchar,
	"C_ADDRESS_5" varchar,
	"CONTACT_NAME" varchar,
	"TELEPHONE" varchar,
	"TELEPHONE_2" varchar,
	"FAX" varchar,
	"E_MAIL" varchar,
	"E_MAIL2" varchar,
	"E_MAIL3" varchar,
	"DIRECT_DEBITS_EMAIL" varchar,
	"WEB_ADDRESS" varchar,
	"TRADE_CONTACT" varchar,
	"DEL_NAME" varchar,
	"DEL_ADDRESS_1" varchar,
	"DEL_ADDRESS_2" varchar,
	"DEL_ADDRESS_3" varchar,
	"DEL_ADDRESS_4" varchar,
	"DEL_ADDRESS_5" varchar,
	"DEL_CONTACT_NAME" varchar,
	"DEL_TELEPHONE" varchar,
	"DEL_FAX" varchar,
	"ANALYSIS_1" varchar,
	"ANALYSIS_2" varchar,
	"ANALYSIS_3" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"STATUS_NUMBER" smallint,
	"STATUS_TEXT" varchar,
	"DEF_TAX_CODE" varchar,
	"DEF_NOM_CODE" varchar,
	"VAT_REG_NUMBER" varchar,
	"CURRENCY" smallint,
	"COUNTRY_CODE" varchar,
	"DISCOUNT_TYPE" smallint,
	"DISCOUNT_RATE" double precision,
	"PRICING_REF" varchar,
	"SETTLEMENT_DISC_RATE" double precision,
	"SETTLEMENT_DUE_DAYS" smallint,
	"PAYMENT_DUE_DAYS" smallint,
	"PAYMENT_DUE_FROM" smallint,
	"PAYMENT_DUE_FROM_TEXT" varchar,
	"CREDIT_LIMIT" double precision,
	"ACCOUNT_ON_HOLD" smallint,
	"TERMS" varchar,
	"RESTRICT_MAIL" smallint,
	"TERMS_AGREED" smallint,
	"DATE_ACCOUNT_OPENED" timestamp,
	"DATE_NEXT_CREDIT" timestamp,
	"DATE_LAST_CREDIT" timestamp,
	"CREDIT_POSITION" varchar,
	"CREDIT_POS_CODE" smallint,
	"CAN_CHARGE" smallint,
	"USE_BACS" smallint,
	"BACS_REF" varchar,
	"BUREAU_CODE" smallint,
	"CREDIT_REF" varchar,
	"DATE_CREDIT_APPLIED" timestamp,
	"DATE_CREDIT_RECEIVED" timestamp,
	"OVERRIDE_TAX_CODE" smallint,
	"LAST_PAYMENT_DATE" timestamp,
	"FIRST_INV_DATE" timestamp,
	"AVERAGE_PAY_DAYS" double precision,
	"LAST_INV_DATE" timestamp,
	"BALANCE" double precision,
	"FOREIGN_BALANCE" double precision,
	"TURNOVER_MTD" double precision,
	"TURNOVER_YTD" double precision,
	"PRIOR_YEAR" double precision,
	"BANK_NAME" varchar,
	"BANK_ADDRESS_1" varchar,
	"BANK_ADDRESS_2" varchar,
	"BANK_ADDRESS_3" varchar,
	"BANK_ADDRESS_4" varchar,
	"BANK_ADDRESS_5" varchar,
	"BANK_SORT_CODE" varchar,
	"BANK_ACCOUNT_NAME" varchar,
	"BANK_ACCOUNT_NUMBER" varchar,
	"BANK_IBAN" varchar,
	"BANK_BIC" varchar,
	"BANK_ROLLNUMBER" varchar,
	"BANK_ADDITIONALREF1" varchar,
	"BANK_ADDITIONALREF2" varchar,
	"BANK_ADDITIONALREF3" varchar,
	"DONOR_TITLE" varchar,
	"DONOR_FORENAME" varchar,
	"DONOR_SURNAME" varchar,
	"DEFAULT_FUND_ID" integer,
	"GIFT_AID" smallint,
	"INVOICE_BF" double precision,
	"INVOICE_MTH1" double precision,
	"INVOICE_MTH2" double precision,
	"INVOICE_MTH3" double precision,
	"INVOICE_MTH4" double precision,
	"INVOICE_MTH5" double precision,
	"INVOICE_MTH6" double precision,
	"INVOICE_MTH7" double precision,
	"INVOICE_MTH8" double precision,
	"INVOICE_MTH9" double precision,
	"INVOICE_MTH10" double precision,
	"INVOICE_MTH11" double precision,
	"INVOICE_MTH12" double precision,
	"INVOICE_CF" double precision,
	"CREDIT_BF" double precision,
	"CREDIT_MTH1" double precision,
	"CREDIT_MTH2" double precision,
	"CREDIT_MTH3" double precision,
	"CREDIT_MTH4" double precision,
	"CREDIT_MTH5" double precision,
	"CREDIT_MTH6" double precision,
	"CREDIT_MTH7" double precision,
	"CREDIT_MTH8" double precision,
	"CREDIT_MTH9" double precision,
	"CREDIT_MTH10" double precision,
	"CREDIT_MTH11" double precision,
	"CREDIT_MTH12" double precision,
	"CREDIT_CF" double precision,
	"PAYMENT_BF" double precision,
	"PAYMENT_MTH1" double precision,
	"PAYMENT_MTH2" double precision,
	"PAYMENT_MTH3" double precision,
	"PAYMENT_MTH4" double precision,
	"PAYMENT_MTH5" double precision,
	"PAYMENT_MTH6" double precision,
	"PAYMENT_MTH7" double precision,
	"PAYMENT_MTH8" double precision,
	"PAYMENT_MTH9" double precision,
	"PAYMENT_MTH10" double precision,
	"PAYMENT_MTH11" double precision,
	"PAYMENT_MTH12" double precision,
	"PAYMENT_CF" double precision,
	"DUNS_NUMBER" varchar,
	"PRIORITY" smallint,
	"PROMISED_PAYMENT" double precision,
	"PROMISED_PAYMENT_DATE" timestamp,
	"REPORT_PASSWORD" varchar,
	"LETTERS_VIA_EMAIL" smallint,
	"PAYMENT_METHOD_ID" integer,
	"DECLARATION_VALID_FROM" timestamp,
	"INACTIVE_FLAG" smallint,
	"MANDATEID" varchar,
	"STATUS" smallint,
	"STATUS_DESCRIPTION" varchar,
	"LAST_REFRESHED_DATE" timestamp,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."SALES_ORDER" (
	"ORDER_NUMBER" integer PRIMARY KEY NOT NULL,
	"ORDER_TYPE_CODE" smallint,
	"ORDER_OR_QUOTE" varchar,
	"ORDER_DATE" timestamp,
	"DESPATCH_DATE" timestamp,
	"ALLOCATED_STATUS_CODE" smallint,
	"ALLOCATED_STATUS" varchar,
	"DESPATCH_STATUS_CODE" smallint,
	"DESPATCH_STATUS" varchar,
	"ACCOUNT_REF" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar,
	"ADDRESS_4" varchar,
	"ADDRESS_5" varchar,
	"C_ADDRESS_1" varchar,
	"C_ADDRESS_2" varchar,
	"C_ADDRESS_3" varchar,
	"C_ADDRESS_4" varchar,
	"C_ADDRESS_5" varchar,
	"DEL_NAME" varchar,
	"DEL_ADDRESS_1" varchar,
	"DEL_ADDRESS_2" varchar,
	"DEL_ADDRESS_3" varchar,
	"DEL_ADDRESS_4" varchar,
	"DEL_ADDRESS_5" varchar,
	"VAT_REG_NUMBER" varchar,
	"INVOICE_NUMBER" varchar,
	"INVOICE_NUMBER_NUMERIC" integer,
	"CONTACT_NAME" varchar,
	"TAKEN_BY" varchar,
	"CUST_ORDER_NUMBER" varchar,
	"CUST_TEL_NUMBER" varchar,
	"NOTES_1" varchar,
	"NOTES_2" varchar,
	"NOTES_3" varchar,
	"CUST_DISC_RATE" double precision,
	"FOREIGN_ITEMS_NET" double precision,
	"FOREIGN_ITEMS_TAX" double precision,
	"FOREIGN_ITEMS_GROSS" double precision,
	"ITEMS_NET" double precision,
	"ITEMS_TAX" double precision,
	"ITEMS_GROSS" double precision,
	"TAX_RATE_1" double precision,
	"TAX_RATE_2" double precision,
	"TAX_RATE_3" double precision,
	"TAX_RATE_4" double precision,
	"TAX_RATE_5" double precision,
	"NET_AMOUNT_1" double precision,
	"NET_AMOUNT_2" double precision,
	"NET_AMOUNT_3" double precision,
	"NET_AMOUNT_4" double precision,
	"NET_AMOUNT_5" double precision,
	"TAX_AMOUNT_1" double precision,
	"TAX_AMOUNT_2" double precision,
	"TAX_AMOUNT_3" double precision,
	"TAX_AMOUNT_4" double precision,
	"TAX_AMOUNT_5" double precision,
	"GLOBAL_NOM_CODE" varchar,
	"GLOBAL_DETAILS" varchar,
	"GLOBAL_TAX_CODE" varchar,
	"GLOBAL_DEPT_NUMBER" smallint,
	"GLOBAL_DEPT_NAME" varchar,
	"COURIER_NUMBER" smallint,
	"COURIER_NAME" varchar,
	"CONSIGNMENT" varchar,
	"CARR_NOM_CODE" varchar,
	"CARR_TAX_CODE" varchar,
	"CARR_DEPT_NUMBER" smallint,
	"CARR_DEPT_NAME" varchar,
	"FOREIGN_CARR_NET" double precision,
	"FOREIGN_CARR_TAX" double precision,
	"FOREIGN_CARR_GROSS" double precision,
	"CARR_NET" double precision,
	"CARR_TAX" double precision,
	"CARR_GROSS" double precision,
	"FOREIGN_INVOICE_NET" double precision,
	"FOREIGN_INVOICE_TAX" double precision,
	"FOREIGN_INVOICE_GROSS" double precision,
	"INVOICE_NET" double precision,
	"INVOICE_TAX" double precision,
	"INVOICE_GROSS" double precision,
	"CURRENCY" smallint,
	"CURRENCY_TYPE" smallint,
	"EURO_GROSS" double precision,
	"EURO_RATE" double precision,
	"FOREIGN_RATE" double precision,
	"SETTLEMENT_DUE_DAYS" smallint,
	"SETTLEMENT_DISC_RATE" double precision,
	"FOREIGN_SETTLEMENT_DISC_AMOUNT" double precision,
	"FOREIGN_SETTLEMENT_TOTAL" double precision,
	"FOREIGN_AMOUNT_PREPAID" double precision,
	"SETTLEMENT_DISC_AMOUNT" double precision,
	"SETTLEMENT_TOTAL" double precision,
	"AMOUNT_PREPAID" double precision,
	"PAYMENT_REF" varchar,
	"PRINTED" varchar,
	"PRINTED_CODE" smallint,
	"QUOTE_EXPIRY_DATE" timestamp,
	"QUOTE_STATUS" varchar,
	"QUOTE_STATUS_ID" smallint,
	"RECURRING_REF" varchar,
	"DUNS_NUMBER" varchar,
	"NET_VALUE_DISCOUNT_NET" double precision,
	"NET_VALUE_DISCOUNT_NET_BASE" double precision,
	"NET_VALUE_DISCOUNT_RATE" double precision,
	"NET_VALUE_DISCOUNT_DESC" varchar,
	"NET_VALUE_DISCOUNT_COMMENT_1" varchar,
	"NET_VALUE_DISCOUNT_COMMENT_2" varchar,
	"PAYMENT_TYPE" smallint,
	"BANK_REF" varchar,
	"GDN_NUMBER" integer,
	"PROJECT_ID" integer,
	"ANALYSIS_1" varchar,
	"ANALYSIS_2" varchar,
	"ANALYSIS_3" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."SOFA_CATEGORY" (
	"SOFA_ID" integer,
	"DESCRIPTION" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."SOP_ITEM" (
	"ORDER_NUMBER" integer,
	"ITEM_NUMBER" smallint,
	"JOB_NUMBER" varchar,
	"SERVICE_FLAG" smallint,
	"DESCRIPTION" varchar,
	"TEXT" text,
	"STOCK_CODE" varchar,
	"COMMENT_1" varchar,
	"COMMENT_2" varchar,
	"UNIT_OF_SALE" varchar,
	"QTY_ORDER" double precision,
	"QTY_ALLOCATED" double precision,
	"QTY_DELIVERED" double precision,
	"QTY_DESPATCH" double precision,
	"QTY_LAST_DESPATCH" double precision,
	"FOREIGN_UNIT_PRICE" double precision,
	"FOREIGN_DISCOUNT_AMOUNT" double precision,
	"UNIT_PRICE" double precision,
	"DISCOUNT_AMOUNT" double precision,
	"DISCOUNT_RATE" double precision,
	"DELIVERY_DATE" timestamp,
	"NOMINAL_CODE" varchar,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"TAX_CODE_ID" smallint,
	"TAX_CODE" varchar,
	"ADD_DISC_RATE" double precision,
	"TAX_RATE" double precision,
	"FULL_NET_AMOUNT" double precision,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"GROSS_AMOUNT" double precision,
	"FOREIGN_FULL_NET_AMOUNT" double precision,
	"FOREIGN_NET_AMOUNT" double precision,
	"FOREIGN_TAX_AMOUNT" double precision,
	"FOREIGN_GROSS_AMOUNT" double precision,
	"EXT_ORDER_REF" varchar,
	"EXT_ORDER_LINE_REF" integer,
	"PROJECT_ID" integer,
	"THIS_RECORD" integer,
	"POP_ITEM_ID" integer,
	"DUE_DATE" timestamp,
	"ITEMID" integer PRIMARY KEY NOT NULL,
	"NEGOTIATION_DISC_NET" double precision,
	"NEGOTIATION_DISC_NET_BASE" double precision,
	"GENERATED_MESSAGE" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."STOCK" (
	"STOCK_CODE" varchar PRIMARY KEY NOT NULL,
	"DESCRIPTION" varchar,
	"UNIT_OF_SALE" varchar,
	"NOMINAL_CODE" varchar,
	"PURCHASE_REF" varchar,
	"SUPPLIER_PART_NUMBER" varchar,
	"LOCATION" varchar,
	"COMMODITY_CODE" varchar,
	"SALES_PRICE" double precision,
	"WEB_DESCRIPTION" varchar,
	"WEB_DETAILS" varchar,
	"WEB_CATEGORY_1" varchar,
	"WEB_CATEGORY_2" varchar,
	"WEB_CATEGORY_3" varchar,
	"WEB_IMAGE_FILE" varchar,
	"WEB_PUBLISH" smallint,
	"WEB_SPECIAL" smallint,
	"INTRASTAT_COMM_CODE" varchar,
	"INTRASTAT_IMPORT_DUTY_CODE" varchar,
	"SUPP_UNIT_QTY" double precision,
	"IGNORE_STK_LVL_FLAG" smallint,
	"DEPT_NUMBER" smallint,
	"DEPT_NAME" varchar,
	"TAX_CODE" varchar,
	"ASSEMBLY_LEVEL" smallint,
	"LINK_LEVEL" smallint,
	"STOCK_CAT" smallint,
	"STOCK_CAT_NAME" varchar,
	"STOCK_TAKE_DATE" timestamp,
	"LAST_PURCHASE_PRICE" double precision,
	"LAST_DISC_PURCHASE_PRICE" double precision,
	"AVERAGE_COST_PRICE" double precision,
	"QTY_IN_STOCK" double precision,
	"QTY_ON_ORDER" double precision,
	"QTY_ALLOCATED" double precision,
	"QTY_LAST_ORDER" double precision,
	"QTY_REORDER" double precision,
	"QTY_REORDER_LEVEL" double precision,
	"QTY_LAST_STOCK_TAKE" double precision,
	"QTY_MAKEUP" double precision,
	"LAST_SALE_DATE" timestamp,
	"LAST_PURCHASE_DATE" timestamp,
	"UNIT_WEIGHT" double precision,
	"HAS_NO_COMPONENT" smallint,
	"HAS_BOM" varchar,
	"BARCODE" varchar,
	"COMPONENT_CODE_1" varchar,
	"COMPONENT_CODE_2" varchar,
	"COMPONENT_CODE_3" varchar,
	"COMPONENT_CODE_4" varchar,
	"COMPONENT_CODE_5" varchar,
	"COMPONENT_CODE_6" varchar,
	"COMPONENT_CODE_7" varchar,
	"COMPONENT_CODE_8" varchar,
	"COMPONENT_CODE_9" varchar,
	"COMPONENT_CODE_10" varchar,
	"COMPONENT_CODE_11" varchar,
	"COMPONENT_CODE_12" varchar,
	"COMPONENT_CODE_13" varchar,
	"COMPONENT_CODE_14" varchar,
	"COMPONENT_CODE_15" varchar,
	"COMPONENT_CODE_16" varchar,
	"COMPONENT_CODE_17" varchar,
	"COMPONENT_CODE_18" varchar,
	"COMPONENT_CODE_19" varchar,
	"COMPONENT_CODE_20" varchar,
	"COMPONENT_CODE_21" varchar,
	"COMPONENT_CODE_22" varchar,
	"COMPONENT_CODE_23" varchar,
	"COMPONENT_CODE_24" varchar,
	"COMPONENT_CODE_25" varchar,
	"COMPONENT_CODE_26" varchar,
	"COMPONENT_CODE_27" varchar,
	"COMPONENT_CODE_28" varchar,
	"COMPONENT_CODE_29" varchar,
	"COMPONENT_CODE_30" varchar,
	"COMPONENT_CODE_31" varchar,
	"COMPONENT_CODE_32" varchar,
	"COMPONENT_CODE_33" varchar,
	"COMPONENT_CODE_34" varchar,
	"COMPONENT_CODE_35" varchar,
	"COMPONENT_CODE_36" varchar,
	"COMPONENT_CODE_37" varchar,
	"COMPONENT_CODE_38" varchar,
	"COMPONENT_CODE_39" varchar,
	"COMPONENT_CODE_40" varchar,
	"COMPONENT_CODE_41" varchar,
	"COMPONENT_CODE_42" varchar,
	"COMPONENT_CODE_43" varchar,
	"COMPONENT_CODE_44" varchar,
	"COMPONENT_CODE_45" varchar,
	"COMPONENT_CODE_46" varchar,
	"COMPONENT_CODE_47" varchar,
	"COMPONENT_CODE_48" varchar,
	"COMPONENT_CODE_49" varchar,
	"COMPONENT_CODE_50" varchar,
	"COMPONENT_QTY_1" double precision,
	"COMPONENT_QTY_2" double precision,
	"COMPONENT_QTY_3" double precision,
	"COMPONENT_QTY_4" double precision,
	"COMPONENT_QTY_5" double precision,
	"COMPONENT_QTY_6" double precision,
	"COMPONENT_QTY_7" double precision,
	"COMPONENT_QTY_8" double precision,
	"COMPONENT_QTY_9" double precision,
	"COMPONENT_QTY_10" double precision,
	"COMPONENT_QTY_11" double precision,
	"COMPONENT_QTY_12" double precision,
	"COMPONENT_QTY_13" double precision,
	"COMPONENT_QTY_14" double precision,
	"COMPONENT_QTY_15" double precision,
	"COMPONENT_QTY_16" double precision,
	"COMPONENT_QTY_17" double precision,
	"COMPONENT_QTY_18" double precision,
	"COMPONENT_QTY_19" double precision,
	"COMPONENT_QTY_20" double precision,
	"COMPONENT_QTY_21" double precision,
	"COMPONENT_QTY_22" double precision,
	"COMPONENT_QTY_23" double precision,
	"COMPONENT_QTY_24" double precision,
	"COMPONENT_QTY_25" double precision,
	"COMPONENT_QTY_26" double precision,
	"COMPONENT_QTY_27" double precision,
	"COMPONENT_QTY_28" double precision,
	"COMPONENT_QTY_29" double precision,
	"COMPONENT_QTY_30" double precision,
	"COMPONENT_QTY_31" double precision,
	"COMPONENT_QTY_32" double precision,
	"COMPONENT_QTY_33" double precision,
	"COMPONENT_QTY_34" double precision,
	"COMPONENT_QTY_35" double precision,
	"COMPONENT_QTY_36" double precision,
	"COMPONENT_QTY_37" double precision,
	"COMPONENT_QTY_38" double precision,
	"COMPONENT_QTY_39" double precision,
	"COMPONENT_QTY_40" double precision,
	"COMPONENT_QTY_41" double precision,
	"COMPONENT_QTY_42" double precision,
	"COMPONENT_QTY_43" double precision,
	"COMPONENT_QTY_44" double precision,
	"COMPONENT_QTY_45" double precision,
	"COMPONENT_QTY_46" double precision,
	"COMPONENT_QTY_47" double precision,
	"COMPONENT_QTY_48" double precision,
	"COMPONENT_QTY_49" double precision,
	"COMPONENT_QTY_50" double precision,
	"QTY_SOLD_BF" double precision,
	"QTY_SOLD_MTH1" double precision,
	"QTY_SOLD_MTH2" double precision,
	"QTY_SOLD_MTH3" double precision,
	"QTY_SOLD_MTH4" double precision,
	"QTY_SOLD_MTH5" double precision,
	"QTY_SOLD_MTH6" double precision,
	"QTY_SOLD_MTH7" double precision,
	"QTY_SOLD_MTH8" double precision,
	"QTY_SOLD_MTH9" double precision,
	"QTY_SOLD_MTH10" double precision,
	"QTY_SOLD_MTH11" double precision,
	"QTY_SOLD_MTH12" double precision,
	"QTY_SOLD_FUTURE" double precision,
	"SALES_BF" double precision,
	"SALES_MTH1" double precision,
	"SALES_MTH2" double precision,
	"SALES_MTH3" double precision,
	"SALES_MTH4" double precision,
	"SALES_MTH5" double precision,
	"SALES_MTH6" double precision,
	"SALES_MTH7" double precision,
	"SALES_MTH8" double precision,
	"SALES_MTH9" double precision,
	"SALES_MTH10" double precision,
	"SALES_MTH11" double precision,
	"SALES_MTH12" double precision,
	"SALES_FUTURE" double precision,
	"COST_BF" double precision,
	"COST_MTH1" double precision,
	"COST_MTH2" double precision,
	"COST_MTH3" double precision,
	"COST_MTH4" double precision,
	"COST_MTH5" double precision,
	"COST_MTH6" double precision,
	"COST_MTH7" double precision,
	"COST_MTH8" double precision,
	"COST_MTH9" double precision,
	"COST_MTH10" double precision,
	"COST_MTH11" double precision,
	"COST_MTH12" double precision,
	"COST_FUTURE" double precision,
	"THIS_RECORD" integer,
	"BUDGET_QTY_SOLD_BF" double precision,
	"BUDGET_QTY_SOLD_MTH1" double precision,
	"BUDGET_QTY_SOLD_MTH2" double precision,
	"BUDGET_QTY_SOLD_MTH3" double precision,
	"BUDGET_QTY_SOLD_MTH4" double precision,
	"BUDGET_QTY_SOLD_MTH5" double precision,
	"BUDGET_QTY_SOLD_MTH6" double precision,
	"BUDGET_QTY_SOLD_MTH7" double precision,
	"BUDGET_QTY_SOLD_MTH8" double precision,
	"BUDGET_QTY_SOLD_MTH9" double precision,
	"BUDGET_QTY_SOLD_MTH10" double precision,
	"BUDGET_QTY_SOLD_MTH11" double precision,
	"BUDGET_QTY_SOLD_MTH12" double precision,
	"BUDGET_QTY_SOLD_FUTURE" double precision,
	"BUDGET_SALES_BF" double precision,
	"BUDGET_SALES_MTH1" double precision,
	"BUDGET_SALES_MTH2" double precision,
	"BUDGET_SALES_MTH3" double precision,
	"BUDGET_SALES_MTH4" double precision,
	"BUDGET_SALES_MTH5" double precision,
	"BUDGET_SALES_MTH6" double precision,
	"BUDGET_SALES_MTH7" double precision,
	"BUDGET_SALES_MTH8" double precision,
	"BUDGET_SALES_MTH9" double precision,
	"BUDGET_SALES_MTH10" double precision,
	"BUDGET_SALES_MTH11" double precision,
	"BUDGET_SALES_MTH12" double precision,
	"BUDGET_SALES_FUTURE" double precision,
	"PRIOR_YR_QTY_SOLD_BF" double precision,
	"PRIOR_YR_QTY_SOLD_MTH1" double precision,
	"PRIOR_YR_QTY_SOLD_MTH2" double precision,
	"PRIOR_YR_QTY_SOLD_MTH3" double precision,
	"PRIOR_YR_QTY_SOLD_MTH4" double precision,
	"PRIOR_YR_QTY_SOLD_MTH5" double precision,
	"PRIOR_YR_QTY_SOLD_MTH6" double precision,
	"PRIOR_YR_QTY_SOLD_MTH7" double precision,
	"PRIOR_YR_QTY_SOLD_MTH8" double precision,
	"PRIOR_YR_QTY_SOLD_MTH9" double precision,
	"PRIOR_YR_QTY_SOLD_MTH10" double precision,
	"PRIOR_YR_QTY_SOLD_MTH11" double precision,
	"PRIOR_YR_QTY_SOLD_MTH12" double precision,
	"PRIOR_YR_QTY_SOLD_FUTURE" double precision,
	"PRIOR_YR_SALES_BF" double precision,
	"PRIOR_YR_SALES_MTH1" double precision,
	"PRIOR_YR_SALES_MTH2" double precision,
	"PRIOR_YR_SALES_MTH3" double precision,
	"PRIOR_YR_SALES_MTH4" double precision,
	"PRIOR_YR_SALES_MTH5" double precision,
	"PRIOR_YR_SALES_MTH6" double precision,
	"PRIOR_YR_SALES_MTH7" double precision,
	"PRIOR_YR_SALES_MTH8" double precision,
	"PRIOR_YR_SALES_MTH9" double precision,
	"PRIOR_YR_SALES_MTH10" double precision,
	"PRIOR_YR_SALES_MTH11" double precision,
	"PRIOR_YR_SALES_MTH12" double precision,
	"PRIOR_YR_SALES_FUTURE" double precision,
	"PRIOR_YR_COST_BF" double precision,
	"PRIOR_YR_COST_MTH1" double precision,
	"PRIOR_YR_COST_MTH2" double precision,
	"PRIOR_YR_COST_MTH3" double precision,
	"PRIOR_YR_COST_MTH4" double precision,
	"PRIOR_YR_COST_MTH5" double precision,
	"PRIOR_YR_COST_MTH6" double precision,
	"PRIOR_YR_COST_MTH7" double precision,
	"PRIOR_YR_COST_MTH8" double precision,
	"PRIOR_YR_COST_MTH9" double precision,
	"PRIOR_YR_COST_MTH10" double precision,
	"PRIOR_YR_COST_MTH11" double precision,
	"PRIOR_YR_COST_MTH12" double precision,
	"PRIOR_YR_COST_FUTURE" double precision,
	"DISC_A_LEVEL_1_QTY" double precision,
	"DISC_A_LEVEL_2_QTY" double precision,
	"DISC_A_LEVEL_3_QTY" double precision,
	"DISC_A_LEVEL_4_QTY" double precision,
	"DISC_A_LEVEL_5_QTY" double precision,
	"DISC_A_LEVEL_6_QTY" double precision,
	"DISC_A_LEVEL_7_QTY" double precision,
	"DISC_A_LEVEL_8_QTY" double precision,
	"DISC_A_LEVEL_9_QTY" double precision,
	"DISC_A_LEVEL_10_QTY" double precision,
	"DISC_A_LEVEL_1_RATE" double precision,
	"DISC_A_LEVEL_2_RATE" double precision,
	"DISC_A_LEVEL_3_RATE" double precision,
	"DISC_A_LEVEL_4_RATE" double precision,
	"DISC_A_LEVEL_5_RATE" double precision,
	"DISC_A_LEVEL_6_RATE" double precision,
	"DISC_A_LEVEL_7_RATE" double precision,
	"DISC_A_LEVEL_8_RATE" double precision,
	"DISC_A_LEVEL_9_RATE" double precision,
	"DISC_A_LEVEL_10_RATE" double precision,
	"DISC_B_LEVEL_1_QTY" double precision,
	"DISC_B_LEVEL_2_QTY" double precision,
	"DISC_B_LEVEL_3_QTY" double precision,
	"DISC_B_LEVEL_4_QTY" double precision,
	"DISC_B_LEVEL_5_QTY" double precision,
	"DISC_B_LEVEL_6_QTY" double precision,
	"DISC_B_LEVEL_7_QTY" double precision,
	"DISC_B_LEVEL_8_QTY" double precision,
	"DISC_B_LEVEL_9_QTY" double precision,
	"DISC_B_LEVEL_10_QTY" double precision,
	"DISC_B_LEVEL_1_RATE" double precision,
	"DISC_B_LEVEL_2_RATE" double precision,
	"DISC_B_LEVEL_3_RATE" double precision,
	"DISC_B_LEVEL_4_RATE" double precision,
	"DISC_B_LEVEL_5_RATE" double precision,
	"DISC_B_LEVEL_6_RATE" double precision,
	"DISC_B_LEVEL_7_RATE" double precision,
	"DISC_B_LEVEL_8_RATE" double precision,
	"DISC_B_LEVEL_9_RATE" double precision,
	"DISC_B_LEVEL_10_RATE" double precision,
	"DISC_C_LEVEL_1_QTY" double precision,
	"DISC_C_LEVEL_2_QTY" double precision,
	"DISC_C_LEVEL_3_QTY" double precision,
	"DISC_C_LEVEL_4_QTY" double precision,
	"DISC_C_LEVEL_5_QTY" double precision,
	"DISC_C_LEVEL_6_QTY" double precision,
	"DISC_C_LEVEL_7_QTY" double precision,
	"DISC_C_LEVEL_8_QTY" double precision,
	"DISC_C_LEVEL_9_QTY" double precision,
	"DISC_C_LEVEL_10_QTY" double precision,
	"DISC_C_LEVEL_1_RATE" double precision,
	"DISC_C_LEVEL_2_RATE" double precision,
	"DISC_C_LEVEL_3_RATE" double precision,
	"DISC_C_LEVEL_4_RATE" double precision,
	"DISC_C_LEVEL_5_RATE" double precision,
	"DISC_C_LEVEL_6_RATE" double precision,
	"DISC_C_LEVEL_7_RATE" double precision,
	"DISC_C_LEVEL_8_RATE" double precision,
	"DISC_C_LEVEL_9_RATE" double precision,
	"DISC_C_LEVEL_10_RATE" double precision,
	"DISC_D_LEVEL_1_QTY" double precision,
	"DISC_D_LEVEL_2_QTY" double precision,
	"DISC_D_LEVEL_3_QTY" double precision,
	"DISC_D_LEVEL_4_QTY" double precision,
	"DISC_D_LEVEL_5_QTY" double precision,
	"DISC_D_LEVEL_6_QTY" double precision,
	"DISC_D_LEVEL_7_QTY" double precision,
	"DISC_D_LEVEL_8_QTY" double precision,
	"DISC_D_LEVEL_9_QTY" double precision,
	"DISC_D_LEVEL_10_QTY" double precision,
	"DISC_D_LEVEL_1_RATE" double precision,
	"DISC_D_LEVEL_2_RATE" double precision,
	"DISC_D_LEVEL_3_RATE" double precision,
	"DISC_D_LEVEL_4_RATE" double precision,
	"DISC_D_LEVEL_5_RATE" double precision,
	"DISC_D_LEVEL_6_RATE" double precision,
	"DISC_D_LEVEL_7_RATE" double precision,
	"DISC_D_LEVEL_8_RATE" double precision,
	"DISC_D_LEVEL_9_RATE" double precision,
	"DISC_D_LEVEL_10_RATE" double precision,
	"DISC_E_LEVEL_1_QTY" double precision,
	"DISC_E_LEVEL_2_QTY" double precision,
	"DISC_E_LEVEL_3_QTY" double precision,
	"DISC_E_LEVEL_4_QTY" double precision,
	"DISC_E_LEVEL_5_QTY" double precision,
	"DISC_E_LEVEL_6_QTY" double precision,
	"DISC_E_LEVEL_7_QTY" double precision,
	"DISC_E_LEVEL_8_QTY" double precision,
	"DISC_E_LEVEL_9_QTY" double precision,
	"DISC_E_LEVEL_10_QTY" double precision,
	"DISC_E_LEVEL_1_RATE" double precision,
	"DISC_E_LEVEL_2_RATE" double precision,
	"DISC_E_LEVEL_3_RATE" double precision,
	"DISC_E_LEVEL_4_RATE" double precision,
	"DISC_E_LEVEL_5_RATE" double precision,
	"DISC_E_LEVEL_6_RATE" double precision,
	"DISC_E_LEVEL_7_RATE" double precision,
	"DISC_E_LEVEL_8_RATE" double precision,
	"DISC_E_LEVEL_9_RATE" double precision,
	"DISC_E_LEVEL_10_RATE" double precision,
	"PURCHASE_NOMINAL_CODE" varchar,
	"INACTIVE_FLAG" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."STOCK_ALLOCATION" (
	"STOCK_ALLOCATION_ID" integer,
	"PROJECT_ID" integer,
	"COST_CODE_ID" integer,
	"STOCK_CODE" varchar,
	"DETAILS" varchar,
	"REFERENCE" varchar,
	"DATE" timestamp,
	"QTY_ALLOCATED" double precision,
	"QTY_ISSUED" double precision,
	"COST_PRICE" double precision,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."STOCK_CAT" (
	"NUMBER" smallint PRIMARY KEY NOT NULL,
	"NAME" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."STOCK_COMP" (
	"ASSEMBLY_CODE" varchar,
	"COMPONENT_CODE" varchar,
	"COMPONENT_CODE_INDENT" varchar,
	"COMPONENT_QTY" double precision,
	"COMPONENT_LEVEL" smallint,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."STOCK_TRAN" (
	"TRAN_NUMBER" integer PRIMARY KEY NOT NULL,
	"STOCK_CODE" varchar,
	"TYPE" varchar,
	"DATE" timestamp,
	"REFERENCE" varchar,
	"REFERENCE_NUMERIC" integer,
	"DETAILS" varchar,
	"QUANTITY" double precision,
	"COST_PRICE" double precision,
	"SALES_PRICE" double precision,
	"QTY_USED" double precision,
	"ISP_REFERENCE" integer,
	"ARTEFACT_TYPE" smallint,
	"GDN_NUMBER" integer,
	"GRN_NUMBER" integer,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."SUPPLIER_PAYMENT_INFO" (
	"ACCOUNT_REF" varchar,
	"PAYEE_STATUS" smallint,
	"PAYEE_STATUS_DESCRIPTION" varchar,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."TAX_CODE" (
	"TAX_CODE" varchar,
	"TAX_CODE_ID" smallint,
	"DESCRIPTION" varchar,
	"TAX_RATE" double precision,
	"VAT_INCLUDE" smallint,
	"EURO_SALES" smallint,
	"EURO_PURCHASE" smallint,
	"RELATED_CODE" smallint,
	"RELATED_RATE" double precision,
	"IS_REVERSECHARGE" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."UPDATE_LEDGER" (
	"INVOICE_NUMBER" integer,
	"TRAN_NUMBER" integer,
	"TYPE" varchar,
	"DATE" timestamp,
	"ACCOUNT_REF" varchar,
	"NOMINAL_CODE" varchar,
	"DESCRIPTION" varchar,
	"ERROR" varchar,
	"STOCK_CODE" varchar,
	"QUANTITY" double precision,
	"NET_AMOUNT" double precision,
	"TAX_AMOUNT" double precision,
	"GROSS_AMOUNT" double precision,
	"CARR_GROSS" double precision
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."VAT_ADJUSTMENT" (
	"VAT_BOX" smallint,
	"REASON" varchar,
	"VALUE" double precision
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."VAT_DETAILS" (
	"VAT_BOX" integer,
	"VAT_BOX_NAME" varchar,
	"TAX_CODE" varchar,
	"TRANSACTION_ID" integer,
	"TRANSACTION_TYPE" varchar,
	"ACCOUNT" varchar,
	"NOMINAL" varchar,
	"REF" varchar,
	"DATE" timestamp,
	"DETAILS" varchar,
	"AMOUNT" double precision,
	"VAT_FLAG_CODE" varchar,
	"VAT_TRAN_NAME" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."VAT_RETURN" (
	"VAT_BOX" smallint,
	"VAT_BOX_NAME" varchar,
	"COUNT_ALL" integer,
	"COUNT_EARLIER" integer,
	"COUNT_RECON" integer,
	"COUNT_UNRECON" integer,
	"AMOUNT" double precision
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."VAT_RETURN_RECEIPT" (
	"UNIQUE_ID" integer,
	"RECEIPT_TYPE" smallint,
	"VAT_AMOUNT" double precision,
	"PERIOD_START" timestamp,
	"PERIOD_END" timestamp,
	"CURRENCY_SYMBOL" varchar,
	"DUE_DATE" timestamp,
	"HMRC_REFERENCE" varchar,
	"RECEIPT_TIMESTAMP" varchar,
	"PAYMENT_DATE" timestamp,
	"DIRECTDEBIT_STATUS" varchar,
	"NARRATIVE" text,
	"EXTRAINFO" text,
	"RECORD_CREATE_DATE" timestamp,
	"RECORD_MODIFY_DATE" timestamp,
	"RECORD_DELETED" smallint
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."VAT_REV_CHARGE_DETAIL" (
	"CUSTOMER_REF" varchar,
	"VAT_NUMBER" varchar,
	"TRANS_NO" integer,
	"TRAN_TYPE" varchar,
	"NOMINAL_REF" varchar,
	"DATE" timestamp,
	"AMOUNT" double precision
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."VAT_REV_CHARGE_HEADER" (
	"DATE_FROM" timestamp,
	"DATE_TO" timestamp,
	"VAT_NUMBER" varchar,
	"NAME" varchar,
	"ADDRESS_1" varchar,
	"ADDRESS_2" varchar,
	"ADDRESS_3" varchar
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."VAT_REV_CHARGE_RETURN" (
	"CUSTOMER_REF" varchar,
	"VAT_NUMBER" varchar,
	"MONTH_1" double precision,
	"MONTH_2" double precision,
	"MONTH_3" double precision,
	"MONTH_4" double precision,
	"MONTH_5" double precision,
	"MONTH_6" double precision,
	"MONTH_7" double precision,
	"MONTH_8" double precision,
	"MONTH_9" double precision,
	"MONTH_10" double precision,
	"MONTH_11" double precision,
	"MONTH_12" double precision
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "sage"."VAT_SUMMARY" (
	"VAT_BOX" smallint,
	"VAT_BOX_NAME" varchar,
	"TAX_CODE" varchar,
	"AMOUNT_INVOICE" double precision,
	"AMOUNT_CREDIT" double precision,
	"AMOUNT_BANK" double precision,
	"AMOUNT_JOURNAL" double precision,
	"AMOUNT_REFUND" double precision,
	"AMOUNT_DISCOUNT" double precision,
	"AMOUNT_REVALUATION" double precision,
	"HEADING_INVOICE" varchar,
	"HEADING_CREDIT" varchar,
	"HEADING_BANK" varchar,
	"HEADING_JOURNAL" varchar,
	"HEADING_REVALUATION" varchar,
	"HEADING_REFUND" varchar
);
